<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>杭电2024级《C语言程序设计》先修课-mooc作业</title>
    <link href="/2024/08/24/%E6%9D%AD%E7%94%B52024%E7%BA%A7%E3%80%8AC%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E3%80%8B%E5%85%88%E4%BF%AE%E8%AF%BE-mooc%E4%BD%9C%E4%B8%9A/"/>
    <url>/2024/08/24/%E6%9D%AD%E7%94%B52024%E7%BA%A7%E3%80%8AC%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E3%80%8B%E5%85%88%E4%BF%AE%E8%AF%BE-mooc%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="序言">序言</h1><p>这是笔者的c语言学习记录 内容覆盖c语言入门的基础知识 <span id="more"></span></p><h1 id="第一章-c语言概述">第一章 C语言概述</h1><h2 id="welcome-to-hdu">“Welcome to HDU!”</h2><p><strong>题目要求：</strong><br />本题要求编写程序，输出一个短句 “Welcome to HDU!”。</p><p><strong>输入格式:</strong> 本题目没有输入。</p><p><strong>输出格式：</strong><br />在一行中输出短句 “Welcome to HDU!”（引号无需输出） <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;  <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Welcome to HDU!&quot;</span>);  <br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;<br></code></pre></td></tr></table></figure></p><h2 id="加法运算">加法运算</h2><p><strong>题目内容：</strong><br />输入两个整数，计算、输出两数之和</p><p><strong>输入格式:</strong><br />输入一行，包含用空格分隔的两个整数（32 位 int 整数）</p><p><strong>输出格式：</strong><br />输出一个整数，表示两数之和（32 位 int 整数） <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;  <br>    <span class="hljs-type">int</span> a, b;   <br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);  <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, a + b);  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;   <br>&#125;<br></code></pre></td></tr></table></figure></p><h2 id="标准体重">标准体重</h2><p><strong>题目内容：</strong><br />据说一个人的标准体重应该是其身高（单位：厘米）减去 100、再乘以 0.9所得到的公斤数。现给定某人身高，请你计算其标准体重应该是多少？</p><p><strong>输入格式:</strong><br />输入第一行给出一个正整数 H（100 &lt; H ≤ 300），为某人身高。</p><p><strong>输出格式:</strong><br />在一行中输出对应的标准体重，单位为公斤，保留小数点后 1 位。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;  <br>    <span class="hljs-type">int</span> height; <span class="hljs-comment">// 定义一个整型变量，用于存储身高  </span><br>    <span class="hljs-type">float</span> standard_weight; <span class="hljs-comment">// 定义一个浮点型变量，用于存储标准体重  </span><br>  <br>    <span class="hljs-comment">// 读取身高值  </span><br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;height);  <br>  <br>    <span class="hljs-comment">// 计算标准体重  </span><br>    standard_weight = (height - <span class="hljs-number">100</span>) * <span class="hljs-number">0.9</span>;  <br>  <br>    <span class="hljs-comment">// 输出标准体重，保留小数点后一位  </span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.1f\n&quot;</span>, standard_weight);  <br>  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <span class="hljs-comment">// 返回 0 表示程序成功执行  </span><br>&#125;<br></code></pre></td></tr></table></figure></p><h1 id="第二章-基本数据类型和输入输出">第二章基本数据类型和输入输出</h1><h2 id="面积公式">面积公式</h2><p><strong>题目内容:</strong><br />请编写程序，输入三角形的底 和高，计算并输出三角形的面积。</p><p><strong>输入格式</strong><br />一行包含两个正实数，空格分隔，表示底和高</p><p><strong>输出格式</strong><br />一个实数，2 位小数</p><p><strong>输入样例</strong><br />1.5 2.4</p><p><strong>输出样例:</strong><br />1.80 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;  <br>    <span class="hljs-type">double</span> base, height;  <br>    <span class="hljs-comment">// 读取底边和高度  </span><br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lf %lf&quot;</span>, &amp;base, &amp;height);  <br>    <span class="hljs-comment">// 计算三角形的面积  </span><br>    <span class="hljs-type">double</span> area = (base * height) / <span class="hljs-number">2</span>;  <br>    <span class="hljs-comment">// 输出面积，保留两位小数  </span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2lf\n&quot;</span>, area);  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;<br></code></pre></td></tr></table></figure></p><h2 id="加减乘除">加减乘除</h2><p><strong>题目内容:</strong><br />本题要求编写程序，计算并输出 2个正整数的和、差、积。题目保证输入和输出全部在整型范围内。输入格式:<br />输入在一行中给出 2 个正整数 A 和 B。</p><p><strong>输出格式:</strong><br />分行按照格式 “A 运算符 B = 结果” 顺序输出和、差、积。</p><p><strong>输入样例:</strong><br />7 8</p><p><strong>输出样例:</strong><br />7+8=15<br />7-8=-1<br />7*8=56 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;  <br>    <span class="hljs-type">int</span> a, b;  <br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);  <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d+%d=%d\n&quot;</span>, a, b, a + b);  <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d-%d=%d\n&quot;</span>, a, b, a - b);  <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d*%d=%d\n&quot;</span>, a, b, a * b);  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;<br></code></pre></td></tr></table></figure></p><h2 id="欠债还钱">欠债还钱</h2><p><strong>题目内容：</strong><br />阿福打算向朋友借钱，请输入一个浮点数 m 和一个整数n，分别表示他想借的钱数和借期，程序输出他的意图。</p><p><strong>输入格式:</strong><br />输入在一行中给出 1 个浮点数和 1 个整数，二者均大于 0。</p><p><strong>输出格式:</strong><br />输出的钱数保留两位小数，格式如下所示：<br />你好，可以借我 XX.XX 元钱吗？<br />X 天后一定还！</p><p><strong>输入样例:</strong><br />166.66 7</p><p><strong>输出样例:</strong> 你好，可以借我 166.66 元钱吗？<br />7 天后一定还！ <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;  <br><span class="hljs-type">double</span> m;  <br><span class="hljs-type">int</span> n;  <br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lf%d&quot;</span>,&amp;m,&amp;n);  <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;你好，可以借我%.2lf元钱吗？\n&quot;</span>,m);  <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d天后一定还！&quot;</span>,n);  <br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;<br></code></pre></td></tr></table></figure></p><h1 id="第三章-运算符和表达式">第三章 运算符和表达式</h1><h2 id="判断闰年">判断闰年</h2><p><strong>题目内容:</strong><br />输入年份判断该年份是否是闰年。闰年的判定条件是能被 400 整除或能被 4整除但不能被 100 整除的年份</p><p><strong>输入格式:</strong><br />输入年份，判断其是否闰年。</p><p><strong>输出格式:</strong><br />YES 或 NO</p><p><strong>输入样例:</strong><br />2000</p><p><strong>输出样例:</strong><br />YES <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;  <br>    <span class="hljs-type">int</span> year;  <br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;year);  <br>    <span class="hljs-keyword">if</span> ((year % <span class="hljs-number">400</span> == <span class="hljs-number">0</span>) || (year % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> &amp;&amp; year % <span class="hljs-number">100</span> != <span class="hljs-number">0</span>)) &#123;  <br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;YES\n&quot;</span>);  <br>    &#125; <span class="hljs-keyword">else</span> &#123;  <br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NO\n&quot;</span>);  <br>    &#125;  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;<br></code></pre></td></tr></table></figure></p><h2 id="移花接木">移花接木</h2><p><strong>题目内容:</strong><br />输入两个浮点数，将第二个数的小数部分拼接到第一个数的整数部分将第一个数的小数部分拼接到第二个数的整数部分。然后输出新生成的浮点数。</p><p><strong>输入格式:</strong><br />输入两个浮点数。(注意可能有负数)</p><p><strong>输出格式:</strong><br />输出新生成的两个浮点数。(输出保留 6 位小数)</p><p><strong>输入样例 1:</strong><br />135.79 24.068</p><p><strong>输出样例 1:</strong><br />135.068000 24.790000</p><p><strong>输入样例 2:</strong><br />-1.23 4.56</p><p><strong>输出样例 2:</strong><br />-1.560000 4.230000</p><h3 id="我的版本">我的版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span>  </span><br>  <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span>  </span><br><span class="hljs-function"></span>&#123;  <br><span class="hljs-type">double</span> n1,n2,i1,i2,f1,f2,r1,r2;  <br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lf %lf&quot;</span>,&amp;n1,&amp;n2);  <br>i1=(<span class="hljs-type">int</span>)n1;  <br>i2=(<span class="hljs-type">int</span>)n2;  <br>f1 = (n2 &lt; <span class="hljs-number">0</span> ? <span class="hljs-number">-1</span> : <span class="hljs-number">1</span>) * (<span class="hljs-built_in">fabs</span>(n1) - (<span class="hljs-type">int</span>)<span class="hljs-built_in">fabs</span>(n1));  <br>f2 = (n1 &lt; <span class="hljs-number">0</span> ? <span class="hljs-number">-1</span> : <span class="hljs-number">1</span>) * (<span class="hljs-built_in">fabs</span>(n2) - (<span class="hljs-type">int</span>)<span class="hljs-built_in">fabs</span>(n2));  <br>r1=i1+f2;  <br>r2=i2+f1;  <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lf %lf&quot;</span>,r1,r2);  <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="张跃哲同学的版本">张跃哲同学的版本</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;math.h&gt;</span>  </span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;  <br><span class="hljs-type">double</span> n1, n2;  <span class="hljs-comment">//原数  </span><br><span class="hljs-type">int</span> i1 , i2;    <span class="hljs-comment">//取整数  </span><br><span class="hljs-type">double</span> f1, f2;  <span class="hljs-comment">//取小数  </span><br>scanf_s(<span class="hljs-string">&quot;%lf%lf&quot;</span>, &amp;n1, &amp;n2);  <br>i1 = (<span class="hljs-type">int</span>)n1;<span class="hljs-comment">//注意，强制转换成int，向零取整  </span><br>i2 = (<span class="hljs-type">int</span>)n2;  <br>f1 = n1 - i1;<span class="hljs-comment">//正数情况即直接就是小数  </span><br>f2 = n2 - i2;<span class="hljs-comment">//负数情况即为带符号的小数 即-1.23转化为0.23  </span><br><span class="hljs-comment">//注意第一个数加上第二个数的小数部分，小数部分看第一个数的符号  </span><br>n1 = i1+((n1 == <span class="hljs-built_in">fabs</span>(n1)) * <span class="hljs-number">2</span> - <span class="hljs-number">1</span>) * <span class="hljs-built_in">fabs</span>(f2);  <br>n2 = i2 + ((n2 == <span class="hljs-built_in">fabs</span>(n2)) * <span class="hljs-number">2</span> - <span class="hljs-number">1</span>) * <span class="hljs-built_in">fabs</span>(f1);  <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lf %lf\n&quot;</span>, n1, n2);  <br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="陈怀宇同学的版本">陈怀宇同学的版本</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br>  <br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;  <br>    <span class="hljs-type">double</span> a,b;  <br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lf %lf&quot;</span>, &amp;a, &amp;b);  <br>    <span class="hljs-keyword">if</span> (a*b &gt;= <span class="hljs-number">0</span>)&#123;  <br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.6lf %.6lf&quot;</span>, (<span class="hljs-type">int</span>)a+b-(<span class="hljs-type">int</span>)b, (<span class="hljs-type">int</span>)b+a-(<span class="hljs-type">int</span>)a);  <br>    &#125;  <br>    <span class="hljs-keyword">else</span> &#123;  <br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.6lf %.6lf&quot;</span>, (<span class="hljs-type">int</span>) a - b + (<span class="hljs-type">int</span>) b, (<span class="hljs-type">int</span>) b - a + (<span class="hljs-type">int</span>) a);  <br>    &#125;  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="陈冠亨同学的版本">陈冠亨同学的版本</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span>  </span><br>  <br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MAX_LENGTH 100  </span><br>  <br><span class="hljs-type">void</span> <span class="hljs-title function_">swap_integer_and_decimal</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *num1, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *num2, <span class="hljs-type">char</span> *result)</span> &#123;  <br>    <span class="hljs-type">char</span> int_part1[MAX_LENGTH], decimal_part1[MAX_LENGTH];  <br>    <span class="hljs-type">char</span> int_part2[MAX_LENGTH], decimal_part2[MAX_LENGTH];  <br>  <br>    <span class="hljs-comment">// 找到第一个数字的小数点  </span><br>    <span class="hljs-type">char</span> *decimal1 = <span class="hljs-built_in">strchr</span>(num1, <span class="hljs-string">&#x27;.&#x27;</span>);  <br>    <span class="hljs-type">char</span> *decimal2 = <span class="hljs-built_in">strchr</span>(num2, <span class="hljs-string">&#x27;.&#x27;</span>);  <br>  <br>    <span class="hljs-comment">// 如果找到小数点  </span><br>    <span class="hljs-keyword">if</span> (decimal1 != <span class="hljs-literal">NULL</span> &amp;&amp; decimal2 != <span class="hljs-literal">NULL</span>) &#123;  <br>        <span class="hljs-comment">// 提取整数部分和小数部分  </span><br>        <span class="hljs-built_in">strncpy</span>(int_part1, num1, decimal1 - num1);  <br>        int_part1[decimal1 - num1] = <span class="hljs-string">&#x27;\0&#x27;</span>;  <br>        <span class="hljs-built_in">strcpy</span>(decimal_part1, decimal1 + <span class="hljs-number">1</span>);  <br>  <br>        <span class="hljs-built_in">strncpy</span>(int_part2, num2, decimal2 - num2);  <br>        int_part2[decimal2 - num2] = <span class="hljs-string">&#x27;\0&#x27;</span>;  <br>        <span class="hljs-built_in">strcpy</span>(decimal_part2, decimal2 + <span class="hljs-number">1</span>);  <br>  <br>        <span class="hljs-comment">// 生成结果字符串  </span><br>        <span class="hljs-built_in">snprintf</span>(result, MAX_LENGTH, <span class="hljs-string">&quot;%s.%s %s.%s&quot;</span>, int_part2, decimal_part1, int_part1, decimal_part2);  <br>    &#125; <span class="hljs-keyword">else</span> &#123;  <br>        <span class="hljs-built_in">strcpy</span>(result, <span class="hljs-string">&quot;Invalid input format&quot;</span>);  <br>    &#125;  <br>&#125;  <br>  <br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;  <br>    <span class="hljs-type">char</span> input1[MAX_LENGTH];  <br>    <span class="hljs-type">char</span> input2[MAX_LENGTH];  <br>    <span class="hljs-type">char</span> result[MAX_LENGTH];  <br>  <br>    <span class="hljs-comment">// 从标准输入读取数据  </span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Enter two decimal numbers separated by space: &quot;</span>);  <br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s %s&quot;</span>, input1, input2);  <br>  <br>    <span class="hljs-comment">// 进行整数部分和小数部分的互换  </span><br>    swap_integer_and_decimal(input1, input2, result);  <br>  <br>    <span class="hljs-comment">// 输出结果  </span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Swapped result: %s\n&quot;</span>, result);  <br>  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;<br></code></pre></td></tr></table></figure><h2 id="三目运算">三目运算</h2><p><strong>题目内容:</strong> 输入四个浮点数，只用三目运算符 (不能用 if等条件语句或循环语句) 找出其中的最大值和最小值。</p><p><strong>输入格式：</strong> 第一行输入四个数值；</p><p><strong>输出格式:</strong> 最大值 最小值 (结果保留两位小数)</p><p><strong>输入样例:</strong> 5 9 3 7.0</p><p><strong>输出样例:</strong> 9.00 3.00 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span>  </span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;  <br><span class="hljs-type">double</span> a, b, c, d;  <br><span class="hljs-type">double</span> max, min;  <br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lf%lf%lf%lf&quot;</span>, &amp;a, &amp;b, &amp;c, &amp;d);  <br>max = a &gt; b ? a : b;  <br>max = max &gt; c ? max : c;  <br>max = max &gt; d ? max : d;  <br>min = a &gt; b ? b : a;  <br>min = min &gt; c ? c : min;  <br>min = min &gt; d ? d : min;  <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f %.2f&quot;</span>, max, min);  <br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;<br></code></pre></td></tr></table></figure></p><h1 id="第四章-程序流程控制">第四章 程序流程控制</h1><h2 id="阿福家的电费">阿福家的电费</h2><p><strong>题目内容：</strong><br />入秋了，家里的用电量也减少了许多。阿福收到了新一期的电费通知单，却发现本期电费与高温天的电费不相上下。杭州现行的阶梯电价是按照年用电量来划分的，这说明阿福家的低价电额度已用完，接下来可得节约用电咯。阿福想自己验证一下，今年以来代扣的总电费到底是否正确。请编写一个程序，已知今年1月份以来的各月用电量，根据电价规定，计算出今年应缴的总电费是多少。<br />杭州现行的阶梯电价标准分三档：<br />第一档：电量为年用电量 2760 度及以下部分，电价不作调整，标准电价为 0.538元 / 度；<br />第二档：电量为年用电量 2761 至 4800 度的部分，电价在第一档基础上加价0.05 元，为 0.588 元 / 度；<br />第三档：电量超过 4800 的部分，电价在第一档基础上加价 0.3 元，为 0.838 元/ 度。<br /><strong>输入格式:</strong><br />输入占一行，给出若干个整数（以输入 - 1 表示结束），分别表示从 1月开始各个月份的用电量（单位是度），注意：-1 不算用电量。</p><p><strong>输出格式：</strong><br />输出总电费（单位是元），结果保留 1 位小数。</p><p><strong>输入样例：</strong><br />468 489 370 363 397 380 712 679 484 453 462 -1</p><p><strong>输出样例：</strong><br />3067.4 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">int</span> i,sum,a[<span class="hljs-number">13</span>];<br><span class="hljs-type">double</span> r;<br><br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">12</span>;i+=<span class="hljs-number">1</span>)&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;a[i]);<br><span class="hljs-keyword">if</span> (a[i]==<span class="hljs-number">-1</span>)&#123;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>sum+=a[i];<br><br>&#125;<br><br><br><span class="hljs-keyword">if</span> (sum&lt;=<span class="hljs-number">2760</span>)&#123;<br>r=sum*<span class="hljs-number">0.538</span>;<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(sum&gt;<span class="hljs-number">2760</span>&amp;&amp;sum&lt;=<span class="hljs-number">4800</span>)&#123;<br>r=<span class="hljs-number">2760</span>*<span class="hljs-number">0.538</span>+(sum<span class="hljs-number">-2760</span>)*<span class="hljs-number">0.588</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>r=<span class="hljs-number">0.838</span>*(sum<span class="hljs-number">-4800</span>)+<span class="hljs-number">2760</span>*<span class="hljs-number">0.538</span>+(<span class="hljs-number">4800</span><span class="hljs-number">-2760</span>)*<span class="hljs-number">0.588</span>;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.1f&quot;</span>,r);<br>&#125;<br></code></pre></td></tr></table></figure></p><h2 id="幂级数求近似值">幂级数求近似值</h2><p><strong>题目内容：</strong> 已知函数 的幂级数展开式为。现给定一个实数 和一个整数 ，利用此幂级数展开式的前 n+1 项之和，求的近似值。</p><p><strong>输入格式:</strong> 输入在一行中给出一个实数 x 和一个整数n。</p><p><strong>输出格式：</strong><br />输出展开式的前 n+1 项之和，保留 4 位小数。</p><p><strong>输入样例：</strong><br />1.2 10</p><p><strong>输出样例：</strong> 3.3201 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span></span><br><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title function_">factorial</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span>;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">double</span> x,r=<span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> i,n;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lf %d&quot;</span>,&amp;x,&amp;n);<br><span class="hljs-keyword">if</span>(n!=<span class="hljs-number">0</span>)&#123;<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;n+<span class="hljs-number">1</span>;i+=<span class="hljs-number">1</span>)&#123;<br>r+=<span class="hljs-built_in">pow</span>(x,i)/factorial(i);<br>&#125;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.4lf&quot;</span>,r);<br>&#125;<br><br><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title function_">factorial</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span><br>&#123;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> result = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        result *= i;<br>    &#125;<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure></p><h2 id="素数口袋">素数口袋</h2><p><strong>题目内容：</strong><br />阿福有一个口袋，可以用来装各个素数。他从 2开始，依次判断各个自然数是不是素数，如果是素数就把这个数字装入口袋。口袋的承载量就是包里所有数字之和，但口袋的承载量有限。假设口袋的承载量是L，表示只能装得下总和不超过 L 的素数。现给出一个正整数L，请问口袋里能装下几个素数？将这些素数从小到大输出，再输出最多能装下的素数个数。</p><p><strong>输入格式:</strong><br />输入一个正整数 L（2&lt;=L&lt;=10000），表示最大承载量。</p><p><strong>输出格式：</strong><br />输出包括两行，第一行从小到大输出能装下的所有素数，数与数之间用空格隔开（注意：行末无空格）<br />第二行输出”count = 素数个数”</p><p><strong>输入样例：</strong><br />100</p><p><strong>输出样例：</strong><br />2 3 5 7 11 13 17 19 23<br />count = 9 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">isPrime</span><span class="hljs-params">(<span class="hljs-type">int</span> num)</span> &#123;<br>    <span class="hljs-keyword">if</span> (num &lt; <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i * i &lt;= num; i++) &#123;<br>        <span class="hljs-keyword">if</span> (num % i == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> L;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;L);<br><br>    <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> count = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> num = <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">while</span> (sum + num &lt;= L) &#123;<br>        <span class="hljs-keyword">if</span> (isPrime(num)) &#123;<br>            <span class="hljs-keyword">if</span> (count &gt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>            &#125;<span class="hljs-comment">//通过循环处理空格</span><br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, num);<br>            sum += num;<br>            count++;<br>        &#125;<br>        num++;<br>    &#125;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\ncount = %d&quot;</span>, count);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p><h1 id="第五章-数组">第五章 数组</h1><h2 id="支撑数">支撑数</h2><p><strong>题目内容：</strong> 找出一个数列中全部的“支撑数”。“支撑数”有这样的特征：它们不在第一个，也不在最后一个，而且比左边和右边相邻的数都大。</p><p><strong>输入格式:</strong><br />第一行输入一个整数n，表示数列中有n个整数。（3&lt;=n&lt;=100） 第二行输入n个整数。</p><p><strong>输出格式：</strong><br />分行输出所有的支撑数，每行输出一个支撑数（保证至少有一个）。</p><p><strong>输入样例：</strong><br />6 1 3 2 4 1 5</p><p><strong>输出样例：</strong><br />3 4 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br><span class="hljs-type">int</span> n,i;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br><span class="hljs-type">int</span> a[n];<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;a[i]);<br>&#125;<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;n<span class="hljs-number">-1</span>;i++)&#123;<br><span class="hljs-keyword">if</span>(a[i<span class="hljs-number">-1</span>]&lt;a[i]&amp;&amp;a[i]&gt;a[i+<span class="hljs-number">1</span>])&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,a[i]);<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></p><h2 id="上三角矩阵">上三角矩阵</h2><p><strong>题目内容：</strong>上三角矩阵指主对角线以下的元素都为0的矩阵（不包括主对角线）；主对角线为从矩阵的左上角至右下角的连线。本题要求编写程序，判断一个给定的方阵是否上三角矩阵。</p><p><strong>输入格式:</strong><br />输入第一行给出一个正整数N（2≤N≤10)。随后N行，每行给出N个整数，其间以空格分隔。</p><p><strong>输出格式：</strong><br />如果输入的矩阵是上三角矩阵，输出YES，否则输出NO。</p><p><strong>输入样例：</strong></p><p>5</p><p>1 2 3 4 5</p><p>0 1 2 3 4</p><p>0 0 1 2 3</p><p>0 0 0 1 2</p><p>0 0 0 0 1</p><p><strong>输出样例：</strong></p><p>YES <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br><br>    <span class="hljs-type">int</span> matrix[n][n];<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; n; j++) &#123;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;matrix[i][j]);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-type">int</span> isUpperTriangular = <span class="hljs-number">1</span>;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; i; j++) &#123;<br>            <span class="hljs-keyword">if</span> (matrix[i][j]!= <span class="hljs-number">0</span>) &#123;<br>                isUpperTriangular = <span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!isUpperTriangular) &#123;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (isUpperTriangular) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;YES\n&quot;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NO\n&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p><h2 id="按绝对值排序">按绝对值排序</h2><p><strong>题目内容：</strong>输入n(n&lt;=100)个整数，按照绝对值从大到小排序后输出</p><p><strong>输入格式：</strong><br />输入数据的第一个数字为n，接着是n个整数。</p><p><strong>输出格式：</strong><br />按照绝对值从大到小排序后输出n个整数，两数之间空格隔开，最后一个数后面无空格。</p><p><strong>输入样例：</strong><br />3 3 -4 2</p><p><strong>输出样例：</strong><br />-4 3 2 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span></span><br><br><span class="hljs-comment">// 冒泡排序函数</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">bubbleSort</span><span class="hljs-params">(<span class="hljs-type">int</span> arr[], <span class="hljs-type">int</span> n)</span> &#123;<br>    <span class="hljs-type">int</span> i, j;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; n - <span class="hljs-number">1</span>; i++) &#123;<br>        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; n - i - <span class="hljs-number">1</span>; j++) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">fabs</span>(arr[j]) &lt; <span class="hljs-built_in">fabs</span>(arr[j + <span class="hljs-number">1</span>])) &#123;<br>                <span class="hljs-type">int</span> temp = arr[j];<br>                arr[j] = arr[j + <span class="hljs-number">1</span>];<br>                arr[j + <span class="hljs-number">1</span>] = temp;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br><br>    <span class="hljs-type">int</span> arr[n];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;arr[i]);<br>    &#125;<br><br>    bubbleSort(arr, n);<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n - <span class="hljs-number">1</span>; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, arr[i]);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, arr[n - <span class="hljs-number">1</span>]);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p><h1 id="第六章-函数">第六章 函数</h1><h2 id="判断是否为完数">判断是否为完数</h2><p><strong>题目内容：</strong>编写函数，判断一个正整数a是否为完数，如果是完数，函数返回值为1；否则为0.（完数：一个数的所有因子之和等于该本身，如6、28都是完数；6=1+2+3；28=1+2+4+7+14）</p><p><strong>输入格式:</strong><br />输入一个正整数。</p><p><strong>输出格式：</strong><br />如果是，输出“是完数”，否则输出“不是完数”</p><p><strong>输入样例1：</strong><br />6</p><p><strong>输出样例1：</strong><br />是完数</p><p><strong>输入样例2：</strong><br />25</p><p><strong>输出样例2：</strong><br />不是完数 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">ws</span><span class="hljs-params">(<span class="hljs-type">int</span> num)</span> &#123;<br>    <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; num; i++) &#123;<br>        <span class="hljs-keyword">if</span> (num % i == <span class="hljs-number">0</span>) &#123;<br>            sum += i;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (sum == num) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> num;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;num);<br>    <span class="hljs-keyword">if</span> (ws(num)) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;是完数\n&quot;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;不是完数\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p><h2 id="递归求-fabonacci-数列">递归求 Fabonacci 数列</h2><p><strong>题目内容：</strong><br />本题要求实现求 Fabonacci 数列项的函数。Fabonacci 数列的定义如下：<br />f (n)=f (n−2)+f (n−1) (n≥2)，其中 f (0)=0，f (1)=1。<br />题目保证输入输出在长整型范围内。建议用递归实现.</p><p><strong>输入格式:</strong><br />输入一个正整数 n</p><p><strong>输出格式：</strong><br />输出 f (n) 的值。</p><p><strong>输入样例：</strong><br />6</p><p><strong>输出样例：</strong><br />8 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title function_">f</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span> &#123;<br>    <span class="hljs-keyword">if</span> (n == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (n == <span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> f(n - <span class="hljs-number">2</span>) + f(n - <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld\n&quot;</span>, f(n));<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p><h2 id="输出一个整数的逆序数10分">输出一个整数的逆序数（10分）</h2><p><strong>题目内容：</strong> 实现一个求整数的逆序数的简单函数。</p><p><strong>输入格式:</strong><br />输入一个整数（可正可负）。</p><p><strong>输出格式：</strong><br />输出它的逆序，注意考虑正负。</p><p><strong>输入样例1：</strong><br />1234</p><p><strong>输出样例1：</strong><br />4321</p><p><strong>输入样例2：</strong><br />-12340</p><p><strong>输出样例2：</strong><br />-4321 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">reverse</span><span class="hljs-params">( <span class="hljs-type">int</span> number )</span>;<br>    <br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">int</span> n;<br><br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, reverse(n));<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">reverse</span><span class="hljs-params">( <span class="hljs-type">int</span> num)</span>&#123;<br><span class="hljs-type">int</span> r = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (num!= <span class="hljs-number">0</span>) &#123;<br>        r=r*<span class="hljs-number">10</span>+num%<span class="hljs-number">10</span>;<br>        num/=<span class="hljs-number">10</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> r;<br>&#125;<br></code></pre></td></tr></table></figure></p><h1 id="第七章-指针">第七章 指针</h1><h2 id="删除数列中的指定数">删除数列中的指定数</h2><p><strong>题目内容：</strong>请使用指针的方法编写程序，程序的功能是先输入10个整数存储到数组a中，再输入一个指定的数x，把数组中的x数据删除掉，并保证数组中剩余的数还是连续存储的。</p><p>比如输入10个整数：3 2 8 6 5 8 7 9 85，存入数组，然后输入一个数8，把数组中的8全部删除。最后数组中剩下的数：32 6 5 7 9 5，在数组a中还是连续存储的。</p><p>要求定义函数实现删除功能：int del_num(int *p, int n, intx)；其中函数的返回值为删除指定数后数组中剩余数据的个数。</p><p><strong>输入格式:</strong><br />输入10个整数，和1个指定数。</p><p><strong>输出格式：</strong><br />输出剩余数，以空格隔开，最后一个数后面没有空格。</p><p><strong>输入样例：</strong><br />3 2 8 6 5 8 7 9 8 5 8</p><p><strong>输出样例：</strong><br />3 2 6 5 7 9 5 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">del_num</span><span class="hljs-params">(<span class="hljs-type">int</span> *p, <span class="hljs-type">int</span> n, <span class="hljs-type">int</span> x)</span>;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> a[<span class="hljs-number">10</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-type">int</span> x;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;x);<br>    <span class="hljs-type">int</span> newLength = del_num(a, <span class="hljs-number">10</span>, x);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; newLength; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, a[i]);<br>        <span class="hljs-keyword">if</span> (i &lt; newLength - <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">del_num</span><span class="hljs-params">(<span class="hljs-type">int</span> *p, <span class="hljs-type">int</span> n, <span class="hljs-type">int</span> x)</span> &#123;<br>    <span class="hljs-type">int</span> j = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-keyword">if</span> (p[i]!= x) &#123;<br>            p[j++] = p[i];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> j;<br>&#125;<br></code></pre></td></tr></table></figure></p><h2id="求一组数中的最大值最小值及总和">求一组数中的最大值、最小值及总和</h2><p><strong>题目内容：</strong>求一组数中的最大值、最小值及总和。要求定义函数 int f(int a[],int n,int<em>pmax,int </em>pmin) 函数返回总和，并分别通过指针pmax 和pmin将最大值、最小值赋值给主函数中的对应变量。</p><p><strong>输入格式:</strong><br />第1行为正整数n（n&gt;2）,表示一组数的个数第2行包含n个整数，用空格分隔。</p><p><strong>输出格式：</strong><br />一行包含3个整数，分别为最大值、最小值及总和</p><p><strong>输入样例：</strong><br />10 2 5 4 8 6 9 1 3 7 0</p><p><strong>输出样例：</strong><br />9 0 45 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">f</span><span class="hljs-params">(<span class="hljs-type">int</span> a[], <span class="hljs-type">int</span> n, <span class="hljs-type">int</span> *pmax, <span class="hljs-type">int</span> *pmin)</span>;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-type">int</span> a[n];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-type">int</span> max, min;<br>    <span class="hljs-type">int</span> sum = f(a, n, &amp;max, &amp;min);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>, max, min, sum);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">f</span><span class="hljs-params">(<span class="hljs-type">int</span> a[], <span class="hljs-type">int</span> n, <span class="hljs-type">int</span> *pmax, <span class="hljs-type">int</span> *pmin)</span> &#123;<br>    *pmax = a[<span class="hljs-number">0</span>];<br>    *pmin = a[<span class="hljs-number">0</span>];<br>    <span class="hljs-type">int</span> sum = a[<span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-keyword">if</span> (a[i] &gt; *pmax) &#123;<br>            *pmax = a[i];<br>        &#125;<br>        <span class="hljs-keyword">if</span> (a[i] &lt; *pmin) &#123;<br>            *pmin = a[i];<br>        &#125;<br>        sum += a[i];<br>    &#125;<br>    <span class="hljs-keyword">return</span> sum;<br>&#125;<br></code></pre></td></tr></table></figure></p><h1 id="第八章-字符串">第八章 字符串</h1><h2 id="查找字符串">查找字符串</h2><p><strong>题目内容：</strong>给定一个字符串，在字符串中找到第一个连续出现至少k次的字符。</p><p><strong>输入格式:</strong><br />第一行包含一个正整数k，表示至少需要连续出现的次数。1 &lt;= k &lt;= 100。第二行包含需要查找的字符串。字符串长度在1到100之间，且不包含任何空白符。</p><p><strong>输出格式：</strong><br />若存在连续出现至少k次的字符，输出该字符；否则输出NO。</p><p><strong>输入样例1：</strong><br />3 abcccaaab</p><p><strong>输出样例1：</strong><br />c</p><p><strong>输入样例2：</strong><br />3 abccaab</p><p><strong>输出样例2：</strong><br />NO <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> k;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;k);<br>    <span class="hljs-type">char</span> s[<span class="hljs-number">101</span>];<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>, s);<br>    <span class="hljs-type">int</span> len = <span class="hljs-built_in">strlen</span>(s);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>        <span class="hljs-type">int</span> count = <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = i + <span class="hljs-number">1</span>; j &lt; len; j++) &#123;<br>            <span class="hljs-keyword">if</span> (s[j] == s[i]) &#123;<br>                count++;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (count &gt;= k) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c\n&quot;</span>, s[i]);<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NO\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p><h2 id="求最大字符串">求最大字符串</h2><p><strong>题目内容：</strong>本题要求编写程序，针对输入的N个字符串，输出其中最大的字符串。</p><p><strong>输入格式：</strong><br />输入第一行给出正整数N；随后N行，每行给出一个长度小于80的非空字符串，其中不会出现换行符，空格，制表符。</p><p><strong>输出格式：</strong><br />输出最大的字符串。</p><p><strong>输入样例：</strong><br />6<br />best cat east a free day</p><p><strong>输出样例：</strong><br />free <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-type">char</span> maxStr[<span class="hljs-number">80</span>];<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>, maxStr);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-type">char</span> str[<span class="hljs-number">80</span>];<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>, str);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(str, maxStr) &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-built_in">strcpy</span>(maxStr, str);<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>, maxStr);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p><h1 id="第九章-结构体">第九章 结构体</h1><h2 id="最高分的学生">最高分的学生</h2><p><strong>题目内容：</strong>输入学生的人数，然后再输入每位学生的分数和姓名，求获得最高分数的学生的姓名。</p><p><strong>输入格式:</strong><br />第一行输入一个正整数N（N &lt;=100），表示学生人数。接着输入N行，每行格式如下： 分数 姓名分数是一个非负整数，且小于等于100；姓名为一个连续的字符串，中间没有空格，长度不超过20。</p><p><strong>输出格式：</strong><br />输出最高分数的学生姓名。每行包含一个姓名</p><p><strong>输入样例：</strong><br />5 87 lilei 99 hanmeimei 97 lily 99 lucy 77 jim</p><p><strong>输出样例：</strong><br />hanmeimei lucy <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">student</span> &#123;</span><br>    <span class="hljs-type">int</span> score;<br>    <span class="hljs-type">char</span> name[<span class="hljs-number">21</span>];<br>&#125;;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">student</span> <span class="hljs-title">students</span>[<span class="hljs-title">n</span>];</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %s&quot;</span>, &amp;students[i].score, students[i].name);<br>    &#125;<br>    <span class="hljs-type">int</span> maxScore = students[<span class="hljs-number">0</span>].score;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-keyword">if</span> (students[i].score &gt; maxScore) &#123;<br>            maxScore = students[i].score;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-keyword">if</span> (students[i].score == maxScore) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>, students[i].name);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p><h1 id="第十章-文件">第十章 文件</h1>]]></content>
    
    
    
    <tags>
      
      <tag>c语言</tag>
      
      <tag>杭电</tag>
      
      <tag>Mooc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的markdown学习</title>
    <link href="/2024/08/23/%E6%88%91%E7%9A%84markdown%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/08/23/%E6%88%91%E7%9A%84markdown%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="序言">序言</h1><p>这是笔者的markdown学习笔记 <span id="more"></span></p><hr /><h1 id="文本">文本</h1><p><strong>加粗文本1</strong> <strong>加粗文本2</strong> <em>斜体1</em><em>斜体2</em> <strong><em>加粗+斜体</em></strong> <del>中划线</del>分割线</p><hr /><h1 id="列表">列表</h1><ul><li>无序列表1</li><li>无序列表2</li></ul><ol type="1"><li>有序列表1<ul><li>二级列表<ul><li>三级列表</li></ul></li></ul></li><li>有序列表2（只能按顺序，第一项可自定义)</li></ol><p>退出列表 * [ ] 任务打勾1（未完成） * [x] 任务打勾2（已完成）</p><hr /><h1 id="代码">代码</h1><p>代码块 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span> </span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> <br>&#123; <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Hello, World!\n&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <br>&#125;<br></code></pre></td></tr></table></figure> 代码语句<code>printf()</code></p><hr /><h1 id="引用">引用</h1><blockquote><p>引用<br />引用中换行</p></blockquote><hr /><h1 id="链接">链接</h1><p><a href="https://www.gov.cn/">链接</a>&lt;——点它</p><p><ahref="https://www.bilibili.com/video/BV18E4m1d7b7/?spm_id_from=333.337.search-card.all.click&amp;vd_source=da905aeb41d3bbab09f2abf41b856272">不要点我</a></p><p>展示脚注<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="我是脚注">[1]</span></a></sup></p><hr /><h1 id="图片">图片</h1><p>图片的插入 网络 <imgsrc="https://patchwiki.biligame.com/images/ys/2/2e/ang2w3cxk8535wicpksvz6pq0xoxbwi.png"alt="图片网络链接" />图片（做了图床用的gitee，但是好像不行。现在是用现成的） <imgsrc="https://pic.imgdb.cn/item/66c86b27d9c307b7e9722e08.jpg"alt="本地图片" /> 用gitee的 <imgsrc="https://gitee.com/Even_lwx/images/raw/master/ymh.jpg"alt="ymh" /></p><hr /><h1 id="表格">表格</h1><table><thead><tr class="header"><th style="text-align: center;">姓名</th><th style="text-align: center;">年龄</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">小明</td><td style="text-align: center;">17</td></tr><tr class="even"><td style="text-align: center;">小豪</td><td style="text-align: center;">18</td></tr></tbody></table><hr /><h1 id="自制html内容">自制HTML内容</h1><p>不会！！！</p><hr /><h1 id="tag插件高亮">Tag插件（高亮）</h1><div class="note note-warning">            <p>我是警告色（高亮文本）</p>          </div><p>方法 <imgsrc="https://pic.imgdb.cn/item/66c88f63d9c307b7e9afbf44.png" /></p><hr /><h1 id="数学公式嵌入需要另外渲染">数学公式嵌入（需要另外渲染）</h1><p><span class="math inline">\(x=1+y\)</span> <spanclass="math display">\[\frac{x+1}{20-x}\]</span> <span class="math display">\[x_2^2\]</span> <span class="math display">\[\sqrt[3]{\{[(4+x)-3]*3\}}\]</span> 符号 <span class="math display">\[\not=         \approx\leq\geq\times\div\pm\sum_0^n\prod\coprod\overline{1+2+3+4}\]</span> 常见表达 <span class="math display">\[\alpha\beta\mu\epsilon180^\circ\sin\pi\cos\cot\tan\in\notin\supset\supseteq\bigcap\bigcup\emptyset\infty\int\iinty\prime\lim\]</span> 排版 <span class="math display">\[\int_0^1x^2dx\]</span> <span class="math display">\[\lim_{n\rightarrow+\infty} \frac{1}{n}\]</span></p><hr /><h1 id="尾声">尾声</h1><p>目前内容的源码稍后上传 持续更新中 ——2024.8.23</p><hr /><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>我是脚注<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    
    <tags>
      
      <tag>study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客-学习日志</title>
    <link href="/2024/08/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/08/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>大家好 明天再学md语法！今天配置网站顶不住了。 ————2024.8.22</p><p>昨天连不上git库的原因时watt tookit没有关 配置的时候一定要注意！！！今天下午学了markdown语法 ————2024.8.23</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
