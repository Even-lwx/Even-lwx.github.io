<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>线性代数复习过程中的问题及重要结论</title>
      <link href="/2025/01/08/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%A4%8D%E4%B9%A0%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E9%87%8D%E8%A6%81%E7%BB%93%E8%AE%BA/"/>
      <url>/2025/01/08/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%A4%8D%E4%B9%A0%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E9%87%8D%E8%A6%81%E7%BB%93%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<div class="note warning flat"><p>由于前三章为期中考内容,本文较少涉及</p></div><p>前两章内容可以看<strong>伍耀文</strong>同学整理的：:</p><p>https://pan.baidu.com/s/1frfdlhr7z33ZlJUp_STICQ?pwd=7w72 提取码:7w72</p><p>以下为杭电历年期末试卷：</p><p>https://pan.baidu.com/s/1srFeirXys95NvtCtkgGK5Q?pwd=p8bf 提取码: p8bf# 第1章</p><h2 id="沙路法萨吕法则适用范围">沙路法（萨吕法则）适用范围</h2><div class="note warning flat"><p>三阶以上行列式不适用</p></div><p><a href="http://www.shuxueji.com/w/48891">萨吕法则-数学百科(shuxueji.com)</a></p><h1 id="第2章">第2章</h1><h2 id="易忘记的计算公式">易忘记的计算公式</h2><p><span class="math display">\[AA^{*} =A^{*}A=\left |A  \right |E\]</span></p><h1 id="第3章-矩阵的初等变换与线性方程组">第3章矩阵的初等变换与线性方程组</h1><h2 id="线性方程组的解">线性方程组的解</h2><p><imgsrc="https://pic1.imgdb.cn/item/677e6c53d0e0a243d4f23978.png" /></p><h1 id="第4章-向量组的线性相关性">第4章 向量组的线性相关性</h1><h2 id="判别向量组的线性相关性">判别向量组的线性相关性</h2><h3 id="数字型">数字型</h3><p>两个向量对应成比例</p><p>多个向量：方阵行列式=0或者矩阵的秩=向量个数</p><div class="note warning flat"><p>个数&gt;维数一定相关</p></div><h3 id="抽象型">抽象型</h3><p>1.抽象向量组的表示方法（逆向思维）：</p><p>eg. <span class="math display">\[\left(\alpha_{1},\alpha_{4}\right)\left(\begin{array}{ll}1 &amp; 2 \\3 &amp; 4\end{array}\right)=\left(\alpha_{1}+3 \alpha_{2}, 2 \alpha_{1}+4\alpha_{2}\right)\]</span></p><p>2.判断是否可逆</p><p>无关组*可逆阵-&gt;无关</p><p>无关组*不可逆阵-&gt;相关</p><h2 id="求向量组的秩和最大无关组">求向量组的秩和最大无关组</h2><p>秩=矩阵阶梯型非0行数</p><p>极大无关组一般取“拐弯处”所在的列向量</p><h2 id="基础解系">基础解系</h2><p>齐次线性方程组的解空间的一个基为该齐次线性方程组的<strong>基础解系</strong></p><p>线性方程组构成的矩阵<span class="math display">\[A_{m\times n}\]</span> 基础解系所含解向量的个数=n-r（A）个=自由变量个数</p><h1 id="第5章-相似矩阵及二次型">第5章 相似矩阵及二次型</h1><h2 id="施密特正交化公式">施密特正交化公式</h2><p>详解+示例:<ahref="https://blog.csdn.net/hpdlzu80100/article/details/100677372">线性代数学习笔记——第七十讲——格拉姆—施密特（Gram-Schmidt）正交化方法-CSDN博客</a>公式 <span class="math display">\[\begin{array}{l}\beta_{1}=\alpha_{1} \\\beta_{2}= \alpha_{2}-\frac{\left(\alpha_{2},\beta_{1}\right)}{\left(\beta_{1}, \beta_{1}\right)} \beta_{1} \\\beta_{3}= \alpha_{3}-\frac{\left(\alpha_{3},\beta_{1}\right)}{\left(\beta_{1}, \beta_{1}\right)}\beta_{1}-\frac{\left(\alpha_{3}, \beta_{2}\right)}{\left(\beta_{2},\beta_{2}\right)} \beta_{2} \\\ldots \ldots \ldots \\\beta_{s}= \alpha_{s}-\frac{\left(\alpha_{s},\beta_{1}\right)}{\left(\beta_{1}, \beta_{1}\right)}\beta_{1}-\frac{\left(\alpha_{s}, \beta_{2}\right)}{\left(\beta_{2},\beta_{2}\right)} \beta_{2}-\cdots-\frac{\left(\alpha_{s},\beta_{s-1}\right)}{\left(\beta_{s-1}, \beta_{s-1}\right)} \beta_{s-1} .\\\ldots \ldots \ldots \\\gamma_{i}=\frac{1}{\left\|\beta_{i}\right\|} \beta_{i} \quad(i=1,2,\cdots, n)\end{array}\]</span></p><h2 id="已知特征值和特征向量求原矩阵">已知特征值和特征向量求原矩阵</h2><h3 id="知全部型">知全部型</h3><p>由<span class="math display">\[A=P\Lambda P^{-1} \]</span>可得A</p><h3 id="知部分实对称阵">知部分+实对称阵</h3><p>先根据特征向量正交求出剩余的特征向量</p><p>再由<span class="math display">\[A=Q\Lambda Q^{-1}=Q\LambdaQ^\mathrm{T}\]</span>可得A</p><h2id="不同特征值对应的特征向量不可以进行正交化的理解">“不同特征值对应的特征向量不可以进行正交化”的理解</h2><p><ahref="https://blog.csdn.net/weixin_46221946/article/details/122941338">“不同特征值对应的特征向量不可以进行正交化”的理解_特征向量正交化-CSDN博客</a></p><p><strong>总结：不同特征值对应的特征向量进行施密特正交化会导致新向量对应的特征值发生改变。</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 线性代数 </tag>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12306 车票信息爬虫实验答辩报告+源码-python期末作业</title>
      <link href="/2024/12/03/12306%20%E8%BD%A6%E7%A5%A8%E4%BF%A1%E6%81%AF%E7%88%AC%E8%99%AB%E5%AE%9E%E9%AA%8C%E7%AD%94%E8%BE%A9%E6%8A%A5%E5%91%8A+%E6%BA%90%E7%A0%81-python%E6%9C%9F%E6%9C%AB%E4%BD%9C%E4%B8%9A/"/>
      <url>/2024/12/03/12306%20%E8%BD%A6%E7%A5%A8%E4%BF%A1%E6%81%AF%E7%88%AC%E8%99%AB%E5%AE%9E%E9%AA%8C%E7%AD%94%E8%BE%A9%E6%8A%A5%E5%91%8A+%E6%BA%90%E7%A0%81-python%E6%9C%9F%E6%9C%AB%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<p>/*</p><p>答辩报告为一份word报告，内容包括以下几个部分：⑴实验目的；⑵实验方案分析比较；⑶实验过程（含实验方案、流程图、程序等）；⑷实验结果及结果分析；⑸实验总结；</p><p>*/</p><p>12306 车票信息爬虫实验答辩报告</p><h1 id="实验目的">1 实验目的</h1><p>鉴于在使用 12306网页查票时操作复杂，本实验运用爬虫技术编写一个程序来自动提取各车次剩余车票的数据，并整理为Excel 表格。通过该实验，旨在实现以下目标：</p><ol type="1"><li><p>提高获取车票信息的效率，减少人工查询的繁琐操作。</p></li><li><p>熟练掌握爬虫技术，包括网页数据抓取、解析和存储等环节。</p></li><li><p>能够将爬取到的数据进行有效的整理和分析，为用户提供更直观的车票信息展示。</p></li></ol><h1 id="实验方案分析比较">2 实验方案分析比较</h1><h2 id="方案一传统的网页抓取工具">2.1 方案一：传统的网页抓取工具</h2><h3 id="工具选择">2.1.1 工具选择：</h3><p>可以考虑使用一些常见的网页抓取工具，如八爪鱼采集器等。这些工具通常具有图形化界面，操作相对简单，不需要编写大量代码。</p><h3 id="优点">2.1.2 优点：</h3><p>对于没有编程经验的用户较为友好，通过简单的配置即可实现网页数据的抓取。</p><p>提供了一些数据预处理功能，如数据清洗、格式转换等。</p><h3 id="缺点">2.1.3 缺点：</h3><p>灵活性较差，对于复杂的网页结构和特定的数据需求，可能无法满足。</p><p>可能受到工具本身的功能限制，无法进行深度定制和扩展。</p><h2 id="方案二自定义爬虫程序">2.2 方案二：自定义爬虫程序</h2><h3 id="技术选择">2.1.1 技术选择：</h3><p>使用 Python 等编程语言结合相关的爬虫库，如 Requests 等。</p><h3 id="优点-1">2.1.2 优点：</h3><p>高度定制化，可以根据具体需求灵活调整爬虫的行为。</p><p>能够处理各种复杂的网页结构和动态加载的内容。</p><p>可以结合其他数据分析和处理工具，进行更深入的数据挖掘和分析。</p><h3 id="缺点-1">2.1.3 缺点：</h3><p>需要一定的编程基础和技术能力。</p><p>开发过程相对复杂，需要考虑网页反爬机制、数据存储等多个方面。</p><h2 id="方案选择">2.3 方案选择</h2><p>经过综合考虑，本实验选择了方案二，即自定义爬虫程序。虽然需要一定的编程基础，但可以更好地满足实验的需求，实现更高效、灵活的数据抓取和处理。</p><h1 id="实验过程">3 实验过程</h1><h2 id="实验方案">3.1实验方案</h2><h3 id="需求分析">3.1.1 需求分析：</h3><p>确定要爬取的 12306 网页页面，分析页面结构和数据来源。</p><p>明确需要提取的车票信息，如车次、出发地、目的地、出发时间、到达时间、剩余票数等。</p><h3 id="技术选择-1">3.1.2 技术选择：</h3><p>选择 Python作为编程语言，因其具有丰富的第三方库和强大的数据分析能力。</p><p>使用 Requests 库发送 HTTP 请求，获取网页内容。</p><p>使用 xlsxwriter 库将数据整理为 Excel 表格。</p><p>使用 pyinstaller 将程序封装为可执行文件。</p><h3 id="反爬机制处理">3.1.3 反爬机制处理：</h3><p>分析 12306网页的反爬机制，如设置请求头、模拟用户行为等，避免被网站识别为爬虫而被封禁。</p><p>控制请求频率，避免对网站服务器造成过大压力。</p><h2 id="流程图">3.2 流程图</h2><h2 id="程序">3.3程序</h2><h3 id="车票获取">3.3.1车票获取</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取票信息  </span></span><br><span class="line">ba = station_name.get(begin_addr)  </span><br><span class="line">ea = station_name.get(end_addr)  </span><br><span class="line">info_url =<span class="string">f&#x27;https://kyfw.12306.cn/otn/leftTicket/queryO?leftTicketDTO.train_date=<span class="subst">&#123;start_time&#125;</span>&amp;leftTicketDTO.from_station=<span class="subst">&#123;ba&#125;</span>&amp;leftTicketDTO.to_station=<span class="subst">&#123;ea&#125;</span>&amp;purpose_codes=ADULT&#x27;</span>  </span><br><span class="line">headers = &#123;  </span><br><span class="line">    <span class="comment">#用户代理伪装  </span></span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36 Edg/126.0.0.0&#x27;</span>,  </span><br><span class="line">    <span class="comment">#获取cookie  </span></span><br><span class="line">    <span class="string">&#x27;cookie&#x27;</span>:<span class="string">&#x27;_uab_collina=172405128457970660762947; JSESSIONID=4FB560B653EC2533260FEB98C3253979; _jc_save_wfdc_flag=dc; route=495c805987d0f5c8c84b14f60212447d; BIGipServerpassport=921174282.50215.0000; guidesStatus=off; highContrastMode=defaltMode; cursorStatus=off; _jc_save_fromStation=%u5317%u4EAC%2CBJP; _jc_save_toStation=%u4E0A%u6D77%2CSHH; _jc_save_toDate=2024-11-26; BIGipServerportal=3151233290.17695.0000; BIGipServerotn=66060810.50210.0000; _jc_save_fromDate=2024-11-27&#x27;</span>,  </span><br><span class="line">  </span><br><span class="line">&#125;  </span><br><span class="line">resp = requests.get(info_url,headers = headers)  </span><br><span class="line">resp_data = resp.json().get(<span class="string">&#x27;data&#x27;</span>).get(<span class="string">&#x27;result&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="城市获取">3.3.2城市获取</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取城市信息  </span></span><br><span class="line">station_url =<span class="string">&#x27;https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9142&#x27;</span>  </span><br><span class="line">headers =&#123;  </span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36&#x27;</span>,  </span><br><span class="line">&#125;  </span><br><span class="line">resp = requests.get(station_url,headers=headers)  </span><br><span class="line">s_data = resp.text[resp.text.find(<span class="string">&#x27;=&#x27;</span>):-<span class="number">1</span>]  </span><br><span class="line">s_data = s_data.split(<span class="string">&#x27;|&#x27;</span>)  </span><br><span class="line">num = <span class="built_in">len</span>(s_data)//<span class="number">5</span>  </span><br><span class="line">station_name =&#123;&#125;  </span><br><span class="line">station_name2 =&#123;&#125;  </span><br><span class="line">k1 =<span class="number">1</span>  </span><br><span class="line">k2 =<span class="number">2</span>  </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num):  </span><br><span class="line">    station_name[s_data[k1]]= s_data[k2]  </span><br><span class="line">    station_name2[s_data[k2]] = s_data[k1]  </span><br><span class="line">    k1 += <span class="number">5</span>  </span><br><span class="line">    k2 +=<span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="数据处理">3.3.3 数据处理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数据生成EXCEL  </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xw_toExcel</span>(<span class="params"> fileName</span>):  <span class="comment"># xlsxwriter库储存数据到excel  </span></span><br><span class="line">  </span><br><span class="line">    workbook = xw.Workbook(fileName)  <span class="comment"># 创建工作簿  </span></span><br><span class="line">    worksheet1 = workbook.add_worksheet(<span class="string">&quot;sheet1&quot;</span>)  <span class="comment"># 创建子表  </span></span><br><span class="line">    worksheet1.activate()  <span class="comment"># 激活表  </span></span><br><span class="line">  </span><br><span class="line">    bold = workbook.add_format(&#123;  </span><br><span class="line">        <span class="string">&#x27;bold&#x27;</span>: <span class="literal">True</span>,  <span class="comment"># 字体加粗  </span></span><br><span class="line">        <span class="string">&#x27;border&#x27;</span>: <span class="number">1</span>,  <span class="comment"># 单元格边框宽度  </span></span><br><span class="line">        <span class="string">&#x27;align&#x27;</span>: <span class="string">&#x27;left&#x27;</span>,  <span class="comment"># 水平对齐方式  </span></span><br><span class="line">        <span class="string">&#x27;valign&#x27;</span>: <span class="string">&#x27;vcenter&#x27;</span>,  <span class="comment"># 垂直对齐方式  </span></span><br><span class="line">        <span class="string">&#x27;fg_color&#x27;</span>: <span class="string">&#x27;#F4B084&#x27;</span>,  <span class="comment"># 单元格背景颜色  </span></span><br><span class="line">        <span class="string">&#x27;text_wrap&#x27;</span>: <span class="literal">True</span>,  <span class="comment"># 是否自动换行  </span></span><br><span class="line">    &#125;)  </span><br><span class="line">  </span><br><span class="line">    title = [<span class="string">&#x27;日期&#x27;</span>,<span class="string">&#x27;车号&#x27;</span>, <span class="string">&#x27;出发时间&#x27;</span>, <span class="string">&#x27;到达时间&#x27;</span>,<span class="string">&#x27;历时&#x27;</span>,<span class="string">&#x27;商务特等&#x27;</span>,<span class="string">&#x27;一等座&#x27;</span>,<span class="string">&#x27;二等座&#x27;</span>]  <span class="comment"># 设置表头  </span></span><br><span class="line">    worksheet1.write_row(<span class="string">&#x27;A1&#x27;</span>, title)  <span class="comment"># 从A1单元格开始写入表头  </span></span><br><span class="line">    i=<span class="number">2</span><span class="comment">#从第2行输入数据  </span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> resp_data:  </span><br><span class="line">        data = [a <span class="keyword">for</span> a <span class="keyword">in</span> r.split(<span class="string">&#x27;|&#x27;</span>)]  </span><br><span class="line">        <span class="keyword">if</span> data[<span class="number">1</span>] != <span class="string">&#x27;列车停运&#x27;</span>:  </span><br><span class="line">            row=<span class="string">&#x27;A&#x27;</span>+<span class="built_in">str</span>(i)  </span><br><span class="line">            i+=<span class="number">1</span>  </span><br><span class="line">            insertData = [data[<span class="number">13</span>], data[<span class="number">3</span>],data[<span class="number">8</span>],data[<span class="number">9</span>],data[<span class="number">10</span>],data[<span class="number">32</span>],data[<span class="number">31</span>],data[<span class="number">30</span>]]<span class="comment">#插入数据  </span></span><br><span class="line">            worksheet1.write_row(row, insertData, bold)  </span><br><span class="line">    workbook.close()  <span class="comment"># 关闭表  </span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">fileName = <span class="string">f&#x27;<span class="subst">&#123;start_time&#125;</span>从<span class="subst">&#123;begin_addr&#125;</span>到<span class="subst">&#123;end_addr&#125;</span>.xlsx&#x27;</span>  </span><br><span class="line">xw_toExcel(fileName)</span><br></pre></td></tr></table></figure><h1 id="实验结果及结果分析">4 实验结果及结果分析</h1><h2 id="实验结果">4.1 实验结果</h2><p>成功爬取了 12306 网页上的各车次剩余车票数据，并将其整理为 Excel表格。表格中包含了车次、出发地、目的地、出发时间、到达时间和剩余票数等信息，数据清晰、直观，便于用户查看和分析。</p><h2 id="结果分析">4.2 结果分析</h2><p>效率提升：与传统的人工查询方式相比，爬虫程序大大提高了获取车票信息的效率。用户只需运行程序，即可快速获取大量车次的剩余票数信息，无需逐个车次进行手动查询。</p><h1 id="实验总结">5 实验总结</h1><p>本实验通过运用爬虫技术，成功实现了自动提取 12306网页上各车次剩余车票数据并整理为 Excel表格的目标。在实验过程中，我深入了解了网页爬虫的原理和技术，掌握了如何使用Python进行网页数据抓取、解析和存储。同时，也遇到了一些问题，如网页反爬机制的处理、数据整理、可执行文件生成等，通过不断地尝试和探索，我找到了有效的解决方案。</p><p>通过本次实验，我不仅提高了编程能力和数据分析能力，还为解决实际问题提供了一种有效的方法。在未来的学习和工作中，我会继续深入研究爬虫技术，探索更多的应用场景，为提高工作效率和数据分析能力做出更大的贡献。</p><h1 id="源代码">源代码</h1><div class="note warning flat"><p>需要提前安装第三方库：requests、xlsxwriter</p></div><p>win+R输入cmd，在命令框输入以下命令 <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> requests</span><br><span class="line">pip <span class="keyword">install</span> xlsxwriter</span><br></pre></td></tr></table></figure></p><p>若安装速度较慢，请自行上网查找换清华园的下载源</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests  </span><br><span class="line"><span class="keyword">import</span> xlsxwriter <span class="keyword">as</span> xw  </span><br><span class="line">  </span><br><span class="line"><span class="comment">#用户输入  </span></span><br><span class="line">  </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;请输入时间：格式XXXX-XX-XX&#x27;</span>)  </span><br><span class="line">start_time =<span class="built_in">input</span>()  </span><br><span class="line">  </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;请输入出发站名&#x27;</span>)  </span><br><span class="line">begin_addr =<span class="built_in">input</span>()  </span><br><span class="line">  </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;请输入到达站名&#x27;</span>)  </span><br><span class="line">end_addr=<span class="built_in">input</span>()  </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;  </span></span><br><span class="line"><span class="string">start_time =&#x27;2024-11-30&#x27;  </span></span><br><span class="line"><span class="string">end_addr=&#x27;杭州东&#x27;  </span></span><br><span class="line"><span class="string">begin_addr =&#x27;温州南&#x27;  </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>  </span><br><span class="line"><span class="comment"># 获取城市信息  </span></span><br><span class="line">station_url =<span class="string">&#x27;https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9142&#x27;</span>  </span><br><span class="line">headers =&#123;  </span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36&#x27;</span>,  </span><br><span class="line">&#125;  </span><br><span class="line">resp = requests.get(station_url,headers=headers)  </span><br><span class="line">s_data = resp.text[resp.text.find(<span class="string">&#x27;=&#x27;</span>):-<span class="number">1</span>]  </span><br><span class="line">s_data = s_data.split(<span class="string">&#x27;|&#x27;</span>)  </span><br><span class="line">num = <span class="built_in">len</span>(s_data)//<span class="number">5</span>  </span><br><span class="line">station_name =&#123;&#125;  </span><br><span class="line">station_name2 =&#123;&#125;  </span><br><span class="line">k1 =<span class="number">1</span>  </span><br><span class="line">k2 =<span class="number">2</span>  </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num):  </span><br><span class="line">    station_name[s_data[k1]]= s_data[k2]  </span><br><span class="line">    station_name2[s_data[k2]] = s_data[k1]  </span><br><span class="line">    k1 += <span class="number">5</span>  </span><br><span class="line">    k2 +=<span class="number">5</span>  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 获取票信息  </span></span><br><span class="line">ba = station_name.get(begin_addr)  </span><br><span class="line">ea = station_name.get(end_addr)  </span><br><span class="line">info_url =<span class="string">f&#x27;https://kyfw.12306.cn/otn/leftTicket/queryO?leftTicketDTO.train_date=<span class="subst">&#123;start_time&#125;</span>&amp;leftTicketDTO.from_station=<span class="subst">&#123;ba&#125;</span>&amp;leftTicketDTO.to_station=<span class="subst">&#123;ea&#125;</span>&amp;purpose_codes=ADULT&#x27;</span>  </span><br><span class="line">headers = &#123;  </span><br><span class="line">    <span class="comment">#用户代理伪装  </span></span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36 Edg/126.0.0.0&#x27;</span>,  </span><br><span class="line">    <span class="comment">#获取cookie  </span></span><br><span class="line">    <span class="string">&#x27;cookie&#x27;</span>:<span class="string">&#x27;_uab_collina=172405128457970660762947; JSESSIONID=4FB560B653EC2533260FEB98C3253979; _jc_save_wfdc_flag=dc; route=495c805987d0f5c8c84b14f60212447d; BIGipServerpassport=921174282.50215.0000; guidesStatus=off; highContrastMode=defaltMode; cursorStatus=off; _jc_save_fromStation=%u5317%u4EAC%2CBJP; _jc_save_toStation=%u4E0A%u6D77%2CSHH; _jc_save_toDate=2024-11-26; BIGipServerportal=3151233290.17695.0000; BIGipServerotn=66060810.50210.0000; _jc_save_fromDate=2024-11-27&#x27;</span>,  </span><br><span class="line">  </span><br><span class="line">&#125;  </span><br><span class="line">resp = requests.get(info_url,headers = headers)  </span><br><span class="line">resp_data = resp.json().get(<span class="string">&#x27;data&#x27;</span>).get(<span class="string">&#x27;result&#x27;</span>)  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">#数据生成EXCEL  </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xw_toExcel</span>(<span class="params"> fileName</span>):  <span class="comment"># xlsxwriter库储存数据到excel  </span></span><br><span class="line">  </span><br><span class="line">    workbook = xw.Workbook(fileName)  <span class="comment"># 创建工作簿  </span></span><br><span class="line">    worksheet1 = workbook.add_worksheet(<span class="string">&quot;sheet1&quot;</span>)  <span class="comment"># 创建子表  </span></span><br><span class="line">    worksheet1.activate()  <span class="comment"># 激活表  </span></span><br><span class="line">  </span><br><span class="line">    bold = workbook.add_format(&#123;  </span><br><span class="line">        <span class="string">&#x27;bold&#x27;</span>: <span class="literal">True</span>,  <span class="comment"># 字体加粗  </span></span><br><span class="line">        <span class="string">&#x27;border&#x27;</span>: <span class="number">1</span>,  <span class="comment"># 单元格边框宽度  </span></span><br><span class="line">        <span class="string">&#x27;align&#x27;</span>: <span class="string">&#x27;left&#x27;</span>,  <span class="comment"># 水平对齐方式  </span></span><br><span class="line">        <span class="string">&#x27;valign&#x27;</span>: <span class="string">&#x27;vcenter&#x27;</span>,  <span class="comment"># 垂直对齐方式  </span></span><br><span class="line">        <span class="string">&#x27;fg_color&#x27;</span>: <span class="string">&#x27;#F4B084&#x27;</span>,  <span class="comment"># 单元格背景颜色  </span></span><br><span class="line">        <span class="string">&#x27;text_wrap&#x27;</span>: <span class="literal">True</span>,  <span class="comment"># 是否自动换行  </span></span><br><span class="line">    &#125;)  </span><br><span class="line">  </span><br><span class="line">    title = [<span class="string">&#x27;日期&#x27;</span>,<span class="string">&#x27;车号&#x27;</span>, <span class="string">&#x27;出发时间&#x27;</span>, <span class="string">&#x27;到达时间&#x27;</span>,<span class="string">&#x27;历时&#x27;</span>,<span class="string">&#x27;商务特等&#x27;</span>,<span class="string">&#x27;一等座&#x27;</span>,<span class="string">&#x27;二等座&#x27;</span>]  <span class="comment"># 设置表头  </span></span><br><span class="line">    worksheet1.write_row(<span class="string">&#x27;A1&#x27;</span>, title)  <span class="comment"># 从A1单元格开始写入表头  </span></span><br><span class="line">    i=<span class="number">2</span><span class="comment">#从第2行输入数据  </span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> resp_data:  </span><br><span class="line">        data = [a <span class="keyword">for</span> a <span class="keyword">in</span> r.split(<span class="string">&#x27;|&#x27;</span>)]  </span><br><span class="line">        <span class="keyword">if</span> data[<span class="number">1</span>] != <span class="string">&#x27;列车停运&#x27;</span>:  </span><br><span class="line">            row=<span class="string">&#x27;A&#x27;</span>+<span class="built_in">str</span>(i)  </span><br><span class="line">            i+=<span class="number">1</span>  </span><br><span class="line">            insertData = [data[<span class="number">13</span>], data[<span class="number">3</span>],data[<span class="number">8</span>],data[<span class="number">9</span>],data[<span class="number">10</span>],data[<span class="number">32</span>],data[<span class="number">31</span>],data[<span class="number">30</span>]]<span class="comment">#插入数据  </span></span><br><span class="line">            worksheet1.write_row(row, insertData, bold)  </span><br><span class="line">    workbook.close()  <span class="comment"># 关闭表  </span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">fileName = <span class="string">f&#x27;<span class="subst">&#123;start_time&#125;</span>从<span class="subst">&#123;begin_addr&#125;</span>到<span class="subst">&#123;end_addr&#125;</span>.xlsx&#x27;</span>  </span><br><span class="line">xw_toExcel(fileName)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 学科作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从“企业家”的变化看改革开放 ——读《激荡三十年》有感-改革开放史期末考核</title>
      <link href="/2024/12/03/%E4%BB%8E%E2%80%9C%E4%BC%81%E4%B8%9A%E5%AE%B6%E2%80%9D%E7%9A%84%E5%8F%98%E5%8C%96%E7%9C%8B%E6%94%B9%E9%9D%A9%E5%BC%80%E6%94%BE%20%E2%80%94%E2%80%94%E8%AF%BB%E3%80%8A%E6%BF%80%E8%8D%A1%E4%B8%89%E5%8D%81%E5%B9%B4%E3%80%8B%E6%9C%89%E6%84%9F-%E6%94%B9%E9%9D%A9%E5%BC%80%E6%94%BE%E5%8F%B2%E6%9C%9F%E6%9C%AB%E8%80%83%E6%A0%B8/"/>
      <url>/2024/12/03/%E4%BB%8E%E2%80%9C%E4%BC%81%E4%B8%9A%E5%AE%B6%E2%80%9D%E7%9A%84%E5%8F%98%E5%8C%96%E7%9C%8B%E6%94%B9%E9%9D%A9%E5%BC%80%E6%94%BE%20%E2%80%94%E2%80%94%E8%AF%BB%E3%80%8A%E6%BF%80%E8%8D%A1%E4%B8%89%E5%8D%81%E5%B9%B4%E3%80%8B%E6%9C%89%E6%84%9F-%E6%94%B9%E9%9D%A9%E5%BC%80%E6%94%BE%E5%8F%B2%E6%9C%9F%E6%9C%AB%E8%80%83%E6%A0%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><strong>摘要：</strong></h1><p>本文通过对改革开放历程中“企业家”这一群体的变化进行分析，结合马胜利和柳传志等企业家的例子，探讨了改革开放对中国经济体制和社会观念的深刻影响，以及企业家在其中所发挥的重要作用。同时，阐述了新时代企业家的特点和需求，并以一些新时代企业家为例进行说明。</p><h1id="一改革开放初期企业家的艰难起步"><strong>一、改革开放初期：“企业家”的艰难起步</strong></h1><pre><code>改革开放初期，中国刚刚从计划经济的桎梏中挣脱出来，迈向市场经济的探索之路。在这个阶段，“企业家”一词曾被视为带有贬义色彩。北京大学教授张维迎在 1984 年写的一篇题为《时代需要具有创新精神的企业家》的文章，当时的《读书》杂志编辑还曾与他商榷，是否要将“企业家”改成“实业家”，“冒险精神”改成“探险精神”或“创新精神”，因为在那时，这两个词在中国人的词典里都有着负面的意思。这种观念的形成并非偶然。长期的计划经济体制下，企业的生产经营活动主要是按照国家计划进行，企业管理者更多地是执行上级指令，缺乏自主决策和创新的空间。在这样的环境中，人们对“企业家”所代表的冒险、创新等特质感到陌生和不安。同时，受传统观念的影响，人们对市场经济中的商业行为存在一定的偏见，认为追求利润的行为是不道德的。然而，正是在这样的背景下，一些勇敢的开拓者开始崭露头角。马胜利以承包石家庄造纸厂而名震全国。他大胆地打破传统的经营管理模式，提出“层层承包、责任到人”等创新举措。在他的带领下，石家庄造纸厂迅速扭亏为盈，成为当时国有企业改革的一面旗帜。马胜利的成功并非偶然。他敏锐地察觉到了市场经济的萌芽，敢于挑战传统体制，勇于尝试新的经营方式。他的行动不仅为石家庄造纸厂带来了生机，也为其他企业树立了榜样。他的故事激励着更多的人勇敢地迈出改革的步伐，探索适合中国国情的企业发展道路。</code></pre><h1id="二改革开放进程中企业家的崛起与贡献"><strong>二、改革开放进程中：企业家的崛起与贡献</strong></h1><pre><code>在改革开放的进程中，柳传志也是一位具有标志性意义的企业家。柳传志带领联想从一个小型计算机贸易公司逐步发展成为全球知名的科技企业。他以卓越的战略眼光和领导才能，推动联想在技术创新、国际化发展等方面不断取得突破。柳传志注重科技创新，带领联想不断加大研发投入，推出了一系列具有竞争力的产品。同时，他积极推动联想的国际化战略，通过并购等方式拓展全球市场，使联想成为中国企业走向世界的典范。他的管理理念和企业家精神，为中国企业的发展提供了宝贵的经验。像马胜利和柳传志这样的企业家们，在改革开放初期面临着巨大的困难和阻力。一方面，他们要突破传统观念的束缚，面对来自社会各方的质疑和批评。另一方面，他们还要在不完善的市场环境中摸索前行，缺乏政策支持和法律保障。然而，正是这些困难和阻力，更加凸显了他们的勇气和创新精神。随着改革开放的不断深入，市场经济体制逐步完善，政府对企业的管理方式也发生了根本性的转变。从过去的直接干预到现在的宏观调控和服务引导，为企业家们创造了更加宽松和有利的发展环境。同时，社会观念也逐渐转变，人们开始认识到企业家在经济发展中的重要作用，对他们的创新和冒险精神给予了更多的理解和尊重。在这个过程中，企业家们的地位和作用日益凸显。他们不再是被人质疑的对象，而是成为了推动经济发展的重要力量。他们通过不断创新和开拓，创造了大量的财富和就业机会，为中国经济的腾飞做出了巨大贡献。</code></pre><h1id="三新时代企业家的特点与挑战"><strong>三、新时代企业家的特点与挑战</strong></h1><pre><code>在新时代，企业家面临着新的机遇和挑战。随着经济全球化的深入发展、科技革命的迅猛推进以及社会环境的变化，新时代企业家需要具备更加全面的素质和能力。新时代企业家需要有强烈的创新意识。在快速变化的市场环境中，只有不断创新才能保持企业的竞争力。例如，字节跳动的张一鸣，他带领团队开发出了今日头条、抖音等具有创新性的产品，改变了人们获取信息和娱乐的方式。张一鸣敢于突破传统思维，利用人工智能技术实现个性化推荐，为用户提供更加精准的内容服务。新时代企业家还需要有全球化的视野。随着经济全球化的加速，企业的市场不再局限于国内，而是拓展到了全球。像小米的雷军，他带领小米积极拓展海外市场，在印度、东南亚等地区取得了巨大成功。雷军注重产品的性价比和用户体验，通过线上线下相结合的销售模式，迅速打开了国际市场。此外，新时代企业家还需要具备社会责任感。在追求经济效益的同时，企业家们还应该关注环境保护、社会公益等问题，为实现经济、社会和环境的可持续发展做出贡献。例如，马云发起的乡村教师计划，致力于改善中国农村教育状况；腾讯的马化腾也积极推动互联网公益事业的发展。</code></pre><h1 id="四展望未来"><strong>四、展望未来</strong></h1><pre><code>回顾改革开放的历程，我们可以清晰地看到，企业家们的成长与中国经济的发展息息相关。他们是改革开放的实践者和推动者，他们的勇气、智慧和创新精神为中国经济的腾飞做出了不可磨灭的贡献。从“企业家”的变化看改革开放，我们可以深刻地感受到中国经济体制的深刻变革和社会观念的巨大进步。企业家们作为改革开放的实践者和推动者，他们的故事将继续激励着我们，为实现中华民族伟大复兴的中国梦而努力奋斗。在未来的发展中，我们相信，随着改革开放的不断深入，中国的企业家们将继续发挥重要作用，为中国经济的持续发展和社会的进步做出更大的贡献。同时，我们也期待着社会各界能够更加尊重和支持企业家们，为他们创造更加良好的发展环境，共同推动中国经济的繁荣和社会的进步。</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 学科作业 </tag>
            
            <tag> 改革开放史 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《杭电及智能科学与技术专业之我见》</title>
      <link href="/2024/11/25/%E3%80%8A%E6%9D%AD%E7%94%B5%E5%8F%8A%E6%99%BA%E8%83%BD%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF%E4%B8%93%E4%B8%9A%E4%B9%8B%E6%88%91%E8%A7%81%E3%80%8B/"/>
      <url>/2024/11/25/%E3%80%8A%E6%9D%AD%E7%94%B5%E5%8F%8A%E6%99%BA%E8%83%BD%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF%E4%B8%93%E4%B8%9A%E4%B9%8B%E6%88%91%E8%A7%81%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p align="center">《形势与政策期末报告》</p><table><tbody><tr class="odd"><td>学院：</td><td>自动化学院</td></tr><tr class="even"><td>班级：</td><td>24063113</td></tr><tr class="odd"><td>姓名：</td><td>李文轩</td></tr><tr class="even"><td>学号：</td><td>24062022</td></tr><tr class="odd"><td>任课老师：</td><td>张卫洪 任蔚青</td></tr><tr class="even"><td>日期：</td><td>2024.12.25</td></tr></tbody></table><p align="center">杭电及智能科学与技术专业之我见</p><h1 id="一-杭电在大众认知中的现状">一、    杭电在大众认知中的现状</h1><pre><code>当在百度搜索框中输入“杭电是”三个字时，出现的提示搜索内容如“杭电是什么档次的学校”“杭电是双一流大学吗”“杭电是 985 还是 211 大学”“杭电是一本还是二本”等问题，这充分反映了在大数据背景下，大部分人对杭电的认知还存在一定的模糊性。杭电既不是传统意义上的 985、211 高校，也不是双一流大学，这使得其在一些考生和家长的眼中，在高校选择的优先级上可能会有所降低。然而，这并不意味着杭电没有自身的优势和特色。接着，在视频平台搜索“杭州电子科技大学”，首先弹出的是官号，其次是本校同学发布的一些视频，但并未找到对于杭电评价的相关视频。相比之下，在搜索其他一些省内院校时，关于“是什么样的学校”这个话题的视频讨论明显多于杭电。这不禁让人思考，是杭电的热度不高吗？其实，这可能与杭电的宣传力度、专业特色的传播方式等因素有关。杭电在某些领域具有很强的实力，但这些优势可能并没有得到充分的展示和传播，导致大众对其了解不够全面。</code></pre><h1 id="二我眼中的杭电">二、我眼中的杭电</h1><pre><code>基于几个月的学习和生活，我对杭电有了一定的认识。在杭电，学生可以接收到先进的思想和认识。学校在自动化、微电子与集成电路、计算机等领域表现强势。这些专业领域的发展不仅得益于学校的师资力量和教学资源，还与学校积极与企业合作、紧跟行业发展趋势密不可分。例如，在自动化领域，学校与众多知名企业合作开展项目，为学生提供了实践机会，使学生能够在实际项目中锻炼自己的能力。同时，学校还邀请行业专家来校讲学，让学生了解最新的技术动态和行业发展趋势。然而，或许是被这些工科专业的强势笼罩了，其他学科的优势并没有这么明显地显现。这在一定程度上可能会影响学校的综合发展和整体声誉。学校应该在保持工科优势的同时，加大对其他学科的投入和支持，提高其他学科的教学质量和科研水平，以实现学科的均衡发展。以一个假设结束对杭电的思考：如果让目前的我为一位今年的高三毕业学生推荐一所在杭电分数段内的一所学校，若是自动化、计算机等专业，我必然会选择杭电。这些专业在杭电拥有雄厚的师资力量、先进的教学设备和丰富的实践机会。学生在这些专业中能够学到扎实的专业知识和技能，为未来的职业发展打下坚实的基础。但若是相对难就业的一些专业，我的第一选择或许就并不是杭电了。这并不是说杭电的这些专业不好，而是在就业市场上，这些专业可能面临着更大的竞争压力，杭电在市场或许并没有这么的受欢迎。</code></pre><h1id="三智能科学与技术专业的发展历程">三、智能科学与技术专业的发展历程</h1><pre><code>智能科学与技术专业在全国范围首次出现是在 1998 年，而在杭电，这个专业首次招生是在 2018 年，也是我初一的那年。杭电的智能科学与技术专业在发展过程中取得了一定的成绩，其中 2018 年的这一届智科班级更是为学校带来了一次“出圈”的机会。正如当年杭电的推文中陈廷轩所言：“我们这个班太卷了！有人 ACM 竞赛拿奖，有人发好几篇 sci 论文，很多在其他班能拿一等奖学金的成绩，在我们班三等奖学金都拿不到。”这充分体现了该班级学生的优秀和努力。然而，我们不能仅仅以这个班的成就评价这个专业。一个专业的发展不仅仅取决于学生的个人努力，还与学校的教学质量、师资力量、学科建设等因素密切相关。智能科学与技术在百度百科中是归于计算机大类的，并且在其他一些学校中也是属于计算学院。但是在杭电，这个专业属于自动化（人工智能）学院。在收到录取通知书时，这一点确实让我比较诧异。但随着来到杭电，我逐渐发现了其中的原因。杭电自动化学院拥有强大的实力，能够支撑起该学科的建设。学院有资源分配到专业中，这取决于学校实情与学校的发展史。杭电在自动化领域有着悠久的历史和丰富的经验，拥有一批优秀的教师和科研团队。将智能科学与技术专业设置在自动化学院，可以充分利用学院的资源和优势，促进该专业的发展。</code></pre><h1id="四智能科学与技术专业的学习方向与实践">四、智能科学与技术专业的学习方向与实践</h1><pre><code>在仔细查看了杭电的本科生培养方案后，我大致总结出了智能科学与技术专业的几大学习方向并了解了这些方向的具体内容。首先是计算机视觉与医学相关的领域，这一点在导师制的讲座中也明显体现。计算机视觉是一门涉及计算机科学、数学、物理学等多个学科的交叉学科，其应用领域非常广泛，包括医学影像分析、智能交通、安防监控等。在医学领域，计算机视觉技术可以用于疾病诊断、手术辅助、医疗影像分析等方面，为医学的发展带来了新的机遇。杭电在这个方向上拥有一定的师资力量和科研实力，通过导师制的讲座和实践项目，让学生了解到这个领域的前沿技术和应用前景。第二是人工智能与神经网络的相关领域。关于这一部分，我并没有形成相对完善的价值观念。人工智能是当今科技领域的热门话题，其应用涵盖了自然语言处理、机器学习、计算机视觉等多个领域。神经网络是人工智能的重要组成部分，它通过模拟人脑的神经元结构和工作原理，实现对数据的学习和预测。杭电在人工智能与神经网络领域也有一定的研究成果和教学资源，为学生提供了学习和实践的机会。第三是嵌入式系统，这个方向在我看来是比较成熟的一条赛道。作为传统自动化的大方向，我也通过了科协的一些竞赛得到较多的了解，如智能车、机器人等竞赛都是与嵌入式系统相关的竞赛。我目前也接着学习单片机的机会参加相关的一些竞赛，如尝试与同学组团参加挑战杯的比赛，着手做一些单片机的小项目。我认为单片机的学习是我从开学以来到现在与课程学习并行的主旋律。嵌入式系统是一种将计算机技术与特定应用领域相结合的技术，它具有体积小、功耗低、可靠性高等特点，广泛应用于工业控制、智能家居、医疗设备等领域。杭电在嵌入式系统方向上拥有丰富的教学经验和实践资源，通过竞赛和项目实践，培养学生的动手能力和创新精神。</code></pre><h1id="五智能科学与技术专业的就业方向与发展前景">五、智能科学与技术专业的就业方向与发展前景</h1><pre><code>智能科学与技术专业的就业方向依旧是偏向传统的自动化领域，还是新鲜的人工智能，这是一个模棱两可的结论。目前，该专业的毕业生既可以在传统的自动化领域找到工作，如工业控制、智能制造等领域，也可以在新兴的人工智能领域发挥自己的才能，如机器学习、自然语言处理等领域。然而，无论是哪个领域，都需要毕业生具备扎实的专业知识和技能，以及较强的实践能力和创新精神。对于“和你的兴趣是否相同”这个问题，我的答复是，这个提问还是太宽泛了。我只能说建立在这个专业的基础上去寻找一个与专业相关的并且是自己相对最感兴趣的方向，然后向这个方向钻研。让一个专业来匹配人的兴趣一定没有让人的兴趣向专业靠拢来得容易实现。目前的我只是在各个方向做出尝试，同时先找到一个比较稳妥的方向学习。对于该专业的发展前景，我或许是比较迷茫的，有可能是有比较清晰认知的。学着自动化相关的理论，又抓着人工智能的潮头，我们的知识覆盖面太广了，缺乏了作为一个专业应有的厚度。若要我做出一个猜测，难道这就是学院推行导师制和竞赛的原因？学院通过推行导师制，让学生在导师的指导下，深入了解专业知识和前沿技术，培养学生的科研能力和创新精神。同时，通过参加竞赛，让学生将理论知识与实践相结合，提高学生的动手能力和解决问题的能力。所以对于目前的我而言，我参加了智能车竞赛的实验室，同时加入导师组和几位大二的同学准备科技立项，尽可能提高自己的技术和素养，为以后做好铺垫。智能科学与技术专业在目前看来本科就业，就“好”业是比较困难的，既需要实力又不能缺乏机遇。而准备考研或许成了越来越多人的首选。随着科技的不断发展，对智能科学与技术专业人才的需求也在不断增加。然而，本科毕业生在就业市场上可能面临着较大的竞争压力。一方面，本科阶段的学习可能无法满足企业对高端人才的需求；另一方面，就业市场上的竞争也非常激烈。因此，很多学生选择考研，进一步深造，提高自己的专业水平和竞争力。</code></pre><h1 id="六形式与政策课程的启示">六、《形式与政策》课程的启示</h1><pre><code>《形式与政策》这门课在我看来是大到在分析国家大事，世界局势的一门课，同时也是在分析自己所处的局势的形式，然后找到对应的政策做出改变。借着这次写报告的过程，我对于自己的局势有了更加深刻的认识。在当今快速发展的时代，我们不仅要关注国家大事和世界局势，还要关注自己所处的环境和局势。只有了解自己所处的局势，才能找到适合自己的发展方向和政策。</code></pre><h1 id="报告格式">报告格式</h1><p><strong>报告要求：</strong></p><p>本次作业的目标是帮助大家更好地认识杭电在浙江省的地位、了解杭电的历史，并对杭电有清晰的认识。通过撰写杭电和专业报告，大家可以系统地了解对自己专业的兴趣，和这门专业的历史、现状和前景，以及对本专业的看法，更好地把握专业动态。</p><p><strong>报告格式：</strong></p><ul><li>字数要求：2000字左右。</li><li>报告应结构清晰，内容完整，每个部分应有明确的小标题。</li></ul><p><strong>评分标准：</strong></p><ul><li><strong>内容完整性（40%）：</strong>各部分是否完整，是否深入分析杭电的状况和自己的专业前景中的各个方面。</li><li><strong>逻辑清晰度（30%）：</strong>报告结构是否清晰，思路是否连贯。</li><li><strong>自我评估的准确性与真实性（20%）：</strong>自我评估部分是否真实反映了个人情况，对杭电和专业的看法是否真实。</li><li><strong>报告格式与语言表达（10%）：</strong>报告的格式是否符合要求，语言是否简洁流畅。</li></ul><p><strong>报告内容：</strong></p><p>请大家围绕以下几个方面撰写一份完整的有关杭电和自身专业的报告，要求内容详实、结构清晰，每个部分都应体现出你对杭电现状和专业前景的深入思考和分析：</p><p>1.<strong>杭电的状况</strong></p><ul><li>进行对杭电的历史的调查，可以通过查阅杭电的官网和杭电自动化的官网来了解杭电。</li><li>对杭电现状的分析，明确杭电在浙江省的地位，杭电的优势和特色。</li><li>结合自我认知，谈谈自己对杭电的认识。</li></ul><ol start="2" type="1"><li><strong>专业探索</strong></li></ol><ul><li>了解自动化学院在杭电的发展历史，和自己的专业在杭电的历史。</li><li>充分掌握自己专业的培养方案，明确自己将来能在专业中学到的知识和技能，以及毕业需要的学分。</li><li>调查自己专业的前景和地位，以及目前这个专业的就业形势。</li></ul><ol start="4" type="1"><li><strong>对专业的态度</strong></li></ol><ul><li>在这一部分，通过对以上两部分的了解，判断自己是否对自己的专业感兴趣，和对这个专业的看法。</li></ul><ol start="6" type="1"><li><strong>行动计划</strong></li></ol><ul><li>根据对杭电和专业的状况，制定具体的行动计划，涵盖学术学习、实践经验积累、技能提升等方面的内容。</li><li>详细列出未来在校期间的学习规划、社会实践、实习安排等。</li><li>描述你想要找到的工作岗位，并在大学期间要掌握的技术。</li></ul><ol start="8" type="1"><li><strong>结论</strong></li></ol><ul><li>总结报告中的关键点，展望未来学业生涯，并反思你在对杭电和自己专业探索过程中的收获。</li><li>提出未来需要改进或继续发展的方面。</li></ul><hr /><p>通过完成这份有关杭电和专业的报告，希望大家能对杭电和自己的专业有更清晰的认识，并通过规划和行动为学业成功打下坚实的基础！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学科作业 </tag>
            
            <tag> 杭电 </tag>
            
            <tag> 形势与政策 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的《微电子技术和集成电路产业》学习感悟</title>
      <link href="/2024/10/03/%E6%88%91%E7%9A%84%E3%80%8A%E5%BE%AE%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF%E5%92%8C%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E4%BA%A7%E4%B8%9A%E3%80%8B%E5%AD%A6%E4%B9%A0%E6%84%9F%E6%82%9F/"/>
      <url>/2024/10/03/%E6%88%91%E7%9A%84%E3%80%8A%E5%BE%AE%E7%94%B5%E5%AD%90%E6%8A%80%E6%9C%AF%E5%92%8C%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E4%BA%A7%E4%B8%9A%E3%80%8B%E5%AD%A6%E4%B9%A0%E6%84%9F%E6%82%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="声明">声明</h1><p>本人原创，杜绝抄袭，违者后果自负。如文章内容涉密或侵权，请联系作者邮箱 1191228412@qq.com 修改。</p><p>本文为李文轩创作，作为课程记录，请勿抄袭！！！</p><h1 id="lesson-1">lesson 1</h1><p>第一节课见到了12寸硅片，深深震撼于其厚度（非常薄）</p><p>近距离观察了固态硬盘。（中国第一块固态硬盘出自杭电，非常骄傲）</p><p>有些内容不敢拍照,不确定是否合法，而且我坐第一排。</p><h1 id="lesson2">lesson2</h1><p>今天是楼老师上的课讲了集成电路的一些专业知识，如电子管的结构。</p><p>后面1个小时去了4教的微电子研究院参观，了解的我国集成电路的发展历史。<a href="https://img.z4a.net/image/2.Alq1R"><imgsrc="https://img.z4a.net/images/2024/09/14/2.md.jpeg" alt="2" /></a></p><p>历史变革 <a href="https://img.z4a.net/image/1.AlzcK"><imgsrc="https://img.z4a.net/images/2024/09/14/1bae8057428a3e36f.md.jpeg"alt="历史变革" /></a></p><p>磁盘阵列 <a href="https://img.z4a.net/image/3.AlbTZ"><imgsrc="https://img.z4a.net/images/2024/09/14/3bb7dec30c607e882.md.jpeg"alt="磁盘阵列" /></a></p><h1 id="lesson3">lesson3</h1><p>今天的课是在教室上的，在补充完第一节课的内容后，老师主要讲了培养人才的重要性<figure class="highlight plaintext"><figcaption><span>word</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">补充完第一节课的内容后，老师将重点转向了培养人才的重要性这一主题。老师以其渊博的知识和丰富的经验，生动地阐述着培养人才对于个人、社会乃至整个国家的重大意义。老师强调，对于个人而言，培养人才意味着为自己的未来奠定坚实的基础，拥有更多的发展机会和选择空间。一个经过良好培养的人，不仅具备扎实的专业知识和技能，还拥有良好的品德修养和创新思维能力，能够在激烈的竞争中脱颖而出，实现自己的人生价值。在社会层面，培养人才是推动社会进步的关键力量。只有不断培养出高素质的人才，才能满足社会发展对于各个领域专业人才的需求。这些人才将在科技、文化、教育、医疗等各个领域发挥重要作用，推动社会不断向前发展。而从国家的角度来看，培养人才更是关系到国家的繁荣昌盛和民族的伟大复兴。一个国家只有拥有大量的优秀人才，才能在国际竞争中立于不败之地，实现国家的长治久安和可持续发展。</span><br></pre></td></tr></table></figure></p><h1 id="lesson4">lesson4</h1><p>今天是楼老师上课，讲了一些芯片的制作工艺。</p><p>分享了一些英语学习的小技巧</p><h1 id="lesson5">lesson5</h1><p>这次课比较硬核。</p><p>讲了pmos管nmos管，非门的电路原理。</p><p>课后还拓展了时序电路，自锁电路（存储器的基本单元）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 杭电 </tag>
            
            <tag> 新生研讨课 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用自定义函数+算法</title>
      <link href="/2024/09/23/%E5%B8%B8%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0+%E7%AE%97%E6%B3%95/"/>
      <url>/2024/09/23/%E5%B8%B8%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0+%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="序言">序言</h1><p>本文提供的函数是作者在学习过程中使用频率较高的一些自定义函数</p><span id="more"></span><h1 id="数学相关">数学相关</h1><h2 id="最大公因数">最大公因数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 求最大公因数的函数</span></span><br><span class="line"><span class="comment">//使用欧几里得算法（辗转相除法）求两个数最大公因数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (b!= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> temp = b;</span><br><span class="line">        b = a % b;</span><br><span class="line">        a = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> num1, num2;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入第一个数: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入第二个数: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num2);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> result = gcd(num1, num2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最大公因数是: %d\n&quot;</span>, result);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最小公倍数">最小公倍数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 求最大公约数的函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="comment">// 当 b 不为 0 时，执行循环</span></span><br><span class="line">    <span class="keyword">while</span> (b!= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 交换 a 和 b 的值</span></span><br><span class="line">        <span class="type">int</span> temp = b;</span><br><span class="line">        b = a % b;</span><br><span class="line">        a = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 返回最终的最大公约数</span></span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求最小公倍数的函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lcm</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="comment">// 通过两数之积除以它们的最大公约数得到最小公倍数</span></span><br><span class="line">    <span class="keyword">return</span> a * b / gcd(a, b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> num1, num2;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入第一个数: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num1);  <span class="comment">// 输入第一个数</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入第二个数: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num2);  <span class="comment">// 输入第二个数</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> result = lcm(num1, num2);  <span class="comment">// 计算并获取最小公倍数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最小公倍数是: %d\n&quot;</span>, result);  <span class="comment">// 输出最小公倍数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="判断质数">判断质数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断一个数是否为质数的函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">    <span class="comment">// 0 和 1 不是质数</span></span><br><span class="line">    <span class="keyword">if</span> (num &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2 是质数</span></span><br><span class="line">    <span class="keyword">if</span> (num == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 偶数（除了 2）不是质数</span></span><br><span class="line">    <span class="keyword">if</span> (num % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 从 3 开始，以步长为 2 遍历到 num 的平方根</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i * i &lt;= num; i += <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果能被整除，不是质数</span></span><br><span class="line">        <span class="keyword">if</span> (num % i == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 都不能整除，是质数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> start, end;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入起始数字: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;start);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入结束数字: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;end);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;在 %d 到 %d 之间的质数有: &quot;</span>, start, end);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> num = start; num &lt;= end; num++) &#123;</span><br><span class="line">        <span class="comment">// 如果是质数，输出</span></span><br><span class="line">        <span class="keyword">if</span> (isPrime(num)) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, num);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="组合数函数">组合数函数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//组合数函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">combination</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> r)</span> &#123;</span><br><span class="line">    <span class="type">int</span> result = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= r; i++) &#123;</span><br><span class="line">        result *= (n - (r - i));</span><br><span class="line">        result /= i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="对称数">对称数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">is_Symmetric</span><span class="params">(<span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> result=num*num;</span><br><span class="line">    <span class="type">int</span> temp=result;</span><br><span class="line">    <span class="type">int</span> new_result= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (temp&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">        new_result=new_result*<span class="number">10</span>+temp%<span class="number">10</span>;</span><br><span class="line">        temp/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> new_result==result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="排序算法">排序算法</h1><h2 id="冒泡排序">冒泡排序</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 冒泡排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubbleSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="type">int</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插入排序">插入排序</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插入排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">insertionSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, key, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        key = arr[i];</span><br><span class="line">        j = i - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; key) &#123;</span><br><span class="line">            arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">            j = j - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[j + <span class="number">1</span>] = key;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="选择排序">选择排序</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 选择排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">selectionSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j, min_idx;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        min_idx = i;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &lt; arr[min_idx])</span><br><span class="line">                min_idx = j;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (min_idx!= i) &#123;</span><br><span class="line">            <span class="type">int</span> temp = arr[i];</span><br><span class="line">            arr[i] = arr[min_idx];</span><br><span class="line">            arr[min_idx] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杭电24级智科三班第一学期各课程评分标准和作业安排</title>
      <link href="/2024/09/17/%E6%9D%AD%E7%94%B524%E7%BA%A7%E6%99%BA%E7%A7%91%E4%B8%89%E7%8F%AD%E7%AC%AC%E4%B8%80%E5%AD%A6%E6%9C%9F%E5%90%84%E8%AF%BE%E7%A8%8B%E8%AF%84%E5%88%86%E6%A0%87%E5%87%86%E5%92%8C%E4%BD%9C%E4%B8%9A%E5%AE%89%E6%8E%92/"/>
      <url>/2024/09/17/%E6%9D%AD%E7%94%B524%E7%BA%A7%E6%99%BA%E7%A7%91%E4%B8%89%E7%8F%AD%E7%AC%AC%E4%B8%80%E5%AD%A6%E6%9C%9F%E5%90%84%E8%AF%BE%E7%A8%8B%E8%AF%84%E5%88%86%E6%A0%87%E5%87%86%E5%92%8C%E4%BD%9C%E4%B8%9A%E5%AE%89%E6%8E%92/</url>
      
        <content type="html"><![CDATA[<h1 id="线性代数">线性代数</h1><h2 id="作业">作业</h2><p>老师发的图片框起来的，每次上课线下交</p><h1 id="微电子技术和集成电路产业">微电子技术和集成电路产业</h1><h2 id="作业-1">作业</h2><p>无</p><h2 id="期末考核">期末考核</h2><p>原创个人课程感想</p><h1 id="中国近现代史纲要">中国近现代史纲要</h1><h2 id="期中考核">期中考核</h2><p>实践/找出课本一处错误并写成论文</p><h1 id="python算法设计实验">python算法设计实验</h1><h2 id="作业-2">作业</h2><p>学习通</p><h1 id="高等数学a1">高等数学A1</h1><h2 id="作业-3">作业</h2><p>1.学习通评论区 2.学习通作业（周二晚上截止）3.学习通考试（一单元一次） 4.课程预习</p><h1 id="基础英语读写">基础英语读写</h1><h2 id="作业-4">作业</h2><p>第一次是看视频写总结</p><h2 id="学期任务">学期任务</h2><p>完成几份4级试卷（要交）</p><h1 id="体育">体育</h1><h2 id="期末考核-1">期末考核</h2><p>1.太极拳 2.体测 3.阳光长跑</p><h1 id="基础英语视听说">基础英语视听说</h1><h2 id="作业-5">作业</h2><p>第一次是课本听力</p><h2 id="学期任务-1">学期任务</h2><p>1.课堂发言 2.小组展示</p>]]></content>
      
      
      
        <tags>
            
            <tag> 杭电 </tag>
            
            <tag> 课程安排 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stm32单片机学习</title>
      <link href="/2024/09/13/stm32%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/09/13/stm32%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="序言">序言</h1><p>本文所需的材料软件等均在下方链接。</p><p>stm32单片机的PC端配置需要keil5MDK，并且需要手动配置编译环境。具体看B站UP主的教程（讲的非常好 ! !!）</p><p>学习教程：<ahref="https://www.bilibili.com/video/BV1th411z7sn/?spm_id_from=333.337.search-card.all.click">STM32入门教程-2023版细致讲解 中文字幕_哔哩哔哩_bilibili</a></p><p><a href="https://jiangxiekeji.com/download.html">资料下载</a></p><h1 id="day-1-240913">DAY 1 (240913)</h1><p>这段代码主要是对 STM32F10x 系列芯片的 GPIOC 端口的 13号引脚进行配置和操作。首先初始化引脚为推挽输出模式，然后先将该引脚设置为高电平，接着又设置为低电平，之后进入死循环。在实际应用中，可能会在循环中添加其他的逻辑来实现特定的功能，比如控制LED 闪烁等相关操作。 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// 包含 STM32F10x 系列相关的头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span>  <span class="comment">// 主函数，程序的入口点</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 使能 GPIOC 外设的时钟，这是对 GPIOC 进行操作的前提</span></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个 GPIO 初始化结构体变量</span></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置 GPIO 引脚的工作模式为推挽输出（Push-Pull Output）</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 选择 GPIOC 的 13 号引脚进行配置</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置输出引脚的速度为 50MHz</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据上述设置的参数初始化 GPIOC 的相关引脚</span></span><br><span class="line">    GPIO_Init(GPIOC, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将 GPIOC 的 13 号引脚置为高电平</span></span><br><span class="line">    GPIO_SetBits(GPIOC, GPIO_Pin_13);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将 GPIOC 的 13 号引脚置为低电平</span></span><br><span class="line">    GPIO_ResetBits(GPIOC, GPIO_Pin_13);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 进入一个无限循环，使程序保持运行状态</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>效果图 <ahref="https://img.z4a.net/image/%E5%8D%95%E7%89%87%E6%9C%BA%E7%82%B9%E7%81%AF.AlDAR"><imgsrc="https://img.z4a.net/images/2024/09/14/9ea687ae627548c010abe19dee3780da.md.jpeg"alt="单片机点灯" /></a></p><h1 id="day-2-240914-led-闪烁">DAY 2 (240914) LED 闪烁</h1><h2 id="led-闪烁">LED 闪烁</h2><p>成果</p><p><a href="https://thumbsnap.com/AbVWuJp6" title="Image Hosted by ThumbSnap"><video poster="https://thumbsnap.com/i/AbVWuJp6.jpg" loop muted autoplay playsinline><source src="https://thumbsnap.com/i/AbVWuJp6.mp4" type="video/mp4"></video></a></p><p>接线图 <ahref="https://img.z4a.net/image/3-1-LED%E9%97%AA%E7%83%81.ADHhf"><imgsrc="https://img.z4a.net/images/2024/09/14/3-1-LED.md.jpeg"alt="3 1 LED闪烁" /></a></p><p>源码 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*开启时钟*/</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);<span class="comment">//开启GPIOA的时钟</span></span><br><span class="line"><span class="comment">//使用各个外设前必须开启时钟，否则对外设的操作无效</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*GPIO初始化*/</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;<span class="comment">//定义结构体变量</span></span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;<span class="comment">//GPIO模式，赋值为推挽输出模式</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;<span class="comment">//GPIO引脚，赋值为第0号引脚</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<span class="comment">//GPIO速度，赋值为50MHz</span></span><br><span class="line"></span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="comment">//将赋值后的构体变量传递给GPIO_Init函数</span></span><br><span class="line"><span class="comment">//函数内部会自动根据结构体的参数配置相应寄存器</span></span><br><span class="line"><span class="comment">//实现GPIOA的初始化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*主循环，循环体内的代码会一直循环执行*/</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*设置PA0引脚的高低电平，实现LED闪烁，下面展示3种方法*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*方法1：GPIO_ResetBits设置低电平，GPIO_SetBits设置高电平*/</span></span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_0);<span class="comment">//将PA0引脚设置为低电平</span></span><br><span class="line">Delay_ms(<span class="number">500</span>);<span class="comment">//延时500ms</span></span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_0);<span class="comment">//将PA0引脚设置为高电平</span></span><br><span class="line">Delay_ms(<span class="number">500</span>);<span class="comment">//延时500ms</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*方法2：GPIO_WriteBit设置低/高电平，由Bit_RESET/Bit_SET指定*/</span></span><br><span class="line">GPIO_WriteBit(GPIOA, GPIO_Pin_0, Bit_RESET);<span class="comment">//将PA0引脚设置为低电平</span></span><br><span class="line">Delay_ms(<span class="number">500</span>);<span class="comment">//延时500ms</span></span><br><span class="line">GPIO_WriteBit(GPIOA, GPIO_Pin_0, Bit_SET);<span class="comment">//将PA0引脚设置为高电平</span></span><br><span class="line">Delay_ms(<span class="number">500</span>);<span class="comment">//延时500ms</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*方法3：GPIO_WriteBit设置低/高电平，由数据0/1指定，数据需要强转为BitAction类型*/</span></span><br><span class="line">GPIO_WriteBit(GPIOA, GPIO_Pin_0, (BitAction)<span class="number">0</span>);<span class="comment">//将PA0引脚设置为低电平</span></span><br><span class="line">Delay_ms(<span class="number">500</span>);<span class="comment">//延时500ms</span></span><br><span class="line">GPIO_WriteBit(GPIOA, GPIO_Pin_0, (BitAction)<span class="number">1</span>);<span class="comment">//将PA0引脚设置为高电平</span></span><br><span class="line">Delay_ms(<span class="number">500</span>);<span class="comment">//延时500ms</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="day-3-240915-led流水灯oled屏显示">DAY 3 (240915)LED流水灯+OLED屏显示</h1><h2 id="led流水灯">LED流水灯</h2><p>成果<a href="https://thumbsnap.com/PfsjbSQD" title="Image Hosted by ThumbSnap"><video poster="https://thumbsnap.com/i/PfsjbSQD.jpg" loop muted autoplay playsinline><source src="https://thumbsnap.com/i/PfsjbSQD.mp4" type="video/mp4"></video></a>接线图 <ahref="https://img.z4a.net/image/3-2-LED%E6%B5%81%E6%B0%B4%E7%81%AF.AkKlf"><imgsrc="https://img.z4a.net/images/2024/09/15/3-2-LED.md.jpeg"alt="3 2 LED流水灯" /></a> 源码 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*开启时钟*/</span></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);  <span class="comment">// 开启 GPIOA 的时钟。</span></span><br><span class="line">    <span class="comment">// 使用各个外设前必须开启时钟，否则对外设的操作无效。这一步确保了对 GPIOA 的操作能够正常进行。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*GPIO 初始化*/</span></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;  <span class="comment">// 定义结构体变量，用于存储 GPIO 的初始化参数。</span></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;  <span class="comment">// GPIO 模式，设置为推挽输出模式。推挽输出模式可以输出较强的电流，适合驱动外部设备。</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_All;  <span class="comment">// GPIO 引脚，设置为所有引脚。这意味着将对 GPIOA 的所有引脚进行配置。</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;  <span class="comment">// GPIO 速度，设置为 50MHz。不同的速度适用于不同的应用场景。</span></span><br><span class="line"></span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);  <span class="comment">// 将结构体变量传递给 GPIO_Init 函数，函数会根据结构体中的参数配置相应的寄存器，实现对 GPIOA 的初始化。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*主循环，循环体内的代码会一直循环执行*/</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*使用 GPIO_Write，同时设置 GPIOA 所有引脚的高低电平，实现 LED 流水灯*/</span></span><br><span class="line">        GPIO_Write(GPIOA, ~<span class="number">0x0001</span>);  <span class="comment">// 0000 0000 0000 0001，PA0 引脚为低电平，其他引脚均为高电平，注意数据有按位取反。</span></span><br><span class="line">        Delay_ms(<span class="number">100</span>);  <span class="comment">// 延时 100ms。这个延时函数可能来自于引入的 &quot;Delay.h&quot; 头文件，用于控制流水灯的速度。</span></span><br><span class="line">        GPIO_Write(GPIOA, ~<span class="number">0x0002</span>);  <span class="comment">// 0000 0000 0000 0010，PA1 引脚为低电平，其他引脚均为高电平。</span></span><br><span class="line">        Delay_ms(<span class="number">100</span>);  <span class="comment">// 延时 100ms。</span></span><br><span class="line">        GPIO_Write(GPIOA, ~<span class="number">0x0004</span>);  <span class="comment">// 0000 0000 0000 0100，PA2 引脚为低电平，其他引脚均为高电平。</span></span><br><span class="line">        Delay_ms(<span class="number">100</span>);  <span class="comment">// 延时 100ms。</span></span><br><span class="line">        GPIO_Write(GPIOA, ~<span class="number">0x0008</span>);  <span class="comment">// 0000 0000 0000 1000，PA3 引脚为低电平，其他引脚均为高电平。</span></span><br><span class="line">        Delay_ms(<span class="number">100</span>);  <span class="comment">// 延时 100ms。</span></span><br><span class="line">        GPIO_Write(GPIOA, ~<span class="number">0x0010</span>);  <span class="comment">// 0000 0000 0001 0000，PA4 引脚为低电平，其他引脚均为高电平。</span></span><br><span class="line">        Delay_ms(<span class="number">100</span>);  <span class="comment">// 延时 100ms。</span></span><br><span class="line">        GPIO_Write(GPIOA, ~<span class="number">0x0020</span>);  <span class="comment">// 0000 0000 0010 0000，PA5 引脚为低电平，其他引脚均为高电平。</span></span><br><span class="line">        Delay_ms(<span class="number">100</span>);  <span class="comment">// 延时 100ms。</span></span><br><span class="line">        GPIO_Write(GPIOA, ~<span class="number">0x0040</span>);  <span class="comment">// 0000 0000 0100 0000，PA6 引脚为低电平，其他引脚均为高电平。</span></span><br><span class="line">        Delay_ms(<span class="number">100</span>);  <span class="comment">// 延时 100ms。</span></span><br><span class="line">        GPIO_Write(GPIOA, ~<span class="number">0x0080</span>);  <span class="comment">// 0000 0000 1000 0000，PA7 引脚为低电平，其他引脚均为高电平。</span></span><br><span class="line">        Delay_ms(<span class="number">100</span>);  <span class="comment">// 延时 100ms。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="oled屏显示">OLED屏显示</h2><div class="note warning flat"><p>使用OLED屏需要配置新的环境（导入新的库函数、头文件）</p></div><p>OLED屏可以实时显示设备参数，可作为监视器使用。</p><p>接线图 <ahref="https://img.z4a.net/image/4-1-OLED%E6%98%BE%E7%A4%BA%E5%B1%8F.A9aDZ"><imgsrc="https://img.z4a.net/images/2024/09/15/4-1-OLED.md.jpeg"alt="4 1 OLED显示屏" /></a></p><p>源码 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*模块初始化*/</span></span><br><span class="line">OLED_Init();<span class="comment">//OLED初始化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*OLED显示*/</span></span><br><span class="line">OLED_ShowChar(<span class="number">1</span>, <span class="number">1</span>, <span class="string">&#x27;A&#x27;</span>);<span class="comment">//1行1列显示字符A</span></span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>, <span class="number">3</span>, <span class="string">&quot;HelloWorld!&quot;</span>);<span class="comment">//1行3列显示字符串HelloWorld!</span></span><br><span class="line"></span><br><span class="line">OLED_ShowNum(<span class="number">2</span>, <span class="number">1</span>, <span class="number">12345</span>, <span class="number">5</span>);<span class="comment">//2行1列显示十进制数字12345，长度为5</span></span><br><span class="line"></span><br><span class="line">OLED_ShowSignedNum(<span class="number">2</span>, <span class="number">7</span>, <span class="number">-66</span>, <span class="number">2</span>);<span class="comment">//2行7列显示有符号十进制数字-66，长度为2</span></span><br><span class="line"></span><br><span class="line">OLED_ShowHexNum(<span class="number">3</span>, <span class="number">1</span>, <span class="number">0xAA55</span>, <span class="number">4</span>);<span class="comment">//3行1列显示十六进制数字0xA5A5，长度为4</span></span><br><span class="line"></span><br><span class="line">OLED_ShowBinNum(<span class="number">4</span>, <span class="number">1</span>, <span class="number">0xAA55</span>, <span class="number">16</span>);<span class="comment">//4行1列显示二进制数字0xA5A5，长度为16</span></span><br><span class="line"><span class="comment">//C语言无法直接写出二进制数字，故需要用十六进制表示</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h3 id="关于中文显示的补充-1">关于中文显示的补充-1</h3><p>成果 <a href="https://img.z4a.net/image/Oled.A9tGK"><imgsrc="https://img.z4a.net/images/2024/09/15/Oled.md.jpeg"alt="Oled" /></a></p><p>中文的显示需要手动配置头文件</p><p>在OLED.h文件中进行如下配置(仅作为示例) <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __OLED_CHINESE_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __OLED_CHINESE_H</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*中文字符字节宽度*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_CHN_CHAR_WIDTH3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*字模基本单元*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">char</span> Index[OLED_CHN_CHAR_WIDTH + <span class="number">1</span>];</span><br><span class="line"><span class="type">char</span> Data[<span class="number">32</span>];</span><br><span class="line">&#125; ChineseCell_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*字模数据*/</span></span><br><span class="line"><span class="type">const</span> ChineseCell_t OLED_CF16x16[] = &#123;</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;你&quot;</span>,</span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x60</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x18</span>,<span class="number">0x0F</span>,<span class="number">0x08</span>,<span class="number">0xC8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x28</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x0C</span>,<span class="number">0x03</span>,<span class="number">0x40</span>,<span class="number">0x80</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x06</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="comment">/*0*/</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;好&quot;</span>,</span><br><span class="line"><span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0xF0</span>,<span class="number">0x1F</span>,<span class="number">0x10</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0xE2</span>,<span class="number">0x92</span>,<span class="number">0x8A</span>,<span class="number">0x86</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x40</span>,<span class="number">0x22</span>,<span class="number">0x15</span>,<span class="number">0x08</span>,<span class="number">0x16</span>,<span class="number">0x61</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x80</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*1*/</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;，&quot;</span>,</span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x58</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*2*/</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;世&quot;</span>,</span><br><span class="line"><span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0xFE</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0xFF</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0xFF</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x47</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x47</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*3*/</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;界&quot;</span>,</span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFE</span>,<span class="number">0x92</span>,<span class="number">0x92</span>,<span class="number">0x92</span>,<span class="number">0xFE</span>,<span class="number">0x92</span>,<span class="number">0x92</span>,<span class="number">0x92</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x84</span>,<span class="number">0x62</span>,<span class="number">0x1E</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0xFE</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="comment">/*4*/</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;。&quot;</span>,</span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*5*/</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;这&quot;</span>,</span><br><span class="line"><span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x42</span>,<span class="number">0xCC</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x28</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0x0E</span>,<span class="number">0xC8</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x1F</span>,<span class="number">0x20</span>,<span class="number">0x50</span>,<span class="number">0x48</span>,<span class="number">0x44</span>,<span class="number">0x42</span>,<span class="number">0x41</span>,<span class="number">0x42</span>,<span class="number">0x44</span>,<span class="number">0x58</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="comment">/*6*/</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;是&quot;</span>,</span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x81</span>,<span class="number">0x41</span>,<span class="number">0x21</span>,<span class="number">0x1D</span>,<span class="number">0x21</span>,<span class="number">0x41</span>,<span class="number">0x81</span>,<span class="number">0xFF</span>,<span class="number">0x89</span>,<span class="number">0x89</span>,<span class="number">0x89</span>,<span class="number">0x89</span>,<span class="number">0x89</span>,<span class="number">0x81</span>,<span class="number">0x81</span>,<span class="number">0x00</span>,<span class="comment">/*7*/</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;汉&quot;</span>,</span><br><span class="line"><span class="number">0x10</span>,<span class="number">0x60</span>,<span class="number">0x02</span>,<span class="number">0x0C</span>,<span class="number">0xC0</span>,<span class="number">0x02</span>,<span class="number">0x1E</span>,<span class="number">0xE2</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0xE2</span>,<span class="number">0x1E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x7C</span>,<span class="number">0x03</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x13</span>,<span class="number">0x0C</span>,<span class="number">0x13</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="comment">/*8*/</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;字&quot;</span>,</span><br><span class="line"><span class="number">0x10</span>,<span class="number">0x0C</span>,<span class="number">0x04</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x25</span>,<span class="number">0x26</span>,<span class="number">0xA4</span>,<span class="number">0x64</span>,<span class="number">0x24</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x14</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x42</span>,<span class="number">0x82</span>,<span class="number">0x7F</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="comment">/*9*/</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;测&quot;</span>,</span><br><span class="line"><span class="number">0x10</span>,<span class="number">0x60</span>,<span class="number">0x02</span>,<span class="number">0x8C</span>,<span class="number">0x00</span>,<span class="number">0xFE</span>,<span class="number">0x02</span>,<span class="number">0xF2</span>,<span class="number">0x02</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x7E</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x47</span>,<span class="number">0x30</span>,<span class="number">0x0F</span>,<span class="number">0x10</span>,<span class="number">0x27</span>,<span class="number">0x00</span>,<span class="number">0x47</span>,<span class="number">0x80</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*10*/</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;试&quot;</span>,</span><br><span class="line"><span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x42</span>,<span class="number">0xCC</span>,<span class="number">0x00</span>,<span class="number">0x90</span>,<span class="number">0x90</span>,<span class="number">0x90</span>,<span class="number">0x90</span>,<span class="number">0x90</span>,<span class="number">0xFF</span>,<span class="number">0x10</span>,<span class="number">0x11</span>,<span class="number">0x16</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x10</span>,<span class="number">0x28</span>,<span class="number">0x60</span>,<span class="number">0x3F</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x01</span>,<span class="number">0x0E</span>,<span class="number">0x30</span>,<span class="number">0x40</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="comment">/*11*/</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;程&quot;</span>,</span><br><span class="line"><span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0xA4</span>,<span class="number">0xFE</span>,<span class="number">0x23</span>,<span class="number">0x22</span>,<span class="number">0x00</span>,<span class="number">0x3E</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x3E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0x01</span>,<span class="number">0x06</span>,<span class="number">0x40</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x7F</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x41</span>,<span class="number">0x00</span>,<span class="comment">/*12*/</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*按照上面的格式，在这个位置加入新的数据*/</span></span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;中&quot;</span>,</span><br><span class="line"><span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x0F</span>,<span class="number">0xEF</span>,<span class="number">0xEF</span>,<span class="number">0xEF</span>,<span class="number">0xEF</span>,<span class="number">0x00</span>,<span class="number">0xEF</span>,<span class="number">0xEF</span>,<span class="number">0xEF</span>,<span class="number">0xEF</span>,<span class="number">0x0F</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,</span><br><span class="line"><span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xF0</span>,<span class="number">0xFB</span>,<span class="number">0xFB</span>,<span class="number">0xFB</span>,<span class="number">0xFB</span>,<span class="number">0x00</span>,<span class="number">0xFB</span>,<span class="number">0xFB</span>,<span class="number">0xFB</span>,<span class="number">0xFB</span>,<span class="number">0xF0</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;秋&quot;</span>,</span><br><span class="line"><span class="number">0xDB</span>,<span class="number">0xDB</span>,<span class="number">0x5B</span>,<span class="number">0x01</span>,<span class="number">0xDC</span>,<span class="number">0xDD</span>,<span class="number">0x7F</span>,<span class="number">0x8F</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x7F</span>,<span class="number">0xBF</span>,<span class="number">0xCF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,</span><br><span class="line"><span class="number">0xF7</span>,<span class="number">0xF9</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0xFE</span>,<span class="number">0x79</span>,<span class="number">0xBF</span>,<span class="number">0xCF</span>,<span class="number">0xF1</span>,<span class="number">0xFE</span>,<span class="number">0xF9</span>,<span class="number">0xE7</span>,<span class="number">0xDF</span>,<span class="number">0xBF</span>,<span class="number">0x7F</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;节&quot;</span>,</span><br><span class="line"><span class="number">0xFB</span>,<span class="number">0xBB</span>,<span class="number">0xBB</span>,<span class="number">0xBB</span>,<span class="number">0xA0</span>,<span class="number">0xBB</span>,<span class="number">0x3B</span>,<span class="number">0xBB</span>,<span class="number">0xBB</span>,<span class="number">0xBB</span>,<span class="number">0xA0</span>,<span class="number">0xBB</span>,<span class="number">0x3B</span>,<span class="number">0xFB</span>,<span class="number">0xFB</span>,<span class="number">0xFF</span>,</span><br><span class="line"><span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xF7</span>,<span class="number">0xEF</span>,<span class="number">0xF7</span>,<span class="number">0xF8</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;快&quot;</span>,</span><br><span class="line"><span class="number">0xFF</span>,<span class="number">0x1F</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0xEF</span>,<span class="number">0xDF</span>,<span class="number">0xF7</span>,<span class="number">0xF7</span>,<span class="number">0xF7</span>,<span class="number">0x00</span>,<span class="number">0xF7</span>,<span class="number">0xF7</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,</span><br><span class="line"><span class="number">0xFE</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x7E</span>,<span class="number">0xBE</span>,<span class="number">0xCE</span>,<span class="number">0xF2</span>,<span class="number">0xFC</span>,<span class="number">0xF2</span>,<span class="number">0xCE</span>,<span class="number">0xBE</span>,<span class="number">0x7E</span>,<span class="number">0x7E</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;乐&quot;</span>,</span><br><span class="line"><span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x1F</span>,<span class="number">0x63</span>,<span class="number">0x7B</span>,<span class="number">0x7B</span>,<span class="number">0x7B</span>,<span class="number">0x0B</span>,<span class="number">0x7D</span>,<span class="number">0x7D</span>,<span class="number">0x7C</span>,<span class="number">0x7D</span>,<span class="number">0x7F</span>,<span class="number">0x7F</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,</span><br><span class="line"><span class="number">0xFF</span>,<span class="number">0xDF</span>,<span class="number">0xEF</span>,<span class="number">0xF7</span>,<span class="number">0xF9</span>,<span class="number">0xBF</span>,<span class="number">0x7F</span>,<span class="number">0x80</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFD</span>,<span class="number">0xFB</span>,<span class="number">0xF7</span>,<span class="number">0xCF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*未定义的默认样式，请确保其位于数组最末尾*/</span></span><br><span class="line"><span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="number">0xFF</span>,<span class="number">0x03</span>,<span class="number">0x05</span>,<span class="number">0x09</span>,<span class="number">0x11</span>,<span class="number">0x21</span>,<span class="number">0x41</span>,<span class="number">0x81</span>,<span class="number">0x81</span>,<span class="number">0x41</span>,<span class="number">0x21</span>,<span class="number">0x11</span>,<span class="number">0x09</span>,<span class="number">0x05</span>,<span class="number">0x03</span>,<span class="number">0xFF</span>,</span><br><span class="line"><span class="number">0xFF</span>,<span class="number">0xC0</span>,<span class="number">0xA0</span>,<span class="number">0x90</span>,<span class="number">0x88</span>,<span class="number">0x84</span>,<span class="number">0x82</span>,<span class="number">0x81</span>,<span class="number">0x81</span>,<span class="number">0x82</span>,<span class="number">0x84</span>,<span class="number">0x88</span>,<span class="number">0x90</span>,<span class="number">0xA0</span>,<span class="number">0xC0</span>,<span class="number">0xFF</span>,<span class="comment">/*默认*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>在OLED.c文件中定义如下函数 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChinese</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">char</span> *Chinese)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="type">char</span> single[OLED_CHN_CHAR_WIDTH + <span class="number">1</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">uint8_t</span> ps = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*依次提取每个汉字并调用显示单个汉字的函数进行显示*/</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; Chinese[i] != <span class="string">&#x27;\0&#x27;</span>; i ++)</span><br><span class="line">&#123;</span><br><span class="line">single[ps] = Chinese[i];</span><br><span class="line">ps ++;</span><br><span class="line"><span class="keyword">if</span> (ps &gt;= OLED_CHN_CHAR_WIDTH)</span><br><span class="line">&#123;</span><br><span class="line">ps = <span class="number">0</span>;</span><br><span class="line">OLED_ShowSingleChinese(Line, Column + i / <span class="number">3</span> * <span class="number">2</span>, single);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;hanshu</span><br></pre></td></tr></table></figure></p><p><strong>代码解释：</strong></p><p>我重新定义了一个函数：</p><p><code>OLED_ShowChinese</code>函数的作用是在 OLED显示屏上显示中文字符串。它接受行号（<code>Line</code>）、列号（<code>Column</code>）以及一个中文字符串指针（<code>Chinese</code>）作为参数，将中文字符串逐个显示在指定位置。</p><h3 id="关于中文显示的补充-2">关于中文显示的补充-2</h3><p>上述代码中的 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;你&quot;</span>,</span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x60</span>,<span class="number">0xF8</span>,<span class="number">0x07</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x18</span>,<span class="number">0x0F</span>,<span class="number">0x08</span>,<span class="number">0xC8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x28</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x0C</span>,<span class="number">0x03</span>,<span class="number">0x40</span>,<span class="number">0x80</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x06</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="comment">/*0*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure> 这表示“你”显示的像素位置</p><p>获取汉字/图像的像素位置需要<code>PCtoLCD2002</code>软件。</p><p>具体使用方法见下：<ahref="https://www.bilibili.com/video/BV1EN41177Pc?p=2&amp;vd_source=da905aeb41d3bbab09f2abf41b856272">02-快速上手（下集）_哔哩哔哩_bilibili</a></p><h1 id="day-4-240916-蜂鸣器使用">DAY 4 (240916) 蜂鸣器使用</h1><h2 id="蜂鸣器使用">蜂鸣器使用</h2><p>成果<a href="https://thumbsnap.com/YR8vTJzs" title="Image Hosted by ThumbSnap"><video poster="https://thumbsnap.com/i/YR8vTJzs.jpg" loop muted autoplay playsinline><source src="https://thumbsnap.com/i/YR8vTJzs.mp4" type="video/mp4"></video></a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*开启时钟*/</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);<span class="comment">//开启GPIOB的时钟</span></span><br><span class="line"><span class="comment">//使用各个外设前必须开启时钟，否则对外设的操作无效</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*GPIO初始化*/</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;<span class="comment">//定义结构体变量</span></span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;<span class="comment">//GPIO模式，赋值为推挽输出模式</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;<span class="comment">//GPIO引脚，赋值为第12号引脚</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<span class="comment">//GPIO速度，赋值为50MHz</span></span><br><span class="line"></span><br><span class="line">GPIO_Init(GPIOB, &amp;GPIO_InitStructure);<span class="comment">//将赋值后的构体变量传递给GPIO_Init函数</span></span><br><span class="line"><span class="comment">//函数内部会自动根据结构体的参数配置相应寄存器</span></span><br><span class="line"><span class="comment">//实现GPIOB的初始化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*主循环，循环体内的代码会一直循环执行*/</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOB, GPIO_Pin_12);<span class="comment">//将PB12引脚设置为低电平，蜂鸣器鸣叫</span></span><br><span class="line">Delay_ms(<span class="number">100</span>);<span class="comment">//延时100ms</span></span><br><span class="line">GPIO_SetBits(GPIOB, GPIO_Pin_12);<span class="comment">//将PB12引脚设置为高电平，蜂鸣器停止</span></span><br><span class="line">Delay_ms(<span class="number">100</span>);<span class="comment">//延时100ms</span></span><br><span class="line">GPIO_ResetBits(GPIOB, GPIO_Pin_12);<span class="comment">//将PB12引脚设置为低电平，蜂鸣器鸣叫</span></span><br><span class="line">Delay_ms(<span class="number">100</span>);<span class="comment">//延时100ms</span></span><br><span class="line">GPIO_SetBits(GPIOB, GPIO_Pin_12);<span class="comment">//将PB12引脚设置为高电平，蜂鸣器停止</span></span><br><span class="line">Delay_ms(<span class="number">700</span>);<span class="comment">//延时700ms</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">‘</span><br></pre></td></tr></table></figure><h1 id="day-5240920-gpio数字接口结构原理gpio输入按键控制led">DAY5(240920) GPIO数字接口结构原理+GPIO输入+按键控制LED</h1><h2 id="gpio数字接口结构原理">GPIO数字接口结构原理</h2><div class="note warning flat"><p>这部分内容应该在LED闪烁之前学习</p></div><p><ahref="https://blog.csdn.net/weixin_46711336/article/details/132941831">STM32基础学习——GPIO位结构（江科大老师教程）_江科大stm32教程-CSDN博客</a></p><h3 id="gpio是什么">GPIO是什么</h3><p>GPIO是一种常见的数字接口，用于连接微控制器和其他数字信号的设备。GPIO允许微控制器读取和写入数字信号，从而控制外部设备的状态和读取外部设备的输入信号。</p><p>GPIO具有多种引脚配置，可以配置为输入模式或输出模式。在输入模式下，GPIO可以读取外部设备的状态，通常通过高电平（1）或低电平（0）来表示。在输出模式下，GPIO可以控制外部设备的状态，通过输出高电平或低电平来控制设备的开关状态。</p><p>GPIO允许我们的单片机与外部世界进行通信，它是我们控制外部设备和接收外部信号的接口。</p><h3 id="gpio工作模式主要有8种">GPIO工作模式主要有8种：</h3><table><tbody><tr class="odd"><td>模式名称</td><td>性质</td><td>特征</td></tr><tr class="even"><td>浮空输入</td><td>数字输入</td><td>可读取引脚电平，若引脚悬空，则电平不确定</td></tr><tr class="odd"><td>上拉输入</td><td>数字输入</td><td>可读取引脚电平，内部连接上拉电阻，悬空时默认高电平</td></tr><tr class="even"><td>下拉输入</td><td>数字输入</td><td>可读取引脚电平，内部连接下拉电阻，悬空时默认低电平</td></tr><tr class="odd"><td>模拟输入</td><td>模拟输入</td><td>GPIO无效，引脚直接接入内部ADC</td></tr><tr class="even"><td>开漏输出</td><td>数字输出</td><td>可输出引脚电平，高电平为高阻态，低电平接VSS</td></tr><tr class="odd"><td>推挽输出</td><td>数字输出</td><td>可输出引脚电平，高电平接VDD，低电平接VSS</td></tr><tr class="even"><td>复用开漏输出</td><td>数字输出</td><td>由片上外设控制，高电平为高阻态，低电平接VSS</td></tr><tr class="odd"><td>复用推挽输出</td><td>数字输出</td><td>由片上外设控制，高电平接VDD，低电平接VSS</td></tr></tbody></table><h3 id="关于三极管原理的补充">关于三极管原理的补充</h3><p>三极管是由两个 PN 结组成的一种半导体器件。</p><p>PN 结是半导体中最重要的基本结构之一，它是由 P 型半导体和 N型半导体接触形成的。在 PN结中，由于扩散运动和漂移运动的相互作用，形成了内建电场，使得 PN结具有单向导电性。</p><p>三极管通常由三个区域组成：发射区、基区和集电区。发射区和基区之间形成的PN 结称为发射结，基区和集电区之间形成的 PN 结称为集电结。</p><p><ahref="https://blog.csdn.net/lvturancao/article/details/91365448">三极管的介绍及工作原理_三极管的作用和工作原理-CSDN博客</a><ahref="https://www.bilibili.com/video/BV1kv411574Y/?spm_id_from=333.337.search-card.all.click&amp;vd_source=da905aeb41d3bbab09f2abf41b856272">三极管是如何导电？超形象动画让你一看就懂！_哔哩哔哩_bilibili</a></p><h2 id="gpio输入">GPIO输入</h2><p><a href="https://img.z4a.net/image/GPIO%E8%BE%93%E5%85%A5.MfXnr"><imgsrc="https://img.z4a.net/images/2024/09/20/GPIO.md.png"alt="GPIO输入" /></a></p><h2 id="按键控制led">按键控制LED</h2><div class="note warning flat"><p>后续部分内容不再提供代码，因为涉及到代码封装，讲解起来较为麻烦。</p></div><p>成果<a href="https://thumbsnap.com/e1hWHKzG" title="Image Hosted by ThumbSnap"><video poster="https://thumbsnap.com/i/e1hWHKzG.jpg" loop muted autoplay playsinline><source src="https://thumbsnap.com/i/e1hWHKzG.mp4" type="video/mp4"></video></a></p><h1 id="day-6-240921-自创-光线传感器控制led灯">DAY 6 (240921)自创-光线传感器控制LED灯</h1><p><strong>这是我的第一个自己写的程序（脱离教程）</strong>光线传感器控制LED灯 成果</p><p><a href="https://thumbsnap.com/BCFkhBtj" title="Image Hosted by ThumbSnap"><video poster="https://thumbsnap.com/i/BCFkhBtj.jpg" loop muted autoplay playsinline><source src="https://thumbsnap.com/i/BCFkhBtj.mp4" type="video/mp4"></video></a><strong>main函数</strong> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LIGHT-SENSOR.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">LIGHT_SENSOR_Init();</span><br><span class="line">LED_Init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(LIGHT_SENSOR_Get()==<span class="number">1</span>)</span><br><span class="line">LED_ON();</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">LED_off();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> LED控制 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef InitStructure;</span><br><span class="line"></span><br><span class="line">InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;</span><br><span class="line">InitStructure.GPIO_Pin=GPIO_Pin_1;</span><br><span class="line">InitStructure.GPIO_Speed=GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line">GPIO_Init(GPIOA,&amp;InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_SetBits(GPIOA,GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_ON</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA,GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_off</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOA,GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _LED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _LED_H</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_ON</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_off</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure> 光感控制 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LIGHT_SENSOR_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef InitStructure;</span><br><span class="line">InitStructure.GPIO_Mode=GPIO_Mode_IPU;</span><br><span class="line">InitStructure.GPIO_Pin=GPIO_Pin_13;</span><br><span class="line">InitStructure.GPIO_Speed=GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB,&amp;InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_13);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">LIGHT_SENSOR_Get</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_13);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> <figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _LIGHT_SENSOR_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _LIGHT_SENSOR_H</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LIGHT_SENSOR_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">LIGHT_SENSOR_Get</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="day-7-240923-外部中断入门">DAY 7 (240923) 外部中断入门</h1><h2id="外部中断exti入门包括nvic介绍">外部中断(exti）入门（包括NVIC介绍）</h2><p>前面硬件部分的内容真的看不懂，感觉要数电基础。</p><p>首先先捋一下各个设备的联系 ### NVIC简介NVIC（嵌套向量中断控制器）是用于管理微控制器中断的模块，可实现中断优先级设置、中断嵌套等功能，以高效地处理各种外部和内部中断事件。<ahref="https://img.z4a.net/image/NVIC%E6%98%AFCPU%E7%9A%84%E5%B0%8F%E5%8A%A9%E6%89%8B.MzQ3j"><imgsrc="https://img.z4a.net/images/2024/09/23/NVICCPU.png"alt="NVIC是CPU的小助手" /></a> 所以exti是只是实现中断的一种手段</p><h3 id="exti">EXTI</h3><p><a href="https://img.z4a.net/image/EXTI%E7%AE%80%E4%BB%8B.MzHjk"><imgsrc="https://img.z4a.net/images/2024/09/23/EXTIf544aa51e86abc1c.png"alt="EXTI简介" /></a> <ahref="https://img.z4a.net/image/EXTI%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84.Mzwtz"><imgsrc="https://img.z4a.net/images/2024/09/23/EXTI.png"alt="EXTI基本结构" /></a> <ahref="https://blog.csdn.net/k666499436/article/details/124181471">中断-NVIC与EXTI外设详解(超全面)-CSDN博客</a>所以我们配置的顺序是从GPIO开始，到AFIO选择线路（总共16条从AFIO中出去），进入EXTI再到NVIC。</p><p>其中GPIOAFIO是需要开启时钟的，而NVIC是CPU直接供电的，不需要另外设置。</p><h1 id="day-8-240928-自创-旋转编码器控制led亮度">DAY 8 (240928)自创-旋转编码器控制led亮度</h1><p>成果</p><p><a href="https://thumbsnap.com/pWhfFCw3" title="Image Hosted by ThumbSnap"><video poster="https://thumbsnap.com/i/pWhfFCw3.jpg" loop muted autoplay playsinline><source src="https://thumbsnap.com/i/pWhfFCw3.mp4" type="video/mp4"></video></a></p><p>运用知识点：</p><p>1.EXTI外部中断</p><p>2.PWM输出</p><h1 id="day-9-241003-自创蓝牙控制led">DAY 9 (241003)自创—蓝牙控制LED</h1><h1 id="补充stm32介绍这是cv过来的">补充：stm32介绍（这是CV过来的）</h1><ul><li><p><strong>一、架构与内核</strong></p></li><li><p><strong>内核类型</strong></p><ul><li>STM32 单片机采用了 ARM Cortex - M 系列内核，常见的有 Cortex -M0、Cortex - M3、Cortex - M4等。这些内核在性能、功耗和功能上有所不同，可以满足不同应用场景的需求。</li><li>例如，Cortex - M0内核具有低功耗、低成本的特点，适用于简单的控制和低功耗应用；Cortex - M3内核在性能上有了进一步提升，具备更高的处理能力和更丰富的指令集；Cortex -M4 内核则在 Cortex - M3的基础上增加了浮点运算单元，适合于需要进行复杂数学运算的场合，如数字信号处理等。</li></ul></li><li><p><strong>架构特点</strong></p><ul><li>STM32的架构采用了哈佛结构，即数据总线和指令总线分开，这样可以实现并行的数据访问和指令执行，提高了运行效率。</li><li>它还具备嵌套向量中断控制器（NVIC），可以实现快速的中断响应和灵活的中断优先级设置。这对于实时性要求较高的应用非常关键，例如在电机控制中，能够及时响应电机的过流、过压等异常情况，保证系统的安全运行。</li></ul></li></ul><p><strong>二、硬件资源</strong></p><ul><li><p><strong>时钟系统</strong></p><ul><li>STM32 单片机拥有复杂而灵活的时钟系统。它可以使用内部时钟源（如内部RC 振荡器）或外部时钟源（如外部晶振）来提供系统时钟。</li><li>通过时钟配置寄存器，可以对时钟进行分频、倍频等操作，以满足不同外设和系统运行的时钟需求。例如，在低功耗模式下，可以降低系统时钟频率以降低功耗；在需要高速数据处理时，可以提高时钟频率来提升系统性能。</li></ul></li><li><p><strong>GPIO（通用输入 / 输出）</strong></p><ul><li>STM32 具有丰富的 GPIO引脚，这些引脚可以配置为输入或输出模式，并且具有多种输入输出模式可供选择，如推挽输出、开漏输出、浮空输入、上拉输入、下拉输入等。</li><li>GPIO 的复用功能使得一个引脚可以用于多种不同的外设功能，例如，一个GPIO引脚既可以作为普通的数字输入输出引脚，也可以复用为定时器的输入捕获引脚、串口的发送或接收引脚等，大大提高了引脚的使用效率。</li></ul></li><li><p><strong>定时器</strong></p><ul><li>STM32单片机内置了多个定时器，包括基本定时器、通用定时器和高级定时器。</li><li>基本定时器主要用于产生定时中断，可用于简单的定时任务，如定时采样传感器数据等。通用定时器除了具备基本定时器的功能外，还可以实现输入捕获和输出比较功能。例如，在电机控制中，可以利用输入捕获功能测量电机的转速，通过输出比较功能生成PWM（脉冲宽度调制）信号来控制电机的转速和转向。高级定时器则在通用定时器的基础上增加了更多的功能，如死区时间插入等，适用于三相电机控制等复杂应用。</li></ul></li><li><p><strong>串口通信</strong></p><ul><li>STM32 支持多种串口通信协议，如 USART（通用同步 /异步收发器）、UART（通用异步收发器）、SPI（串行外设接口）和I2C（内部集成电路总线）等。</li><li>USART 和 UART 常用于与其他设备进行异步串行通信，如与 PC机进行数据传输、与其他单片机或微控制器进行通信等。SPI是一种高速同步串行通信协议，常用于与外部的高速外设进行通信，如与 Flash存储器、显示屏等进行数据传输。I2C则是一种多主从的同步串行通信协议，适用于连接多个低速外设，如温度传感器、EEPROM等。</li></ul></li><li><p><strong>ADC（模数转换器）和 DAC（数模转换器）</strong></p><ul><li>许多 STM32 型号都集成了 ADC 和 DAC 模块。ADC用于将模拟信号（如传感器输出的电压、电流等模拟信号）转换为数字信号，以便单片机进行处理。</li><li>STM32 的 ADC通常具有多通道，可以同时对多个模拟信号进行采样，并且采样精度可以达到 12位甚至更高。DAC则是将数字信号转换为模拟信号，例如在音频播放系统中，可以将数字音频信号通过DAC 转换为模拟音频信号输出到扬声器。</li></ul></li><li><p><strong>其他外设</strong></p><ul><li>除了上述主要的硬件资源外，STM32 单片机还可能配备其他外设，如CAN（控制器局域网络）控制器，用于汽车电子等领域的通信；USB 接口，方便与USB 设备进行连接和通信；外部中断 /事件控制器，用于响应外部事件的触发等。</li></ul></li></ul><p><strong>三、开发环境与编程</strong></p><ul><li><p><strong>开发环境</strong></p><ul><li>STM32 的开发通常使用 Keil MDK、IAR Embedded Workbench等集成开发环境（IDE）。</li><li>这些 IDE 提供了代码编辑、编译、调试等一站式开发服务。例如，Keil MDK集成了编译器、调试器和仿真器等工具，并且支持 C、C++等编程语言。在开发过程中，开发者可以在 IDE中方便地编写代码、设置编译选项、进行在线调试等操作。</li></ul></li><li><p><strong>编程语言</strong></p><ul><li>主要使用 C 语言和 C++语言进行编程，也可以使用汇编语言进行底层的优化和特殊功能的实现。</li><li>C语言是最常用的编程语言，它具有高效、灵活、可移植性好等优点。对于一些对性能要求较高的场合，可以使用汇编语言来编写部分关键代码，以进一步提高程序的运行效率。</li></ul></li></ul><p><strong>四、应用领域</strong></p><ul><li><p><strong>工业控制</strong></p><ul><li>在工业自动化领域，STM32 单片机可用于控制各种工业设备，如PLC（可编程逻辑控制器）、工业机器人、数控机床等。</li><li>例如，在工业机器人中，STM32可以实现对机器人关节电机的精确控制，包括电机的转速、位置和转矩控制等。通过采集机器人关节的位置传感器数据，利用STM32 的定时器和 ADC 等外设进行处理，并根据控制算法输出 PWM信号来驱动电机，实现机器人的精确运动控制。</li></ul></li><li><p><strong>消费电子</strong></p><ul><li>广泛应用于消费电子产品中，如智能手机、平板电脑、智能手环、智能家居设备等。</li><li>在智能手环中，STM32单片机负责采集各种传感器（如加速度计、心率传感器等）的数据，进行数据处理和分析，然后将处理后的结果（如运动步数、心率等）通过蓝牙等无线通信方式传输到手机等设备上进行显示和进一步分析。</li></ul></li><li><p><strong>汽车电子</strong></p><ul><li>在汽车电子系统中，STM32可用于发动机控制、车身电子稳定系统（ESP）、车载娱乐系统等方面。</li><li>例如，在发动机控制系统中，STM32单片机通过采集发动机的各种传感器（如曲轴位置传感器、氧传感器等）的数据，实时计算和调整燃油喷射量、点火提前角等参数，以保证发动机的高效运行和低排放。</li></ul></li><li><p><strong>物联网（IoT）</strong></p><ul><li>作为物联网设备的核心控制器，STM32单片机可以连接各种传感器和执行器，实现设备之间的互联互通。</li><li>在智能农业物联网系统中，STM32单片机可以采集土壤湿度、温度、光照强度等环境参数，通过无线通信模块（如LoRa、NB - IoT等）将数据传输到云端进行分析和处理，同时根据云端的指令控制灌溉设备、遮阳设备等执行器的动作，实现农业生产的智能化管理。</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> c语言 </tag>
            
            <tag> 单片机 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python语言程序设计基础</title>
      <link href="/2024/09/10/python%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/"/>
      <url>/2024/09/10/python%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="第一周基础语法">【第一周】基础语法</h1><h3id="简答题-输出1到100之间的所有质数">1. (简答题) 输出1到100之间的所有质数。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,<span class="number">100</span>):  </span><br><span class="line">    flag=<span class="literal">True</span>  </span><br><span class="line">          </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,num):  </span><br><span class="line">        <span class="keyword">if</span> num%i==<span class="number">0</span>:  </span><br><span class="line">            flag=<span class="literal">False</span>  </span><br><span class="line">            <span class="keyword">break</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> flag:  </span><br><span class="line">        <span class="built_in">print</span>(num)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="简答题-判断回文数">2. (简答题) 判断回文数</h3><p>判断一个字符串是否是回文字符串（正着读和倒着读都一样），如果是则输出"是回文字符串"，否则输出"不是回文字符串"。</p><p>程序字符串通过input输入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">string=<span class="built_in">input</span>(<span class="string">&quot;请输入一个字符串：&quot;</span>)  </span><br><span class="line">length=<span class="built_in">len</span>(string)  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):  </span><br><span class="line">    flag=<span class="literal">True</span>  </span><br><span class="line">    <span class="keyword">if</span> string[<span class="number">0</span>+i]!=string[-<span class="number">1</span>-i]:  </span><br><span class="line">        flag=<span class="literal">False</span>  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> flag:  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;是回文字符串&quot;</span>)  </span><br><span class="line"><span class="keyword">else</span>:  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不是回文字符串&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="简答题-计算斐波那契数列的前10个数并输出">3. (简答题)计算斐波那契数列的前10个数并输出。</h3><p>计算斐波那契数列的前10个数并输出。 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a,b=<span class="number">0</span>,<span class="number">1</span>  </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):  </span><br><span class="line">    <span class="built_in">print</span>(a)  </span><br><span class="line">    a,b=b,a+b</span><br></pre></td></tr></table></figure></p><h3 id="简答题-检查数字">4. (简答题) 检查数字</h3><p>判断一个字符串中是否包含数字，如果包含则输出"包含数字"，否则输出"不包含数字"。使用input输入字符串<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span>=<span class="built_in">input</span>(<span class="string">&quot;输入字符串：&quot;</span>)  </span><br><span class="line">length=<span class="built_in">len</span>(<span class="built_in">str</span>)  </span><br><span class="line">  </span><br><span class="line">flag=<span class="literal">False</span>  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):  </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">str</span>[i]&gt;=<span class="string">&quot;0&quot;</span> <span class="keyword">and</span> <span class="built_in">str</span>[i]&lt;=<span class="string">&quot;9&quot;</span>:  </span><br><span class="line">        flag=<span class="literal">True</span>  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> flag:  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;包含数字&quot;</span>)  </span><br><span class="line"><span class="keyword">else</span>:  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不包含数字&quot;</span>)</span><br></pre></td></tr></table></figure></p><h3 id="简答题-有效手机号码">5. (简答题) 有效手机号码</h3><p>检查一个字符串是否是有效的手机号码（11位数字，以1开头），如果是则输出"有效手机号码"，否则输出"无效手机号码"。使用input输入手机号码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">num=<span class="built_in">input</span>(<span class="string">&quot;输入手机号码：&quot;</span>)  </span><br><span class="line">length=<span class="built_in">len</span>(num)  </span><br><span class="line">flag=<span class="literal">True</span>  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> num[<span class="number">0</span>]!=<span class="number">1</span> <span class="keyword">or</span> length!=<span class="number">11</span>:  </span><br><span class="line">    flag=<span class="literal">False</span>  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> flag:  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;有效手机号码&quot;</span>)  </span><br><span class="line"><span class="keyword">else</span>:  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;无效手机号码&quot;</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 杭电 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>团体程序设计天梯赛-练习集</title>
      <link href="/2024/09/08/%E5%9B%A2%E4%BD%93%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%A4%A9%E6%A2%AF%E8%B5%9B-%E7%BB%83%E4%B9%A0%E9%9B%86/"/>
      <url>/2024/09/08/%E5%9B%A2%E4%BD%93%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%A4%A9%E6%A2%AF%E8%B5%9B-%E7%BB%83%E4%B9%A0%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="序言">序言</h1><p>pta的c语言练习（自己找的，仅供学习）</p><p>本文不会提供所有的题目与代码</p><p>网址 <ahref="https://pintia.cn/problem-sets/994805046380707840/exam/problems/type/7?problemSetProblemId=994805147132084224&amp;page=0">L1-001Hello World - 团体程序设计天梯赛-练习集 (pintia.cn)</a></p><h1 id="l1-005-考试座位号">L1-005 考试座位号</h1><p>每个 PAT考生在参加考试时都会被分配两个座位号，一个是试机座位，一个是考试座位。正常情况下，考生在入场时先得到试机座位号码，入座进入试机状态后，系统会显示该考生的考试座位号码，考试时考生需要换到考试座位就座。但有些考生迟到了，试机已经结束，他们只能拿着领到的试机座位号码求助于你，从后台查出他们的考试座位号码。</p><h3 id="输入格式">输入格式：</h3><p>输入第一行给出一个正整数 N（≤1000），随后 N行，每行给出一个考生的信息：<code>准考证号 试机座位号 考试座位号</code>。其中<code>准考证号</code>由16 位数字组成，座位从 1 到 N编号。输入保证每个人的准考证号都不同，并且任何时候都不会把两个人分配到同一个座位上。</p><p>考生信息之后，给出一个正整数 M（≤N），随后一行中给出 M个待查询的试机座位号码，以空格分隔。</p><h3 id="输出格式">输出格式：</h3><p>对应每个需要查询的试机座位号码，在一行中输出对应考生的准考证号和考试座位号码，中间用1 个空格分隔。</p><h3 id="输入样例">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">3310120150912233 2 4</span><br><span class="line">3310120150912119 4 1</span><br><span class="line">3310120150912126 1 3</span><br><span class="line">3310120150912002 3 2</span><br><span class="line">2</span><br><span class="line">3 4</span><br></pre></td></tr></table></figure><h3 id="输出样例">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3310120150912002 2</span><br><span class="line">3310120150912119 1</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">char</span> id[<span class="number">17</span>];  <span class="comment">//数字过大不能用int型</span></span><br><span class="line"><span class="type">int</span> tryseat;</span><br><span class="line"><span class="type">int</span> examseat;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">students</span>[<span class="title">n</span>];</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s %d %d&quot;</span>,students[i].id,&amp;students[i].tryseat,&amp;students[i].examseat);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[m];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(students[j].tryseat==arr[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %d\n&quot;</span>,students[j].id,students[j].examseat);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="l1-006-连续因子">L1-006 连续因子</h1><p>一个正整数 N 的因子中可能存在若干连续的数字。例如 630 可以分解为3×5×6×7，其中 5、6、7 就是 3 个连续的数字。给定任一正整数N，要求编写程序求出最长连续因子的个数，并输出最小的连续因子序列。</p><h3 id="输入格式-1">输入格式：</h3><p>输入在一行中给出一个正整数 N（1&lt;N&lt;231）。</p><h3 id="输出格式-1">输出格式：</h3><p>首先在第 1 行输出最长连续因子的个数；然后在第 2 行中按<code>因子1*因子2*……*因子k</code>的格式输出最小的连续因子序列，其中因子按递增顺序输出，1 不算在内。</p><h3 id="输入样例-1">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">630</span><br></pre></td></tr></table></figure><h3 id="输出样例-1">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">5*6*7</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个代码拿不了满分</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> n;  <span class="comment">//此处用int型也没有问题</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> i, j, len = <span class="number">0</span>, start = <span class="number">0</span>, tempLen, tempStart;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> sqrtN = <span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= sqrtN; i++) &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> temp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (j = i; j &lt;= sqrtN; j++) &#123;</span><br><span class="line">            temp *= j;</span><br><span class="line">            <span class="keyword">if</span> (n % temp!= <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (j - i + <span class="number">1</span> &gt; len) &#123;</span><br><span class="line">                len = j - i + <span class="number">1</span>;</span><br><span class="line">                start = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (len == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1\n%lld&quot;</span>, n);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, len);</span><br><span class="line">        <span class="keyword">for</span> (i = start; i &lt; start + len - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%lld*&quot;</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, start + len - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="l1-010-比较大小">L1-010 比较大小</h1><p>本题要求将输入的任意3个整数从小到大输出。</p><h3 id="输入格式-2">输入格式:</h3><p>输入在一行中给出3个整数，其间以空格分隔。</p><h3 id="输出格式-2">输出格式:</h3><p>在一行中将3个整数从小到大输出，其间以“-&gt;”相连。</p><h3 id="输入样例-2">输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 2 8</span><br></pre></td></tr></table></figure><h3 id="输出样例-2">输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2-&gt;4-&gt;8</span><br></pre></td></tr></table></figure><p>我的代码 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 冒泡排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubbleSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="type">int</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bubbleSort(arr,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d-&gt;&quot;</span>,arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,arr[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>AI的代码 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//AI</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 冒泡排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubbleSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="type">int</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">3</span>];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取用户输入</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;arr[<span class="number">0</span>], &amp;arr[<span class="number">1</span>], &amp;arr[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">    bubbleSort(arr, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出排序后的数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d-&gt;%d-&gt;%d&quot;</span>, arr[<span class="number">0</span>], arr[<span class="number">1</span>], arr[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="l1-023-输出gplt">L1-023 输出GPLT</h1><p>给定一个长度不超过10000的、仅由英文字母构成的字符串。请将字符重新调整顺序，按<code>GPLTGPLT....</code>这样的顺序输出，并忽略其它字符。当然，四种字符（不区分大小写）的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按<code>GPLT</code>的顺序打印，直到所有字符都被输出。</p><h3 id="输入格式-3">输入格式：</h3><p>输入在一行中给出一个长度不超过10000的、仅由英文字母构成的非空字符串。</p><h3 id="输出格式-3">输出格式：</h3><p>在一行中按题目要求输出排序后的字符串。题目保证输出非空。</p><h3 id="输入样例-3">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pcTclnGloRgLrtLhgljkLhGFauPewSKgt</span><br></pre></td></tr></table></figure><h3 id="输出样例-3">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GPLTGPLTGLTGLGLL</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">10001</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">    <span class="comment">// 定义一个整数数组，分别存储 G、P、L、T 的个数，初始值为 0</span></span><br><span class="line">    <span class="type">int</span> counts[<span class="number">4</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; str[i]; i++) &#123;</span><br><span class="line">        <span class="type">char</span> c = <span class="built_in">tolower</span>(str[i]);</span><br><span class="line">        <span class="comment">// 根据字符判断并更新相应的计数</span></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;g&#x27;</span>) counts[<span class="number">0</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;p&#x27;</span>) counts[<span class="number">1</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;l&#x27;</span>) counts[<span class="number">2</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;t&#x27;</span>) counts[<span class="number">3</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 循环输出字符，直到所有计数都为 0</span></span><br><span class="line">    <span class="keyword">while</span> (counts[<span class="number">0</span>] &gt; <span class="number">0</span> || counts[<span class="number">1</span>] &gt; <span class="number">0</span> || counts[<span class="number">2</span>] &gt; <span class="number">0</span> || counts[<span class="number">3</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果 G 的计数大于 0，输出 G 并减少 G 的计数</span></span><br><span class="line">        <span class="keyword">if</span> (counts[<span class="number">0</span>] &gt; <span class="number">0</span>) &#123; <span class="built_in">putchar</span>(<span class="string">&#x27;G&#x27;</span>); counts[<span class="number">0</span>]--; &#125;</span><br><span class="line">        <span class="comment">// 如果 P 的计数大于 0，输出 P 并减少 P 的计数</span></span><br><span class="line">        <span class="keyword">if</span> (counts[<span class="number">1</span>] &gt; <span class="number">0</span>) &#123; <span class="built_in">putchar</span>(<span class="string">&#x27;P&#x27;</span>); counts[<span class="number">1</span>]--; &#125;</span><br><span class="line">        <span class="comment">// 如果 L 的计数大于 0，输出 L 并减少 L 的计数</span></span><br><span class="line">        <span class="keyword">if</span> (counts[<span class="number">2</span>] &gt; <span class="number">0</span>) &#123; <span class="built_in">putchar</span>(<span class="string">&#x27;L&#x27;</span>); counts[<span class="number">2</span>]--; &#125;</span><br><span class="line">        <span class="comment">// 如果 T 的计数大于 0，输出 T 并减少 T 的计数</span></span><br><span class="line">        <span class="keyword">if</span> (counts[<span class="number">3</span>] &gt; <span class="number">0</span>) &#123; <span class="built_in">putchar</span>(<span class="string">&#x27;T&#x27;</span>); counts[<span class="number">3</span>]--; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c语言 </tag>
            
            <tag> PTA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24级杭电先修课PTA作业</title>
      <link href="/2024/08/24/24%E7%BA%A7%E6%9D%AD%E7%94%B5%E5%85%88%E4%BF%AE%E8%AF%BEPTA%E4%BD%9C%E4%B8%9A/"/>
      <url>/2024/08/24/24%E7%BA%A7%E6%9D%AD%E7%94%B5%E5%85%88%E4%BF%AE%E8%AF%BEPTA%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="序言">序言</h1><p>这是pta的c语言练习</p><p>由于本人能力有限，后面个别题目未提供代码。可参考<ahref="https://zyzblog.com/post/42283b9e.html">张跃哲同学的代码</a><span id="more"></span></p><h1 id="section">2024-1</h1><h2 id="最好的文档">最好的文档</h2><p>有一位软件工程师说过一句很有道理的话：“Good code is its own bestdocumentation.”（好代码本身就是最好的文档）。本题就请你直接在屏幕上输出这句话。</p><h3 id="输入格式">输入格式：</h3><p>本题没有输入。</p><h3 id="输出格式">输出格式：</h3><p>在一行中输出<code>Good code is its own best documentation.</code>。</p><h3 id="输入样例">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure><h3 id="输出样例">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Good code is its own best documentation.</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Good code is its own best documentation.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自动编程">自动编程</h2><p>输出语句是每个程序员首先要掌握的语句。Python的输出语句很简单，只要写一个 <code>print(X)</code> 即可，其中<code>X</code> 是需要输出的内容。</p><p>本题就请你写一个自动编程机，对任何一个要输出的整数N，给出输出这个整数的 Python 语句。</p><h3 id="输入格式-1">输入格式：</h3><p>输入给出一个不超过 105 的正整数。</p><h3 id="输出格式-1">输出格式：</h3><p>在一行中打印输出这个整数的 Python 语句，其中不包含任何空格。</p><h3 id="输入样例-1">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">520</span><br></pre></td></tr></table></figure><h3 id="输出样例-1">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(520)</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;print(%d)&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="什么是机器学习">什么是机器学习</h2><p>什么是机器学习？上图展示了一段面试官与“机器学习程序”的对话：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">面试官：9 +<span class="number"> 10 </span>等于多少？</span><br><span class="line">答：3</span><br><span class="line">面试官：差远了，是19。</span><br><span class="line">答：16</span><br><span class="line">面试官：错了，是19。</span><br><span class="line">答：18</span><br><span class="line">面试官：不，是19。</span><br><span class="line">答：19</span><br></pre></td></tr></table></figure><p>本题就请你模仿这个“机器学习程序”的行为。</p><h3 id="输入格式-2">输入格式：</h3><p>输入在一行中给出两个整数，绝对值都不超过100，中间用一个空格分开，分别表示面试官给出的两个数字 A 和 B。</p><h3 id="输出格式-2">输出格式：</h3><p>要求你输出 4 行，每行一个数字。第 1 行比正确结果少 16，第 2 行少3，第 3 行少 1，最后一行才输出 A+B 的正确结果。</p><h3 id="输入样例-2">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9 10</span><br></pre></td></tr></table></figure><h3 id="输出样例-2">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">16</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a,b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a+b<span class="number">-16</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a+b<span class="number">-3</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a+b<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a+b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="section-1">2024-2</h1><h2 id="是不是太胖了">是不是太胖了</h2><p>据说一个人的标准体重应该是其身高（单位：厘米）减去100、再乘以0.9所得到的公斤数。已知市斤的数值是公斤数值的两倍。现给定某人身高，请你计算其标准体重应该是多少？（顺便也悄悄给自己算一下吧……）</p><h3 id="输入格式-3">输入格式：</h3><p>输入第一行给出一个正整数<code>H</code>（100 &lt; H ≤300），为某人身高。</p><h3 id="输出格式-3">输出格式：</h3><p>在一行中输出对应的标准体重，单位为市斤，保留小数点后1位。</p><h3 id="输入样例-3">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">169</span><br></pre></td></tr></table></figure><h3 id="输出样例-3">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">124.2</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> h;</span><br><span class="line"><span class="type">double</span> w;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;h);</span><br><span class="line">w=(h<span class="number">-100</span>)*<span class="number">0.9</span>*<span class="number">2</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.1f&quot;</span>,w);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="计算存款利息">计算存款利息</h2><p>本题目要求计算存款利息，计算公式为interest=money×(1+rate)year−money，其中interest为存款到期时的利息（税前），money是存款金额，year是存期，rate是年利率。</p><h3 id="输入格式-4">输入格式：</h3><p>输入在一行中顺序给出三个正实数money、year和rate，以空格分隔。</p><h3 id="输出格式-4">输出格式：</h3><p>在一行中按“interest = 利息”的格式输出，其中利息保留两位小数。</p><h3 id="输入样例-4">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1000 3 0.025</span><br></pre></td></tr></table></figure><h3 id="输出样例-4">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">interest = 76.89</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> m,y,r,i;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf&quot;</span>,&amp;m,&amp;y,&amp;r);</span><br><span class="line">i=m*<span class="built_in">pow</span>((<span class="number">1</span>+r),y)-m;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;interest = %.2lf&quot;</span>,i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="计算摄氏温度">计算摄氏温度</h2><p>给定一个华氏温度F，本题要求编写程序，计算对应的摄氏温度C。计算公式：C=5×(F−32)/9。题目保证输入与输出均在整型范围内。</p><h3 id="输入格式-5">输入格式:</h3><p>输入在一行中给出一个华氏温度。</p><h3 id="输出格式-5">输出格式:</h3><p>在一行中按照格式“Celsius = C”输出对应的摄氏温度C的整数值。</p><h3 id="输入样例-5">输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">150</span><br></pre></td></tr></table></figure><h3 id="输出样例-5">输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Celsius = 65</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> c,f;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;f);</span><br><span class="line">c=<span class="number">5</span>*(f<span class="number">-32</span>)/<span class="number">9</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Celsius = %d&quot;</span>,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="section-2">2024-3</h1><h2 id="程序员买包子">程序员买包子</h2><figure><imgsrc="https://images.ptausercontent.com/a35ac075-7709-4ff7-b7ce-6d2208afc6af.jpg"alt="bao.jpg" /><figcaption aria-hidden="true">bao.jpg</figcaption></figure><p>这是一条检测真正程序员的段子：假如你被家人要求下班顺路买十只包子，如果看到卖西瓜的，买一只。那么你会在什么情况下只买一只包子回家？<br />本题要求你考虑这个段子的通用版：假如你被要求下班顺路买 N只包子，如果看到卖 X 的，买 M 只。那么如果你最后买了 K只包子回家，说明你看到卖 X 的没有呢？</p><h3 id="输入格式-6">输入格式：</h3><p>输入在一行中顺序给出题面中的 N、X、M、K，以空格分隔。其中 N、M 和 K为不超过 1000 的正整数，X 是一个长度不超过 10的、仅由小写英文字母组成的字符串。题目保证 N=M。</p><h3 id="输出格式-6">输出格式：</h3><p>在一行中输出结论，格式为：</p><ul><li>如果 K=N，输出 <code>mei you mai X de</code>；</li><li>如果 K=M，输出 <code>kan dao le mai X de</code>；</li><li>否则输出 <code>wang le zhao mai X de</code>.<br />其中 <code>X</code> 是输入中给定的字符串 X。</li></ul><h3 id="输入样例-1-1">输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 xigua 1 10</span><br></pre></td></tr></table></figure><h3 id="输出样例-1-1">输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mei you mai xigua de</span><br></pre></td></tr></table></figure><h3 id="输入样例-2-1">输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 huanggua 1 1</span><br></pre></td></tr></table></figure><h3 id="输出样例-2-1">输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kan dao le mai huanggua de</span><br></pre></td></tr></table></figure><h3 id="输入样例-3-1">输入样例 3：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 shagua 1 250</span><br></pre></td></tr></table></figure><h3 id="输出样例-3-1">输出样例 3：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wang le zhao mai shagua de</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> N,M,K;</span><br><span class="line">    <span class="type">char</span> X[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %s %d %d&quot;</span>,&amp;N,&amp;X,&amp;M,&amp;K);</span><br><span class="line">    <span class="keyword">if</span>(K==N)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;mei you mai %s de&quot;</span>,X);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(K==M)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;kan dao le mai %s de&quot;</span>,X);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;wang le zhao mai %s de&quot;</span>,X);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="新胖子公式">新胖子公式</h2><p>根据钱江晚报官方微博的报导，最新的肥胖计算方法为：体重(kg) / 身高(m)的平方。如果超过25，你就是胖子。于是本题就请你编写程序自动判断一个人到底算不算胖子。</p><h3 id="输入格式-7">输入格式：</h3><p>输入在一行中给出两个正数，依次为一个人的体重（以 kg为单位）和身高（以 m 为单位），其间以空格分隔。其中体重不超过 1000kg，身高不超过 3.0 m。</p><h3 id="输出格式-7">输出格式：</h3><p>首先输出将该人的体重和身高代入肥胖公式的计算结果，保留小数点后 1位。如果这个数值大于 25，就在第二行输出 <code>PANG</code>，否则输出<code>Hai Xing</code>。</p><h3 id="输入样例-1-2">输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">100.1 1.74</span><br></pre></td></tr></table></figure><h3 id="输出样例-1-2">输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">33.1</span><br><span class="line">PANG</span><br></pre></td></tr></table></figure><h3 id="输入样例-2-2">输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">65 1.70</span><br></pre></td></tr></table></figure><h3 id="输出样例-2-2">输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">22.5</span><br><span class="line">Hai Xing</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> l,w,r;</span><br><span class="line"><span class="type">char</span> s[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>,&amp;w,&amp;l);</span><br><span class="line">r=w/<span class="built_in">pow</span>(l,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">strcpy</span>(s,r&gt;<span class="number">25</span>?<span class="string">&quot;PANG&quot;</span>:<span class="string">&quot;Hai Xing&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.1lf\n%s&quot;</span>,r,s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="真的恭喜你">真的恭喜你</h2><p>当别人告诉你自己考了 x 分的时候，你要回答说：“恭喜你考了 x分！”比如小明告诉你他考了90分，你就用汉语拼音打出来<code>gong xi ni kao le 90 fen!</code>。</p><p>但是如果小明没考好，比如只考了 20分，你也“恭喜”人家就不对了。这时候你应该安慰他说：“考了 20分别泄气！”用汉语拼音写出来就是<code>kao le 20 fen bie xie qi!</code>。</p><h3 id="输入格式-8">输入格式：</h3><p>输入在一行里给出一位小朋友的分数。这个分数是一个 0 到 100之间的整数。</p><h3 id="输出格式-8">输出格式：</h3><p>在一行中输出你对这位小朋友说的话。如果人家考到不低于 90 分，就说<code>gong xi ni kao le X fen!</code>；如果不到 90 分，就说<code>kao le X fen bie xie qi!</code>。其中 <code>X</code>是小朋友输入的分数。</p><h3 id="输入样例-1-3">输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">95</span><br></pre></td></tr></table></figure><h3 id="输出样例-1-3">输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gong xi ni kao le 95 fen!</span><br></pre></td></tr></table></figure><h3 id="输入样例-2-3">输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">89</span><br></pre></td></tr></table></figure><h3 id="输出样例-2-3">输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kao le 89 fen bie xie qi</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line"><span class="keyword">if</span> (a&lt;<span class="number">90</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;kao le %d fen bie xie qi!&quot;</span>,a);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;gong xi ni kao le %d fen!&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="判断一个三位数是否为水仙花数">判断一个三位数是否为水仙花数</h2><p>本题要求编写程序，判断一个给定的三位数是否为水仙花数。三位水仙花数，即其个位、十位、百位数字的立方和等于该数本身。</p><h3 id="输入格式-9">输入格式:</h3><p>输入在一行中给出一个需要判断的整数 N（100≤N≤999）。</p><h3 id="输出格式-9">输出格式:</h3><p>如果N是水仙花数，则在一行中输出<code>Yes</code>，否则输出<code>No</code>。如果N不是三位数，则输出<code>Invalid Value.</code>。</p><h3 id="输入样例1">输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">153</span><br></pre></td></tr></table></figure><h3 id="输出样例1">输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes</span><br></pre></td></tr></table></figure><h3 id="输入样例2">输入样例2:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">500</span><br></pre></td></tr></table></figure><h3 id="输出样例2">输出样例2:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No</span><br></pre></td></tr></table></figure><h3 id="输入样例3">输入样例3:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-2</span><br></pre></td></tr></table></figure><h3 id="输出样例3">输出样例3:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invalid Value.</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a,a1,a2,a3;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">a1=a/<span class="number">100</span>;</span><br><span class="line">a2=(a/<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line">a3=a%<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (a&gt;=<span class="number">100</span>&amp;&amp;a&lt;<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">if</span> (a==<span class="built_in">pow</span>(a1,<span class="number">3</span>)+<span class="built_in">pow</span>(a2,<span class="number">3</span>)+<span class="built_in">pow</span>(a3,<span class="number">3</span>))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Invalid Value.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="成绩转换">成绩转换</h2><p>本题要求编写程序将一个百分制成绩转换为五分制成绩。转换规则：</p><ul><li>大于等于90分为A；</li><li>小于90且大于等于80为B；</li><li>小于80且大于等于70为C；</li><li>小于70且大于等于60为D；</li><li>小于60为E。</li></ul><h3 id="输入格式-10">输入格式:</h3><p>输入在一行中给出一个整数的百分制成绩。</p><h3 id="输出格式-10">输出格式:</h3><p>在一行中输出对应的五分制成绩。</p><h3 id="输入样例-6">输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">90</span><br></pre></td></tr></table></figure><h3 id="输出样例-6">输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line"><span class="keyword">if</span>(a&gt;=<span class="number">90</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;A&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a&gt;=<span class="number">80</span>&amp;&amp;a&lt;<span class="number">90</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a&gt;=<span class="number">70</span>&amp;&amp;a&lt;<span class="number">80</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;C&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a&gt;=<span class="number">60</span>&amp;&amp;a&lt;<span class="number">70</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;D&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a&lt;<span class="number">60</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;E&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="五级制成绩">五级制成绩</h2><h3 id="任务描述">任务描述</h3><p>五级制成绩表示法可以这样来理解，A代表[90-100]、B代表[80-90)、C代表[70-80)、D代表[60-70)、E代表[0-60)。<br />给出五级制成绩(一个字符)，请输出这个字符所代表的分数范围。</p><h3 id="输入格式-11">输入格式:</h3><p>一个大写的英文字符，代表五级制成绩。</p><h3 id="输出格式-11">输出格式:</h3><p>在一行中输出该成绩所表示的整数成绩范围区间，如果该字符不在五级制定义范围之内，输出：ERROR。</p><h3 id="输入样例1-1">输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A</span><br></pre></td></tr></table></figure><h3 id="输出样例1-1">输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[90-100]</span><br></pre></td></tr></table></figure><h3 id="输入样例2-1">输入样例2:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D</span><br></pre></td></tr></table></figure><h3 id="输出样例2-1">输出样例2:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[60-70)</span><br></pre></td></tr></table></figure><h3 id="输入样例3-1">输入样例3:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X</span><br></pre></td></tr></table></figure><h3 id="输出样例3-1">输出样例3:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;a);</span><br><span class="line"><span class="keyword">if</span>(a==<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;[90-100]&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="string">&#x27;B&#x27;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;[80-90)&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;[70-80)&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;[60-70)&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="string">&#x27;E&#x27;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;[0-60)&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输出星期名">输出星期名</h2><p>请编写程序，输入星期数，输出对应的英文星期名。</p><table><tbody><tr class="odd"><td><strong>星期数</strong></td><td><strong>星期名</strong></td></tr><tr class="even"><td>0</td><td>Sunday</td></tr><tr class="odd"><td>1</td><td>Monday</td></tr><tr class="even"><td>2</td><td>Tuesday</td></tr><tr class="odd"><td>3</td><td>Wednesday</td></tr><tr class="even"><td>4</td><td>Thursday</td></tr><tr class="odd"><td>5</td><td>Friday</td></tr><tr class="even"><td>6</td><td>Saturday</td></tr></tbody></table><h4 id="输入格式-12">输入格式</h4><blockquote><p>w</p></blockquote><h4 id="输出格式-12">输出格式</h4><blockquote><p>若 w 在 0 ~ 6 范围内，则输出星期名 若 w 在 0 ~ 6范围外，则输出None</p></blockquote><h4 id="输入样例1-2">输入样例1</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="输出样例1-2">输出样例1</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wednesday</span><br></pre></td></tr></table></figure><h4 id="输入样例2-2">输入样例2</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure><h4 id="输出样例2-2">输出样例2</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">None</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">char</span> s[<span class="number">8</span>][<span class="number">1000</span>]=&#123;<span class="string">&quot;Sunday&quot;</span>,<span class="string">&quot;Monday&quot;</span>,<span class="string">&quot;Tuesday&quot;</span>,<span class="string">&quot;Wednesday&quot;</span>,<span class="string">&quot;Thursday&quot;</span>,<span class="string">&quot;Friday&quot;</span>,<span class="string">&quot;Saturday&quot;</span>&#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line"><span class="keyword">if</span>(a&gt;=<span class="number">0</span>&amp;&amp;a&lt;<span class="number">7</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,s[a]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;None&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="section-3">2024-4</h1><h2 id="电子汪">电子汪</h2><p>据说汪星人的智商能达到人类 4岁儿童的水平，更有些聪明汪会做加法计算。比如你在地上放两堆小球，分别有 1只球和 2 只球，聪明汪就会用“汪！汪！汪！”表示 1 加 2 的结果是 3。</p><p>本题要求你为电子宠物汪做一个模拟程序，根据电子眼识别出的两堆小球的个数，计算出和，并且用汪星人的叫声给出答案。</p><h3 id="输入格式-13">输入格式：</h3><p>输入在一行中给出两个 [1, 9] 区间内的正整数 A 和 B，用空格分隔。</p><h3 id="输出格式-13">输出格式：</h3><p>在一行中输出 A + B 个<code>Wang!</code>。</p><h3 id="输入样例-7">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 1</span><br></pre></td></tr></table></figure><h3 id="输出样例-7">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wang!Wang!Wang!</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a,b,i;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;a+b;i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Wang!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="爬动的蠕虫">爬动的蠕虫</h2><p>一条蠕虫长1寸，在一口深为N寸的井的底部。已知蠕虫每1分钟可以向上爬U寸，但必须休息1分钟才能接着往上爬。在休息的过程中，蠕虫又下滑了D寸。就这样，上爬和下滑重复进行。请问，蠕虫需要多长时间才能爬出井？</p><p>这里要求不足1分钟按1分钟计，并且假定只要在某次上爬过程中蠕虫的头部到达了井的顶部，那么蠕虫就完成任务了。初始时，蠕虫是趴在井底的（即高度为0）。</p><h3 id="输入格式-14">输入格式：</h3><p>输入在一行中顺序给出3个正整数N、U、D，其中D&lt;U，N不超过100。</p><h3 id="输出格式-14">输出格式：</h3><p>在一行中输出蠕虫爬出井的时间，以分钟为单位。</p><h3 id="输入样例-8">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12 3 1</span><br></pre></td></tr></table></figure><h3 id="输出样例-8">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> N, U, D;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;N, &amp;U, &amp;D);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> time = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> position = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (position &lt; N) &#123;</span><br><span class="line">        position += U;</span><br><span class="line">        time++;</span><br><span class="line">        <span class="keyword">if</span> (position &gt;= N) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        position -= D;</span><br><span class="line">        time++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, time);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="约分最简分式">约分最简分式</h2><p>分数可以表示为<code>分子/分母</code>的形式。编写一个程序，要求用户输入一个分数，然后将其约分为最简分式。最简分式是指分子和分母不具有可以约分的成分了。如6/12可以被约分为1/2。当分子大于分母时，不需要表达为整数又分数的形式，即11/8还是11/8；而当分子分母相等时，仍然表达为1/1的分数形式。</p><h3 id="输入格式-15">输入格式：</h3><p>输入在一行中给出一个分数，分子和分母中间以斜杠<code>/</code>分隔，如：<code>12/34</code>表示34分之12。分子和分母都是正整数（不包含0，如果不清楚正整数的定义的话）。</p><p><strong>提示：</strong></p><ul><li>对于C语言，在<code>scanf</code>的格式字符串中加入<code>/</code>，让<code>scanf</code>来处理这个斜杠。</li><li>对于Python语言，用<code>a,b=map(int, input().split('/'))</code>这样的代码来处理这个斜杠。</li></ul><h3 id="输出格式-15">输出格式：</h3><p>在一行中输出这个分数对应的最简分式，格式与输入的相同，即采用<code>分子/分母</code>的形式表示分数。如<br /><code>5/6</code>表示6分之5。</p><h3 id="输入样例-9">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">66/120</span><br></pre></td></tr></table></figure><h3 id="输出样例-9">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11/20</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">calculate</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (b!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">int</span> temp=b;</span><br><span class="line">        b=a%b;</span><br><span class="line">        a=temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d/%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> y=calculate(a,b);</span><br><span class="line"></span><br><span class="line">    a/=y;</span><br><span class="line">    b/=y;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d/%d\n&quot;</span>,a,b);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="寻找250">寻找250</h2><p><img src="https://images.ptausercontent.com/365" /></p><p>对方不想和你说话，并向你扔了一串数……而你必须从这一串数字中找到“250”这个高大上的感人数字。</p><h3 id="输入格式-16">输入格式：</h3><p>输入在一行中给出不知道多少个绝对值不超过1000的整数，其中保证至少存在一个“250”。</p><h3 id="输出格式-16">输出格式：</h3><p>在一行中输出第一次出现的“250”是对方扔过来的第几个数字（计数从1开始）。题目保证输出的数字在整型范围内。</p><h3 id="输入样例-10">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">888 666 123 -233 250 13 250 -222</span><br></pre></td></tr></table></figure><h3 id="输出样例-10">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> i,j,a[<span class="number">10000</span>];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">if</span> (a[i]==<span class="number">250</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="降价提醒机器人">降价提醒机器人</h2><p>小 T想买一个玩具很久了，但价格有些高，他打算等便宜些再买。但天天盯着购物网站很麻烦，请你帮小T写一个降价提醒机器人，当玩具的当前价格比他设定的价格便宜时发出提醒。</p><h3 id="输入格式-17">输入格式：</h3><p>输入第一行是两个正整数 N 和 M (1≤N≤100,0≤M≤1000)，表示有 N条价格记录，小 T 设置的价格为 M。</p><p>接下来 N 行，每行有一个实数Pi​（−1000.0&lt;Pi​&lt;1000.0），表示一条价格记录。</p><h3 id="输出格式-17">输出格式：</h3><p>对每一条比设定价格 M 便宜的价格记录 <code>P</code>，在一行中输出<code>On Sale! P</code>，其中 <code>P</code> 输出到小数点后 1 位。</p><h3 id="输入样例-11">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 99</span><br><span class="line">98.0</span><br><span class="line">97.0</span><br><span class="line">100.2</span><br><span class="line">98.9</span><br></pre></td></tr></table></figure><h3 id="输出样例-11">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">On Sale! 98.0</span><br><span class="line">On Sale! 97.0</span><br><span class="line">On Sale! 98.9</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> n,m,i;</span><br><span class="line"><span class="type">double</span> a[<span class="number">10000</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;a[i]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;m)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;On Sale! %.1lf\n&quot;</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="求特殊方程的正整数解">求特殊方程的正整数解</h2><p>本题要求对任意给定的正整数N，求方程X2+Y2=N的全部正整数解。</p><h3 id="输入格式-18">输入格式：</h3><p>输入在一行中给出正整数N（≤10000）。</p><h3 id="输出格式-18">输出格式：</h3><p>输出方程X2+Y2=N的全部正整数解，其中X≤Y。每组解占1行，两数字间以1空格分隔，按X的递增顺序输出。如果没有解，则输出<code>No Solution</code>。</p><h3 id="输入样例1-3">输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">884</span><br></pre></td></tr></table></figure><h3 id="输出样例1-3">输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10 28</span><br><span class="line">20 22</span><br></pre></td></tr></table></figure><h3 id="输入样例2-3">输入样例2：</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure><h3 id="输出样例2-3">输出样例2：</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">No Solution</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> flag= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> x=<span class="number">1</span>;x&lt;=<span class="built_in">sqrt</span>(n);x++) &#123;</span><br><span class="line">        <span class="type">int</span> y = (<span class="type">int</span>)<span class="built_in">sqrt</span>(n-x*x);</span><br><span class="line">        <span class="keyword">if</span> (x*x+y*y==n&amp;&amp;x&lt;=y) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,x,y);</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No Solution\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="计算阶乘和">计算阶乘和</h2><p>对于给定的正整数N，需要你计算 S=1!+2!+3!+...+N!。</p><h3 id="输入格式-19">输入格式：</h3><p>输入在一行中给出一个不超过10的正整数N。</p><h3 id="输出格式-19">输出格式：</h3><p>在一行中输出S的值。</p><h3 id="输入样例-12">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="输出样例-12">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">jc</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> result = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">result*=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> num,i,sum=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;num+<span class="number">1</span>;i++)&#123;</span><br><span class="line">sum+=jc(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="section-4">2024-5</h1><h2 id="大笨钟的心情">大笨钟的心情</h2><figure><imgsrc="https://images.ptausercontent.com/8c3b8713-1703-4e56-addb-492f738c3a7c.jpg"alt="心情.jpg" /><figcaption aria-hidden="true">心情.jpg</figcaption></figure><p>有网友问：未来还会有更多大笨钟题吗？笨钟回复说：看心情……</p><p>本题就请你替大笨钟写一个程序，根据心情自动输出回答。</p><h3 id="输入格式-20">输入格式：</h3><p>输入在一行中给出 24 个 [0, 100] 区间内的整数，依次代表大笨钟在一天 24小时中，每个小时的心情指数。</p><p>随后若干行，每行给出一个 [0, 23]之间的整数，代表网友询问笨钟这个问题的时间点。当出现非法的时间点时，表示输入结束，这个非法输入不要处理。题目保证至少有1 次询问。</p><h3 id="输出格式-20">输出格式：</h3><p>对每一次提问，如果当时笨钟的心情指数大于 50，就在一行中输出<code>心情指数 Yes</code>，否则输出 <code>心情指数 No</code>。</p><h3 id="输入样例-13">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">80 75 60 50 20 20 20 20 55 62 66 51 42 33 47 58 67 52 41 20 35 49 50 63</span><br><span class="line">17</span><br><span class="line">7</span><br><span class="line">3</span><br><span class="line">15</span><br><span class="line">-1</span><br></pre></td></tr></table></figure><h3 id="输出样例-13">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">52 Yes</span><br><span class="line">20 No</span><br><span class="line">50 No</span><br><span class="line">58 Yes</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> moodIndices[<span class="number">24</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">24</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;moodIndices[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> time;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;time);</span><br><span class="line">        <span class="keyword">if</span> (time &lt; <span class="number">0</span> || time &gt; <span class="number">23</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> moodIndex = moodIndices[time];</span><br><span class="line">        <span class="keyword">if</span> (moodIndex &gt; <span class="number">50</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d Yes\n&quot;</span>, moodIndex);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d No\n&quot;</span>, moodIndex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="求最大值及其下标">求最大值及其下标</h2><p>本题要求编写程序，找出给定的n个数中的最大值及其对应的最小下标（下标从0开始）。</p><h3 id="输入格式-21">输入格式:</h3><p>输入在第一行中给出一个正整数n（1&lt;n≤10）。第二行输入n个整数，用空格分开。</p><h3 id="输出格式-21">输出格式:</h3><p>在一行中输出最大值及最大值的最小下标，中间用一个空格分开。</p><h3 id="输入样例-14">输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">2 8 10 1 9 10</span><br></pre></td></tr></table></figure><h3 id="输出样例-14">输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 2</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="type">int</span> a[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> r=a[<span class="number">0</span>],index=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;r)&#123;</span><br><span class="line">r=a[i];</span><br><span class="line">index=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>,r,index);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="统计分数段人数">统计分数段人数</h2><p>请对某次考试的分数，统计各分数段人数,统计原则:分别对10分以下、10-19分、20-29分、30-39分、40-49分、50-59分、60-69分、70-79,80-89分,90到99分，100分为一段,共11段。<br />注意：如果输入分数不在[0,100]之间，不参与统计。</p><h3 id="输入格式-22">输入格式:</h3><p>先输入一个整数n,表示将输入n个分数。<br />再输入n个分数,范围在[0~100].<br />每个数用空格间隔。</p><h3 id="输出格式-22">输出格式:</h3><p>每一行输出一个分数段的人数统计结果。分数段用0~10表示。</p><h3 id="输入样例-15">输入样例:</h3><p>在这里给出一组输入。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">50 60 98 100 0 1000</span><br></pre></td></tr></table></figure><h3 id="输出样例-15">输出样例:</h3><p>在这里给出相应的输出。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0: 1</span><br><span class="line">1: 0</span><br><span class="line">2: 0</span><br><span class="line">3: 0</span><br><span class="line">4: 0</span><br><span class="line">5: 1</span><br><span class="line">6: 1</span><br><span class="line">7: 0</span><br><span class="line">8: 0</span><br><span class="line">9: 1</span><br><span class="line">10: 1</span><br></pre></td></tr></table></figure><p>我的版本（比较繁琐） <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="type">int</span> a[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> b0=<span class="number">0</span>,b1=<span class="number">0</span>,b2=<span class="number">0</span>,b3=<span class="number">0</span>,b4=<span class="number">0</span>,b5=<span class="number">0</span>,b6=<span class="number">0</span>,b7=<span class="number">0</span>,b8=<span class="number">0</span>,b9=<span class="number">0</span>,b10=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">switch</span> ((<span class="type">int</span>)(a[i]/<span class="number">10</span>))&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:b0++;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:b1++;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:b2++;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:b3++;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:b4++;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:b5++;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:b6++;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:b7++;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:b8++;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:b9++;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:b10++;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0: %d\n1: %d\n2: %d\n3: %d\n4: %d\n5: %d\n6: %d\n7: %d\n8: %d\n9: %d\n10: %d&quot;</span>,b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2id="c程序设计教程与实训-数组-查找k出现次数">C程序设计教程与实训-数组-查找k出现次数</h2><p>从键盘输入10个整数，将其存入数组中，输入一个整数k，在数组中查找k出现的次数。</p><h3 id="输入格式-23">输入格式:</h3><p>在第一行输入10个整数（在int类型的范围内），在第二行输入要查找的整数k。</p><h3 id="输出格式-23">输出格式:</h3><p>k出现的次数。如果未出现，输出0。</p><h3 id="输入样例-16">输入样例:</h3><p>在这里给出一组输入。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">12 13 45 13 45 34 67 12 12 78</span><br><span class="line">12</span><br></pre></td></tr></table></figure><h3 id="输出样例-16">输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> k,count=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==k)&#123;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="求矩阵的局部极大值">求矩阵的局部极大值</h2><p>给定M行N列的整数矩阵A，如果A的非边界元素A[i][j]大于相邻的上下左右4个元素，那么就称元素A[i][j]是矩阵的局部极大值。本题要求给定矩阵的全部局部极大值及其所在的位置。</p><h3 id="输入格式-24">输入格式：</h3><p>输入在第一行中给出矩阵A的行数M和列数N（3≤M,N≤20）；最后M行，每行给出A在该行的N个元素的值。数字间以空格分隔。</p><h3 id="输出格式-24">输出格式：</h3><p>每行按照“元素值 行号列号”的格式输出一个局部极大值，其中行、列编号从1开始。要求按照行号递增输出；若同行有超过1个局部极大值，则该行按列号递增输出。若没有局部极大值，则输出“None总行数 总列数”。</p><h3 id="输入样例1-4">输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 5</span><br><span class="line">1 1 1 1 1</span><br><span class="line">1 3 9 3 1</span><br><span class="line">1 5 3 5 1</span><br><span class="line">1 1 1 1 1</span><br></pre></td></tr></table></figure><h3 id="输出样例1-4">输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">9 2 3</span><br><span class="line">5 3 2</span><br><span class="line">5 3 4</span><br></pre></td></tr></table></figure><h3 id="输入样例2-4">输入样例2：</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">9 </span><span class="number">3</span> <span class="number">9</span> <span class="number">9</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">5</span> <span class="number">3</span> <span class="number">5</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="输出样例2-4">输出样例2：</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">None</span> <span class="number">3</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> m=<span class="number">0</span>,n=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;m,&amp;n);</span><br><span class="line"><span class="type">int</span> a[m][n];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;m<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;n<span class="number">-1</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i][j]&gt;a[i<span class="number">-1</span>][j]&amp;&amp;a[i][j]&gt;a[i+<span class="number">1</span>][j]&amp;&amp;a[i][j]&gt;a[i][j<span class="number">-1</span>]&amp;&amp;a[i][j]&gt;a[i][j+<span class="number">1</span>])&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, a[i][j], i + <span class="number">1</span>, j + <span class="number">1</span>);</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;None %d %d&quot;</span>,m,n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="打印杨辉三角">打印杨辉三角</h2><p>本题要求按照规定格式打印前N行杨辉三角。</p><h3 id="输入格式-25">输入格式：</h3><p>输入在一行中给出N（1≤N≤10）。</p><h3 id="输出格式-25">输出格式：</h3><p>以正三角形的格式输出前N行杨辉三角。每个数字占固定4位。</p><h3 id="输入样例-17">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h3 id="输出样例-17">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">     1</span><br><span class="line">    1   1</span><br><span class="line">   1   2   1</span><br><span class="line">  1   3   3   1</span><br><span class="line"> 1   4   6   4   1</span><br><span class="line">1   5  10  10   5   1</span><br></pre></td></tr></table></figure><p>目前我的版本存在格式问题 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure> 张跃哲同学的版本<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line">  </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;  </span><br><span class="line">    <span class="type">int</span> N;  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);  </span><br><span class="line">    <span class="type">int</span> triangle[N][N];  </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= i; j++) &#123;  </span><br><span class="line">            <span class="keyword">if</span> (j == <span class="number">0</span> || j == i) &#123;  </span><br><span class="line">                triangle[i][j] = <span class="number">1</span>;  </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                triangle[i][j] = triangle[i<span class="number">-1</span>][j<span class="number">-1</span>] + triangle[i<span class="number">-1</span>][j];  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 打印杨辉三角  </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; (N - i - <span class="number">1</span>); j++) &#123;  </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="comment">// 打印每一行的数字  </span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= i; j++) &#123;  </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>, triangle[i][j]); <span class="comment">// 每个数字占4个字符宽度  </span></span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="section-5">2024-6</h1><h2id="使用函数输出一个整数的逆序数函数题">使用函数输出一个整数的逆序数（函数题）</h2><p>本题要求实现一个求整数的逆序数的简单函数。</p><h3 id="函数接口定义">函数接口定义：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">reverse</span><span class="params">( <span class="type">int</span> number )</span></span>;</span><br></pre></td></tr></table></figure><p>其中函数<code>reverse</code>须返回用户传入的整型<code>number</code>的逆序数。</p><h3 id="裁判测试程序样例">裁判测试程序样例：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">reverse</span><span class="params">( <span class="type">int</span> number )</span></span>;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">reverse</span>(n));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例-18">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-12340</span><br></pre></td></tr></table></figure><h3 id="输出样例-18">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-4321</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">reverse</span><span class="params">( <span class="type">int</span> num)</span>&#123;</span><br><span class="line"><span class="type">int</span> r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (num!= <span class="number">0</span>) &#123;</span><br><span class="line">        r=r*<span class="number">10</span>+num%<span class="number">10</span>;</span><br><span class="line">        num/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用函数求最大公约数函数题">使用函数求最大公约数（函数题）</h2><p>本题要求实现一个计算两个数的最大公约数的简单函数。</p><h3 id="函数接口定义-1">函数接口定义：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">( <span class="type">int</span> x, <span class="type">int</span> y )</span></span>;</span><br></pre></td></tr></table></figure><p>其中<code>x</code>和<code>y</code>是两个正整数，函数<code>gcd</code>应返回这两个数的最大公约数。</p><h3 id="裁判测试程序样例-1">裁判测试程序样例：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">( <span class="type">int</span> x, <span class="type">int</span> y )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x, y;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">gcd</span>(x, y));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例-19">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">32 72</span><br></pre></td></tr></table></figure><h3 id="输出样例-19">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">gcd</span><span class="params">( <span class="type">int</span> x, <span class="type">int</span> y )</span>&#123;</span><br><span class="line"><span class="keyword">while</span> (y!= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> temp=y;</span><br><span class="line">        y=x%y;</span><br><span class="line">        x=temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用函数的选择法排序函数题">使用函数的选择法排序（函数题）</h2><p>本题要求实现一个用选择法对整数数组进行简单排序的函数。</p><h3 id="函数接口定义-2">函数接口定义：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">( <span class="type">int</span> a[], <span class="type">int</span> n )</span></span>;</span><br></pre></td></tr></table></figure><p>其中<code>a</code>是待排序的数组，<code>n</code>是数组<code>a</code>中元素的个数。该函数用选择法将数组<code>a</code>中的元素按升序排列，结果仍然在数组<code>a</code>中。</p><h3 id="裁判测试程序样例-2">裁判测试程序样例：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 10</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">( <span class="type">int</span> a[], <span class="type">int</span> n )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i, n;</span><br><span class="line">    <span class="type">int</span> a[MAXN];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>( i=<span class="number">0</span>; i&lt;n; i++ )</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(a, n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;After sorted the array is:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; n; i++ )</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, a[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例-20">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">5 1 7 6</span><br></pre></td></tr></table></figure><h3 id="输出样例-20">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">After sorted the array is: 1 5 6 7</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">( <span class="type">int</span> a[], <span class="type">int</span> n )</span>&#123;</span><br><span class="line"><span class="type">int</span> i, j, min_idx;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        min_idx = i;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">            <span class="keyword">if</span> (a[j] &lt; a[min_idx])</span><br><span class="line">                min_idx = j;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (min_idx!= i) &#123;</span><br><span class="line">            <span class="type">int</span> temp = a[i];</span><br><span class="line">            a[i] = a[min_idx];</span><br><span class="line">            a[min_idx] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="求排列数函数题">求排列数（函数题）</h2><p>本题要求实现一个计算阶乘的简单函数，使得可以利用该函数，根据公式Pnm​=(n−m)!n!​算出从n个不同元素中取出m个元素（0&lt;m≤n）的排列数。</p><h3 id="函数接口定义-3">函数接口定义：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">double</span> <span class="title">fact</span><span class="params">( <span class="type">int</span> n )</span></span>;</span><br></pre></td></tr></table></figure><p>其中n是用户传入的参数，函数返回n的阶乘。</p><h3 id="裁判测试程序样例-3">裁判测试程序样例：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">fact</span><span class="params">( <span class="type">int</span> n )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    <span class="type">int</span> m, n;</span><br><span class="line">    <span class="type">double</span> result; </span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    <span class="keyword">if</span>(m &gt; <span class="number">0</span> &amp;&amp; n &gt; <span class="number">0</span> &amp;&amp; m &lt;= n)&#123;</span><br><span class="line">        result = <span class="built_in">fact</span>(n)/<span class="built_in">fact</span>(n-m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;result = %.0f\n&quot;</span>, result);    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 请在这里填写答案 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例-21">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 14</span><br></pre></td></tr></table></figure><h3 id="输出样例-21">输出样例：</h3><p>在这里给出相应的输出。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = 182</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">fact</span><span class="params">( <span class="type">int</span> n )</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> result = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">result*=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="section-6">2024-7</h1><h2 id="一元二次方程求根程序填空题">一元二次方程求根（程序填空题）</h2><p>输入三个整数a，b，c（a不为0），输出一元二次方程ax^2+bx+c=0的根。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">root</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c,<span class="type">double</span> *p1,<span class="type">double</span> *p2)</span> &#123;  </span><br><span class="line">    <span class="type">int</span> d=b*b<span class="number">-4</span>*a*c;</span><br><span class="line">    <span class="keyword">if</span>(d&gt;=<span class="number">0</span>)&#123;       </span><br><span class="line">        </span><br><span class="line">*p1=(-b+<span class="built_in">sqrt</span>(d))/(<span class="number">2</span>*a);            </span><br><span class="line">        </span><br><span class="line">*p2=(-b-<span class="built_in">sqrt</span>(d))/(<span class="number">2</span>*a);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;                     </span><br><span class="line">&#125; </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;  </span><br><span class="line">    <span class="type">double</span>  x1,x2; </span><br><span class="line">    <span class="type">int</span> a,b,c;   </span><br><span class="line">    <span class="type">int</span> flag;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a,&amp;b,&amp;c);</span><br><span class="line">    flag=root(a,b,c,&amp;x1,&amp;x2);</span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2f %.2f\n&quot;</span>,x1,x2); </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><h2 id="查找最高分程序填空题">查找最高分（程序填空题）</h2><p>输入10个成绩，查找最高分并输出。 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> *<span class="title function_">GetMax</span><span class="params">(<span class="type">int</span> score[ ], <span class="type">int</span> n)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, score[<span class="number">10</span>], *p;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;score[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    p = GetMax(score, <span class="number">10</span>);</span><br><span class="line"> ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *p);</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> *<span class="title function_">GetMax</span><span class="params">(<span class="type">int</span> score[ ], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, max, pos = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">    max = score[<span class="number">0</span>] ;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span> ; i &lt; <span class="number">10</span> ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(score[i] &gt; max)&#123;</span><br><span class="line">            max = score[i];</span><br><span class="line">            pos = i ; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> &amp;score[pos];</span><br><span class="line"> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2id="求二维数组中偶数元素之和程序填空题">求二维数组中偶数元素之和（程序填空题）</h2><p>下面这段程序是计算并打印一个二维数组（数组的数组）中值为偶数的元素之和。题目保证输入的元素均为绝对值不超过10000的整数。请填写空缺的代码。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">sumEven</span><span class="params">(<span class="type">int</span> (*<span class="built_in">array</span>)[<span class="number">5</span>], <span class="type">int</span> row)</span> &#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; row; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">            <span class="keyword">if</span> ((*<span class="built_in">array</span>)[i * <span class="number">5</span> + j] % <span class="number">2</span> == <span class="number">0</span>) sum += (*<span class="built_in">array</span>)[i * <span class="number">5</span> + j];</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[<span class="number">4</span>][<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;<span class="built_in">array</span>[i][j]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sumEven(<span class="built_in">array</span>, <span class="number">4</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="计算两数的和与差函数题">计算两数的和与差（函数题）</h2><p>本题要求实现一个计算输入的两数的和与差的简单函数。</p><h3 id="函数接口定义-4">函数接口定义：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">sum_diff</span><span class="params">( <span class="type">float</span> op1, <span class="type">float</span> op2, <span class="type">float</span> *psum, <span class="type">float</span> *pdiff )</span></span>;</span><br></pre></td></tr></table></figure><p>其中<code>op1</code>和<code>op2</code>是输入的两个实数，<code>*psum</code>和<code>*pdiff</code>是计算得出的和与差。</p><h3 id="裁判测试程序样例-4">裁判测试程序样例：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sum_diff</span><span class="params">( <span class="type">float</span> op1, <span class="type">float</span> op2, <span class="type">float</span> *psum, <span class="type">float</span> *pdiff )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">float</span> a, b, sum, diff;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f %f&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">sum_diff</span>(a, b, &amp;sum, &amp;diff);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The sum is %.2f\nThe diff is %.2f\n&quot;</span>, sum, diff);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例-22">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 6</span><br></pre></td></tr></table></figure><h3 id="输出样例-22">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The sum is 10.00</span><br><span class="line">The diff is -2.00</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">sum_diff</span><span class="params">( <span class="type">float</span> op1, <span class="type">float</span> op2, <span class="type">float</span> *psum, <span class="type">float</span> *pdiff )</span>&#123;</span><br><span class="line">*psum=op1+op2;</span><br><span class="line">*pdiff=op1-op2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2id="拆分实数的整数与小数部分函数题">拆分实数的整数与小数部分（函数题）</h2><p>本题要求实现一个拆分实数的整数与小数部分的简单函数。</p><h3 id="函数接口定义-5">函数接口定义：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">splitfloat</span><span class="params">( <span class="type">float</span> x, <span class="type">int</span> *intpart, <span class="type">float</span> *fracpart )</span></span>;</span><br></pre></td></tr></table></figure><p>其中<code>x</code>是被拆分的实数（0≤<code>x</code>&lt;10000），<code>*intpart</code>和<code>*fracpart</code>分别是将实数x拆分出来的整数部分与小数部分。</p><h3 id="裁判测试程序样例-5">裁判测试程序样例：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">splitfloat</span><span class="params">( <span class="type">float</span> x, <span class="type">int</span> *intpart, <span class="type">float</span> *fracpart )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">float</span> x, fracpart;</span><br><span class="line">    <span class="type">int</span> intpart;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;x);</span><br><span class="line">    <span class="built_in">splitfloat</span>(x, &amp;intpart, &amp;fracpart);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The integer part is %d\n&quot;</span>, intpart);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The fractional part is %g\n&quot;</span>, fracpart);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例-23">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2.718</span><br></pre></td></tr></table></figure><h3 id="输出样例-23">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The integer part is 2</span><br><span class="line">The fractional part is 0.718</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">splitfloat</span><span class="params">( <span class="type">float</span> x, <span class="type">int</span> *intpart, <span class="type">float</span> *fracpart )</span>&#123;</span><br><span class="line">*intpart=(<span class="type">int</span>)x;</span><br><span class="line">*fracpart=x-*intpart;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2id="使用函数找出数组中的最大值函数题">使用函数找出数组中的最大值（函数题）</h2><p>本题要求实现一个找出整型数组中最大值的函数。</p><h3 id="函数接口定义-6">函数接口定义：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">FindArrayMax</span><span class="params">( <span class="type">int</span> a[], <span class="type">int</span> n )</span></span>;</span><br></pre></td></tr></table></figure><p>其中<code>a</code>是用户传入的数组，<code>n</code>是数组<code>a</code>中元素的个数。函数返回数组<code>a</code>中的最大值。</p><h3 id="裁判测试程序样例-6">裁判测试程序样例：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 10</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">FindArrayMax</span><span class="params">( <span class="type">int</span> a[], <span class="type">int</span> n )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i, n;</span><br><span class="line">    <span class="type">int</span> a[MAXN];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>( i=<span class="number">0</span>; i&lt;n; i++ )&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">FindArrayMax</span>(a, n));</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 请在这里填写答案 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例-24">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">20 78 99 -14</span><br></pre></td></tr></table></figure><h3 id="输出样例-24">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">99</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">FindArrayMax</span><span class="params">( <span class="type">int</span> a[], <span class="type">int</span> n )</span>&#123;</span><br><span class="line"><span class="type">int</span> max=a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;max)&#123;</span><br><span class="line">max=a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态内存中数据排序">动态内存中数据排序</h2><h4 id="任务描述-1">任务描述:</h4><p>读入整数N，再读入N个整数，将这N个整数从小到大排序后输出。（不能定义整型数组，用动态内存技术实现）</p><h4 id="输入样例-25">输入样例:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 5 3 4 2</span><br></pre></td></tr></table></figure><h4 id="输出样例-25">输出样例:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span> *arr, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j, temp;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> *arr = (<span class="type">int</span> *)<span class="built_in">malloc</span>(n * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sort(arr, n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(arr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##动态数组（需要多大内存申请多大内存） #### 任务描述：</p><p>输入整数N，再输入N个整数，将这N个整数倒序输出。（不用定义数组，用动态内存实现）</p><h4 id="输入样例-26">输入样例:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">1 2 3 4 5 6 7 8 9 10</span><br></pre></td></tr></table></figure><h4 id="输出样例-26">输出样例:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 9 8 7 6 5 4 3 2 1</span><br></pre></td></tr></table></figure><h4 id="输入样例-27">输入样例:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">15</span><br><span class="line">708 417 427 843 610 838 932 978 189 981 208 618 178 872 576</span><br></pre></td></tr></table></figure><h4 id="输出样例-27">输出样例:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">576 872 178 618 208 981 189 978 932 838 610 843 427 417 708</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, i, num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> *arr = <span class="literal">NULL</span>;</span><br><span class="line">    arr = (<span class="type">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">        arr = (<span class="type">int</span> *)<span class="built_in">realloc</span>(arr, (i + <span class="number">1</span>) * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">        arr[i] = num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    <span class="keyword">if</span>(i!=n<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(arr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="section-7">2024-8</h1><h2 id="时间计算程序填空题">时间计算（程序填空题）</h2><p>下列程序读入时间数值，将其加1秒后输出，时间格式为：hh: mm:ss，即“小时:分钟:秒”，当小时等于24小时，置为0。 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> hour, minute, second;</span><br><span class="line">&#125; time;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d:%d:%d&quot;</span>, &amp;time.hour, &amp;time.minute, &amp;time.second);</span><br><span class="line">    time.second++;</span><br><span class="line">    <span class="keyword">if</span>(time.second == <span class="number">60</span>)&#123;</span><br><span class="line">        time.second = <span class="number">0</span>;</span><br><span class="line">        time.minute++;</span><br><span class="line">        <span class="keyword">if</span>(time.minute == <span class="number">60</span>)&#123;</span><br><span class="line">            time.minute = <span class="number">0</span>;</span><br><span class="line">            time.hour++;</span><br><span class="line">            <span class="keyword">if</span>(time.hour == <span class="number">24</span>)</span><br><span class="line">                time.hour = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d:%d:%d\n&quot;</span>, time.hour, time.minute, time.second);</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="分段统计学生成绩程序填空题">分段统计学生成绩（程序填空题）</h2><p>输入n个学生的姓名和百分制成绩，分段统计学生的成绩。</p><h3 id="输入格式-26">输入格式：</h3><p>输入在第一行中给出正整数N（1≤n≤100）。随后N行，每行给出一位学生的姓名和成绩，中间以空格分隔。</p><h3 id="输出格式-26">输出格式：</h3><p>在一行中顺序输出成绩为80－100分、60－79分、0－59分的学生人数，中间以空格分隔。</p><h3 id="输入样例-28">输入样例：</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">5</span></span><br><span class="line"><span class="attribute">huanglan</span> <span class="number">83</span></span><br><span class="line"><span class="attribute">wanghai</span> <span class="number">76</span></span><br><span class="line"><span class="attribute">shenqiang</span> <span class="number">50</span></span><br><span class="line"><span class="attribute">zhangfeng</span> <span class="number">95</span></span><br><span class="line"><span class="attribute">zhangmeng</span> <span class="number">60</span></span><br></pre></td></tr></table></figure><h3 id="输出样例-28">输出样例：</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 100</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">cnt_score</span><span class="params">(<span class="keyword">struct</span> student *p, <span class="type">int</span> n)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, n;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu</span>[<span class="title">MAXN</span>];</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s%d&quot;</span>, stu[i].name, &amp;stu[i].score);</span><br><span class="line">    &#125;</span><br><span class="line">    cnt_score(stu, n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">cnt_score</span><span class="params">(<span class="keyword">struct</span> student *p, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> cnt_a = <span class="number">0</span>, cnt_p = <span class="number">0</span>, cnt_f = <span class="number">0</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">q</span> =</span> p + n - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (p &lt;= q) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;score &gt;= <span class="number">80</span> &amp;&amp; p-&gt;score &lt;= <span class="number">100</span>) cnt_a++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p-&gt;score &gt;= <span class="number">60</span> &amp;&amp; p-&gt;score &lt;= <span class="number">79</span>) cnt_p++;</span><br><span class="line">        <span class="keyword">else</span> cnt_f++;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, cnt_a, cnt_p, cnt_f);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="有理数均值">有理数均值</h2><h3 id="输入格式-27">输入格式：</h3><p>输入第一行给出正整数N（≤100）；第二行中按照<code>a1/b1 a2/b2 …</code>的格式给出N个分数形式的有理数，其中分子和分母全是整形范围内的整数；如果是负数，则负号一定出现在最前面。</p><h3 id="输出格式-27">输出格式：</h3><p>在一行中按照<code>a/b</code>的格式输出N个有理数的平均值。注意必须是该有理数的最简分数形式，若分母为1，则只输出分子。</p><h3 id="输入样例1-5">输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1/2 1/6 3/6 -5/10</span><br></pre></td></tr></table></figure><h3 id="输出样例1-5">输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1/6</span><br></pre></td></tr></table></figure><h3 id="输入样例2-5">输入样例2：</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">2</span></span><br><span class="line"><span class="attribute">4</span>/<span class="number">3</span> <span class="number">2</span>/<span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="输出样例2-5">输出样例2：</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="找出总分最高的学生">找出总分最高的学生</h2><p>给定N个学生的基本信息，包括学号（由5个数字组成的字符串）、姓名（长度小于10的不包含空白字符的非空字符串）和3门课程的成绩（[0,100]区间内的整数），要求输出总分最高学生的姓名、学号和总分。</p><h3 id="输入格式-28">输入格式：</h3><p>输入在一行中给出正整数N（≤10）。随后N行，每行给出一位学生的信息，格式为“学号姓名 成绩1 成绩2 成绩3”，中间以空格分隔。</p><h3 id="输出格式-28">输出格式：</h3><p>在一行中输出总分最高学生的姓名、学号和总分，间隔一个空格。题目保证这样的学生是唯一的。</p><h3 id="输入样例-29">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">00001 huanglan 78 83 75</span><br><span class="line">00002 wanghai 76 80 77</span><br><span class="line">00003 shenqiang 87 83 76</span><br><span class="line">10001 zhangfeng 92 88 78</span><br><span class="line">21987 zhangmeng 80 82 75</span><br></pre></td></tr></table></figure><h3 id="输出样例-29">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zhangfeng 10001 258</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> id[<span class="number">6</span>];</span><br><span class="line">    <span class="type">char</span> name[<span class="number">11</span>];</span><br><span class="line">    <span class="type">int</span> score1;</span><br><span class="line">    <span class="type">int</span> score2;</span><br><span class="line">    <span class="type">int</span> score3;</span><br><span class="line">    <span class="type">int</span> totalScore;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">students</span>[<span class="title">n</span>];</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s %s %d %d %d&quot;</span>, students[i].id, students[i].name, &amp;students[i].score1, &amp;students[i].score2, &amp;students[i].score3);</span><br><span class="line">        students[i].totalScore = students[i].score1 + students[i].score2 + students[i].score3;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> maxIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (students[i].totalScore &gt; students[maxIndex].totalScore) &#123;</span><br><span class="line">            maxIndex = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s %s %d\n&quot;</span>, students[maxIndex].name, students[maxIndex].id, students[maxIndex].totalScore);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="通讯录排序">通讯录排序</h2><p>输入n个朋友的信息，包括姓名、生日、电话号码，本题要求编写程序，按照年龄从大到小的顺序依次输出通讯录。题目保证所有人的生日均不相同。</p><h3 id="输入格式-29">输入格式:</h3><p>输入第一行给出正整数n（&lt;10）。随后n行，每行按照“姓名 生日电话号码”的格式给出一位朋友的信息，其中“姓名”是长度不超过10的英文字母组成的字符串，“生日”是<code>yyyymmdd</code>格式的日期，“电话号码”是不超过17位的数字及<code>+</code>、<code>-</code>组成的字符串。</p><h3 id="输出格式-29">输出格式:</h3><p>按照年龄从大到小输出朋友的信息，格式同输出。</p><h3 id="输入样例-30">输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">zhang 19850403 13912345678</span><br><span class="line">wang 19821020 +86-0571-88018448</span><br><span class="line">qian 19840619 13609876543</span><br></pre></td></tr></table></figure><h3 id="输出样例-30">输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wang 19821020 +86-0571-88018448</span><br><span class="line">qian 19840619 13609876543</span><br><span class="line">zhang 19850403 13912345678</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Friend</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">11</span>];</span><br><span class="line">    <span class="type">int</span> birthday;</span><br><span class="line">    <span class="type">char</span> phoneNumber[<span class="number">18</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比较函数，用于按照 yyyymmdd 格式的生日进行从大到小排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* a, <span class="type">const</span> <span class="type">void</span>* b)</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Friend</span>* <span class="title">f1</span> =</span> (<span class="keyword">struct</span> Friend*)a;  <span class="comment">// 将 void 指针转换为 Friend 结构体指针 f1</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Friend</span>* <span class="title">f2</span> =</span> (<span class="keyword">struct</span> Friend*)b;  <span class="comment">// 将 void 指针转换为 Friend 结构体指针 f2</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> year1 = f1-&gt;birthday / <span class="number">10000</span>;  <span class="comment">// 提取 f1 生日中的年份</span></span><br><span class="line">    <span class="type">int</span> month1 = (f1-&gt;birthday % <span class="number">10000</span>) / <span class="number">100</span>;  <span class="comment">// 提取 f1 生日中的月份</span></span><br><span class="line">    <span class="type">int</span> day1 = f1-&gt;birthday % <span class="number">100</span>;  <span class="comment">// 提取 f1 生日中的日期</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> year2 = f2-&gt;birthday / <span class="number">10000</span>;  <span class="comment">// 提取 f2 生日中的年份</span></span><br><span class="line">    <span class="type">int</span> month2 = (f2-&gt;birthday % <span class="number">10000</span>) / <span class="number">100</span>;  <span class="comment">// 提取 f2 生日中的月份</span></span><br><span class="line">    <span class="type">int</span> day2 = f2-&gt;birthday % <span class="number">100</span>;  <span class="comment">// 提取 f2 生日中的日期</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 先比较年份</span></span><br><span class="line">    <span class="keyword">if</span> (year2 &gt; year1) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (year2 &lt; year1) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 年份相同，比较月份</span></span><br><span class="line">        <span class="keyword">if</span> (month2 &gt; month1) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (month2 &lt; month1) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 月份相同，比较日期</span></span><br><span class="line">            <span class="keyword">if</span> (day2 &gt; day1) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (day2 &lt; day1) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">// 日期也相同，返回 0</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);  <span class="comment">// 输入朋友的数量</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Friend</span> <span class="title">friends</span>[<span class="title">n</span>];</span>  <span class="comment">// 创建结构体数组来存储朋友的信息</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;  <span class="comment">// 循环输入每个朋友的信息</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s %d %s&quot;</span>, friends[i].name, &amp;friends[i].birthday, friends[i].phoneNumber);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    qsort(friends, n, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> Friend), compare);  <span class="comment">// 对朋友结构体数组进行排序</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;  <span class="comment">// 循环输出排序后的朋友信息</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s %d %s\n&quot;</span>, friends[i].name, friends[i].birthday, friends[i].phoneNumber);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="一帮一">一帮一</h2><p>“一帮一学习小组”是中小学中常见的学习组织方式，老师把学习成绩靠前的学生跟学习成绩靠后的学生排在一组。本题就请你编写程序帮助老师自动完成这个分配工作，即在得到全班学生的排名后，在当前尚未分组的学生中，将名次最靠前的学生与名次最靠后的<strong>异性</strong>学生分为一组。</p><h3 id="输入格式-30">输入格式：</h3><p>输入第一行给出正偶数<code>N</code>（≤50），即全班学生的人数。此后<code>N</code>行，按照名次从高到低的顺序给出每个学生的性别（0代表女生，1代表男生）和姓名（不超过8个英文字母的非空字符串），其间以1个空格分隔。这里保证本班男女比例是1:1，并且没有并列名次。</p><h3 id="输出格式-30">输出格式：</h3><p>每行输出一组两个学生的姓名，其间以1个空格分隔。名次高的学生在前，名次低的学生在后。小组的输出顺序按照前面学生的名次从高到低排列。</p><h3 id="输入样例-31">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">0 Amy</span><br><span class="line">1 Tom</span><br><span class="line">1 Bill</span><br><span class="line">0 Cindy</span><br><span class="line">0 Maya</span><br><span class="line">1 John</span><br><span class="line">1 Jack</span><br><span class="line">0 Linda</span><br></pre></td></tr></table></figure><h3 id="输出样例-31">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Amy Jack</span><br><span class="line">Tom Linda</span><br><span class="line">Bill Maya</span><br><span class="line">Cindy John</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1 id="section-8">2024-9</h1><h2 id="删除重复字符">删除重复字符</h2><p>本题要求编写程序，将给定字符串去掉重复的字符后，按照字符ASCII码顺序从小到大排序后输出。</p><h3 id="输入格式-31">输入格式：</h3><p>输入是一个以回车结束的非空字符串（少于80个字符）。</p><h3 id="输出格式-31">输出格式：</h3><p>输出去重排序后的结果字符串。</p><h3 id="输入样例-32">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ad2f3adjfeainzzzv</span><br></pre></td></tr></table></figure><h3 id="输出样例-32">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">23adefijnvz</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="输出gplt"> 输出GPLT</h2><p>给定一个长度不超过10000的、仅由英文字母构成的字符串。请将字符重新调整顺序，按<code>GPLTGPLT....</code>这样的顺序输出，并忽略其它字符。当然，四种字符（不区分大小写）的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按<code>GPLT</code>的顺序打印，直到所有字符都被输出。</p><h3 id="输入格式-32">输入格式：</h3><p>输入在一行中给出一个长度不超过10000的、仅由英文字母构成的非空字符串。</p><h3 id="输出格式-32">输出格式：</h3><p>在一行中按题目要求输出排序后的字符串。题目保证输出非空。</p><h3 id="输入样例-33">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pcTclnGloRgLrtLhgljkLhGFauPewSKgt</span><br></pre></td></tr></table></figure><h3 id="输出样例-33">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GPLTGPLTGLTGLGLL</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">10005</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> count_g = <span class="number">0</span>, count_p = <span class="number">0</span>, count_l = <span class="number">0</span>, <span class="type">count_t</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(str); i++) &#123;</span><br><span class="line">        <span class="type">char</span> c = <span class="built_in">tolower</span>(str[i]);</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;g&#x27;</span>) count_g++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;p&#x27;</span>) count_p++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;l&#x27;</span>) count_l++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;t&#x27;</span>) <span class="type">count_t</span>++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (count_g &gt; <span class="number">0</span> || count_p &gt; <span class="number">0</span> || count_l &gt; <span class="number">0</span> || <span class="type">count_t</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (count_g &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            str[index++] = <span class="string">&#x27;G&#x27;</span>;</span><br><span class="line">            count_g--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count_p &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            str[index++] = <span class="string">&#x27;P&#x27;</span>;</span><br><span class="line">            count_p--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count_l &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            str[index++] = <span class="string">&#x27;L&#x27;</span>;</span><br><span class="line">            count_l--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="type">count_t</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            str[index++] = <span class="string">&#x27;T&#x27;</span>;</span><br><span class="line">            <span class="type">count_t</span>--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    str[index] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, str);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="a-b">A-B</h2><p>本题要求你计算A−B。不过麻烦的是，A和B都是字符串 ——即从字符串A中把字符串B所包含的字符全删掉，剩下的字符组成的就是字符串A−B。</p><h3 id="输入格式-33">输入格式：</h3><p>输入在2行中先后给出字符串A和B。两字符串的长度都不超过104，并且保证每个字符串都是由可见的ASCII码和空白字符组成，最后以换行符结束。</p><h3 id="输出格式-33">输出格式：</h3><p>在一行中打印出A−B的结果字符串。</p><h3 id="输入样例-34">输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">I love GPLT!  It&#x27;s a fun game!</span><br><span class="line">aeiou</span><br></pre></td></tr></table></figure><h3 id="输出样例-34">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I lv GPLT!  It&#x27;s  fn gm!</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">## 检查密码</span><br><span class="line"></span><br><span class="line">本题要求你帮助某网站的用户注册模块写一个密码合法性检查的小功能。该网站要求用户设置的密码必须由不少于<span class="number">6</span>个字符组成，并且只能有英文字母、数字和小数点 `.`，还必须既有字母也有数字。</span><br><span class="line"></span><br><span class="line">### 输入格式：</span><br><span class="line"></span><br><span class="line">输入第一行给出一个正整数 N（≤ <span class="number">100</span>），随后 N 行，每行给出一个用户设置的密码，为不超过 <span class="number">80</span> 个字符的非空字符串，以回车结束。</span><br><span class="line"></span><br><span class="line">**注意：** 题目保证不存在只有小数点的输入。</span><br><span class="line"></span><br><span class="line">### 输出格式：</span><br><span class="line"></span><br><span class="line">对每个用户的密码，在一行中输出系统反馈信息，分以下<span class="number">5</span>种：</span><br><span class="line"></span><br><span class="line">- 如果密码合法，输出`Your password is wan mei.`；</span><br><span class="line">- 如果密码太短，不论合法与否，都输出`Your password is tai duan le.`；</span><br><span class="line">- 如果密码长度合法，但存在不合法字符，则输出`Your password is tai luan le.`；</span><br><span class="line">- 如果密码长度合法，但只有字母没有数字，则输出`Your password needs shu zi.`；</span><br><span class="line">- 如果密码长度合法，但只有数字没有字母，则输出`Your password needs zi mu.`。</span><br><span class="line"></span><br><span class="line">### 输入样例：</span><br><span class="line"></span><br><span class="line">```in</span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">123</span>s</span><br><span class="line">zheshi.wodepw</span><br><span class="line"><span class="number">1234.5678</span></span><br><span class="line">WanMei23333</span><br><span class="line">pass*word<span class="number">.6</span></span><br></pre></td></tr></table></figure><h3 id="输出样例-35">输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Your password is tai duan le.</span><br><span class="line">Your password needs shu zi.</span><br><span class="line">Your password needs zi mu.</span><br><span class="line">Your password is wan mei.</span><br><span class="line">Your password is tai luan le.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c语言 </tag>
            
            <tag> 杭电 </tag>
            
            <tag> PTA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24级杭电《C语言程序设计》先修课-mooc作业</title>
      <link href="/2024/08/24/24%E7%BA%A7%E6%9D%AD%E7%94%B5%E3%80%8AC%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E3%80%8B%E5%85%88%E4%BF%AE%E8%AF%BE-mooc%E4%BD%9C%E4%B8%9A/"/>
      <url>/2024/08/24/24%E7%BA%A7%E6%9D%AD%E7%94%B5%E3%80%8AC%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E3%80%8B%E5%85%88%E4%BF%AE%E8%AF%BE-mooc%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="序言">序言</h1><p>这是笔者的c语言学习记录 内容覆盖c语言入门的基础知识已完结，后续会补充代码的注释</p><p><strong>声明</strong></p><p>本文章内容请未完成的同学谨慎查看。以下代码的发布时间均在考试截止时间之后，未构成作弊。 <span id="more"></span></p><h1 id="第一章-c语言概述">第一章 C语言概述</h1><h2 id="welcome-to-hdu">“Welcome to HDU!”</h2><p><strong>题目要求：</strong><br />本题要求编写程序，输出一个短句 “Welcome to HDU!”。</p><p><strong>输入格式:</strong> 本题目没有输入。</p><p><strong>输出格式：</strong><br />在一行中输出短句 “Welcome to HDU!”（引号无需输出） <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Welcome to HDU!&quot;</span>);  </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="加法运算">加法运算</h2><p><strong>题目内容：</strong><br />输入两个整数，计算、输出两数之和</p><p><strong>输入格式:</strong><br />输入一行，包含用空格分隔的两个整数（32 位 int 整数）</p><p><strong>输出格式：</strong><br />输出一个整数，表示两数之和（32 位 int 整数） <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;  </span><br><span class="line">    <span class="type">int</span> a, b;   </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a + b);  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="标准体重">标准体重</h2><p><strong>题目内容：</strong><br />据说一个人的标准体重应该是其身高（单位：厘米）减去 100、再乘以 0.9所得到的公斤数。现给定某人身高，请你计算其标准体重应该是多少？</p><p><strong>输入格式:</strong><br />输入第一行给出一个正整数 H（100 &lt; H ≤ 300），为某人身高。</p><p><strong>输出格式:</strong><br />在一行中输出对应的标准体重，单位为公斤，保留小数点后 1 位。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;  </span><br><span class="line">    <span class="type">int</span> height; <span class="comment">// 定义一个整型变量，用于存储身高  </span></span><br><span class="line">    <span class="type">float</span> standard_weight; <span class="comment">// 定义一个浮点型变量，用于存储标准体重  </span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 读取身高值  </span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;height);  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 计算标准体重  </span></span><br><span class="line">    standard_weight = (height - <span class="number">100</span>) * <span class="number">0.9</span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 输出标准体重，保留小数点后一位  </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.1f\n&quot;</span>, standard_weight);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 返回 0 表示程序成功执行  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="第二章-基本数据类型和输入输出">第二章基本数据类型和输入输出</h1><h2 id="面积公式">面积公式</h2><p><strong>题目内容:</strong><br />请编写程序，输入三角形的底 和高，计算并输出三角形的面积。</p><p><strong>输入格式</strong><br />一行包含两个正实数，空格分隔，表示底和高</p><p><strong>输出格式</strong><br />一个实数，2 位小数</p><p><strong>输入样例</strong><br />1.5 2.4</p><p><strong>输出样例:</strong><br />1.80 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;  </span><br><span class="line">    <span class="type">double</span> base, height;  </span><br><span class="line">    <span class="comment">// 读取底边和高度  </span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>, &amp;base, &amp;height);  </span><br><span class="line">    <span class="comment">// 计算三角形的面积  </span></span><br><span class="line">    <span class="type">double</span> area = (base * height) / <span class="number">2</span>;  </span><br><span class="line">    <span class="comment">// 输出面积，保留两位小数  </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, area);  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="加减乘除">加减乘除</h2><p><strong>题目内容:</strong><br />本题要求编写程序，计算并输出 2个正整数的和、差、积。题目保证输入和输出全部在整型范围内。输入格式:<br />输入在一行中给出 2 个正整数 A 和 B。</p><p><strong>输出格式:</strong><br />分行按照格式 “A 运算符 B = 结果” 顺序输出和、差、积。</p><p><strong>输入样例:</strong><br />7 8</p><p><strong>输出样例:</strong><br />7+8=15<br />7-8=-1<br />7*8=56 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;  </span><br><span class="line">    <span class="type">int</span> a, b;  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d+%d=%d\n&quot;</span>, a, b, a + b);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d-%d=%d\n&quot;</span>, a, b, a - b);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%d\n&quot;</span>, a, b, a * b);  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="欠债还钱">欠债还钱</h2><p><strong>题目内容：</strong><br />阿福打算向朋友借钱，请输入一个浮点数 m 和一个整数n，分别表示他想借的钱数和借期，程序输出他的意图。</p><p><strong>输入格式:</strong><br />输入在一行中给出 1 个浮点数和 1 个整数，二者均大于 0。</p><p><strong>输出格式:</strong><br />输出的钱数保留两位小数，格式如下所示：<br />你好，可以借我 XX.XX 元钱吗？<br />X 天后一定还！</p><p><strong>输入样例:</strong><br />166.66 7</p><p><strong>输出样例:</strong> 你好，可以借我 166.66 元钱吗？<br />7 天后一定还！ <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;  </span><br><span class="line"><span class="type">double</span> m;  </span><br><span class="line"><span class="type">int</span> n;  </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf%d&quot;</span>,&amp;m,&amp;n);  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;你好，可以借我%.2lf元钱吗？\n&quot;</span>,m);  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d天后一定还！&quot;</span>,n);  </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="第三章-运算符和表达式">第三章 运算符和表达式</h1><h2 id="判断闰年">判断闰年</h2><p><strong>题目内容:</strong><br />输入年份判断该年份是否是闰年。闰年的判定条件是能被 400 整除或能被 4整除但不能被 100 整除的年份</p><p><strong>输入格式:</strong><br />输入年份，判断其是否闰年。</p><p><strong>输出格式:</strong><br />YES 或 NO</p><p><strong>输入样例:</strong><br />2000</p><p><strong>输出样例:</strong><br />YES <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;  </span><br><span class="line">    <span class="type">int</span> year;  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;year);  </span><br><span class="line">    <span class="keyword">if</span> ((year % <span class="number">400</span> == <span class="number">0</span>) || (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>)) &#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);  </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="移花接木">移花接木</h2><p><strong>题目内容:</strong><br />输入两个浮点数，将第二个数的小数部分拼接到第一个数的整数部分将第一个数的小数部分拼接到第二个数的整数部分。然后输出新生成的浮点数。</p><p><strong>输入格式:</strong><br />输入两个浮点数。(注意可能有负数)</p><p><strong>输出格式:</strong><br />输出新生成的两个浮点数。(输出保留 6 位小数)</p><p><strong>输入样例 1:</strong><br />135.79 24.068</p><p><strong>输出样例 1:</strong><br />135.068000 24.790000</p><p><strong>输入样例 2:</strong><br />-1.23 4.56</p><p><strong>输出样例 2:</strong><br />-1.560000 4.230000</p><h3 id="我的版本">我的版本</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span>  </span></span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="type">double</span> n1,n2,i1,i2,f1,f2,r1,r2;  </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>,&amp;n1,&amp;n2);  </span><br><span class="line">i1=(<span class="type">int</span>)n1;  </span><br><span class="line">i2=(<span class="type">int</span>)n2;  </span><br><span class="line">f1 = (n2 &lt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>) * (<span class="built_in">fabs</span>(n1) - (<span class="type">int</span>)<span class="built_in">fabs</span>(n1));  </span><br><span class="line">f2 = (n1 &lt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>) * (<span class="built_in">fabs</span>(n2) - (<span class="type">int</span>)<span class="built_in">fabs</span>(n2));  </span><br><span class="line">r1=i1+f2;  </span><br><span class="line">r2=i2+f1;  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lf %lf&quot;</span>,r1,r2);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="张跃哲同学的版本">张跃哲同学的版本</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span>  </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;  </span><br><span class="line"><span class="type">double</span> n1, n2;  <span class="comment">//原数  </span></span><br><span class="line"><span class="type">int</span> i1 , i2;    <span class="comment">//取整数  </span></span><br><span class="line"><span class="type">double</span> f1, f2;  <span class="comment">//取小数  </span></span><br><span class="line">scanf_s(<span class="string">&quot;%lf%lf&quot;</span>, &amp;n1, &amp;n2);  </span><br><span class="line">i1 = (<span class="type">int</span>)n1;<span class="comment">//注意，强制转换成int，向零取整  </span></span><br><span class="line">i2 = (<span class="type">int</span>)n2;  </span><br><span class="line">f1 = n1 - i1;<span class="comment">//正数情况即直接就是小数  </span></span><br><span class="line">f2 = n2 - i2;<span class="comment">//负数情况即为带符号的小数 即-1.23转化为0.23  </span></span><br><span class="line"><span class="comment">//注意第一个数加上第二个数的小数部分，小数部分看第一个数的符号  </span></span><br><span class="line">n1 = i1+((n1 == <span class="built_in">fabs</span>(n1)) * <span class="number">2</span> - <span class="number">1</span>) * <span class="built_in">fabs</span>(f2);  </span><br><span class="line">n2 = i2 + ((n2 == <span class="built_in">fabs</span>(n2)) * <span class="number">2</span> - <span class="number">1</span>) * <span class="built_in">fabs</span>(f1);  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lf %lf\n&quot;</span>, n1, n2);  </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="陈怀宇同学的版本">陈怀宇同学的版本</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line">  </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;  </span><br><span class="line">    <span class="type">double</span> a,b;  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>, &amp;a, &amp;b);  </span><br><span class="line">    <span class="keyword">if</span> (a*b &gt;= <span class="number">0</span>)&#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.6lf %.6lf&quot;</span>, (<span class="type">int</span>)a+b-(<span class="type">int</span>)b, (<span class="type">int</span>)b+a-(<span class="type">int</span>)a);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">else</span> &#123;  </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.6lf %.6lf&quot;</span>, (<span class="type">int</span>) a - b + (<span class="type">int</span>) b, (<span class="type">int</span>) b - a + (<span class="type">int</span>) a);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="陈冠亨同学的版本">陈冠亨同学的版本</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span>  </span></span><br><span class="line">  </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_LENGTH 100  </span></span><br><span class="line">  </span><br><span class="line"><span class="type">void</span> <span class="title function_">swap_integer_and_decimal</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *num1, <span class="type">const</span> <span class="type">char</span> *num2, <span class="type">char</span> *result)</span> &#123;  </span><br><span class="line">    <span class="type">char</span> int_part1[MAX_LENGTH], decimal_part1[MAX_LENGTH];  </span><br><span class="line">    <span class="type">char</span> int_part2[MAX_LENGTH], decimal_part2[MAX_LENGTH];  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 找到第一个数字的小数点  </span></span><br><span class="line">    <span class="type">char</span> *decimal1 = <span class="built_in">strchr</span>(num1, <span class="string">&#x27;.&#x27;</span>);  </span><br><span class="line">    <span class="type">char</span> *decimal2 = <span class="built_in">strchr</span>(num2, <span class="string">&#x27;.&#x27;</span>);  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 如果找到小数点  </span></span><br><span class="line">    <span class="keyword">if</span> (decimal1 != <span class="literal">NULL</span> &amp;&amp; decimal2 != <span class="literal">NULL</span>) &#123;  </span><br><span class="line">        <span class="comment">// 提取整数部分和小数部分  </span></span><br><span class="line">        <span class="built_in">strncpy</span>(int_part1, num1, decimal1 - num1);  </span><br><span class="line">        int_part1[decimal1 - num1] = <span class="string">&#x27;\0&#x27;</span>;  </span><br><span class="line">        <span class="built_in">strcpy</span>(decimal_part1, decimal1 + <span class="number">1</span>);  </span><br><span class="line">  </span><br><span class="line">        <span class="built_in">strncpy</span>(int_part2, num2, decimal2 - num2);  </span><br><span class="line">        int_part2[decimal2 - num2] = <span class="string">&#x27;\0&#x27;</span>;  </span><br><span class="line">        <span class="built_in">strcpy</span>(decimal_part2, decimal2 + <span class="number">1</span>);  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// 生成结果字符串  </span></span><br><span class="line">        <span class="built_in">snprintf</span>(result, MAX_LENGTH, <span class="string">&quot;%s.%s %s.%s&quot;</span>, int_part2, decimal_part1, int_part1, decimal_part2);  </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">        <span class="built_in">strcpy</span>(result, <span class="string">&quot;Invalid input format&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;  </span><br><span class="line">    <span class="type">char</span> input1[MAX_LENGTH];  </span><br><span class="line">    <span class="type">char</span> input2[MAX_LENGTH];  </span><br><span class="line">    <span class="type">char</span> result[MAX_LENGTH];  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 从标准输入读取数据  </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter two decimal numbers separated by space: &quot;</span>);  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>, input1, input2);  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 进行整数部分和小数部分的互换  </span></span><br><span class="line">    swap_integer_and_decimal(input1, input2, result);  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 输出结果  </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Swapped result: %s\n&quot;</span>, result);  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三目运算">三目运算</h2><p><strong>题目内容:</strong> 输入四个浮点数，只用三目运算符 (不能用 if等条件语句或循环语句) 找出其中的最大值和最小值。</p><p><strong>输入格式：</strong> 第一行输入四个数值；</p><p><strong>输出格式:</strong> 最大值 最小值 (结果保留两位小数)</p><p><strong>输入样例:</strong> 5 9 3 7.0</p><p><strong>输出样例:</strong> 9.00 3.00 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;  </span><br><span class="line"><span class="type">double</span> a, b, c, d;  </span><br><span class="line"><span class="type">double</span> max, min;  </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf%lf&quot;</span>, &amp;a, &amp;b, &amp;c, &amp;d);  </span><br><span class="line">max = a &gt; b ? a : b;  </span><br><span class="line">max = max &gt; c ? max : c;  </span><br><span class="line">max = max &gt; d ? max : d;  </span><br><span class="line">min = a &gt; b ? b : a;  </span><br><span class="line">min = min &gt; c ? c : min;  </span><br><span class="line">min = min &gt; d ? d : min;  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f %.2f&quot;</span>, max, min);  </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="第四章-程序流程控制">第四章 程序流程控制</h1><h2 id="阿福家的电费">阿福家的电费</h2><p><strong>题目内容：</strong><br />入秋了，家里的用电量也减少了许多。阿福收到了新一期的电费通知单，却发现本期电费与高温天的电费不相上下。杭州现行的阶梯电价是按照年用电量来划分的，这说明阿福家的低价电额度已用完，接下来可得节约用电咯。阿福想自己验证一下，今年以来代扣的总电费到底是否正确。请编写一个程序，已知今年1月份以来的各月用电量，根据电价规定，计算出今年应缴的总电费是多少。<br />杭州现行的阶梯电价标准分三档：<br />第一档：电量为年用电量 2760 度及以下部分，电价不作调整，标准电价为 0.538元 / 度；<br />第二档：电量为年用电量 2761 至 4800 度的部分，电价在第一档基础上加价0.05 元，为 0.588 元 / 度；<br />第三档：电量超过 4800 的部分，电价在第一档基础上加价 0.3 元，为 0.838 元/ 度。<br /><strong>输入格式:</strong><br />输入占一行，给出若干个整数（以输入 - 1 表示结束），分别表示从 1月开始各个月份的用电量（单位是度），注意：-1 不算用电量。</p><p><strong>输出格式：</strong><br />输出总电费（单位是元），结果保留 1 位小数。</p><p><strong>输入样例：</strong><br />468 489 370 363 397 380 712 679 484 453 462 -1</p><p><strong>输出样例：</strong><br />3067.4 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i,sum,a[<span class="number">13</span>];</span><br><span class="line"><span class="type">double</span> r;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i+=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">if</span> (a[i]==<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">sum+=a[i];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (sum&lt;=<span class="number">2760</span>)&#123;</span><br><span class="line">r=sum*<span class="number">0.538</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(sum&gt;<span class="number">2760</span>&amp;&amp;sum&lt;=<span class="number">4800</span>)&#123;</span><br><span class="line">r=<span class="number">2760</span>*<span class="number">0.538</span>+(sum<span class="number">-2760</span>)*<span class="number">0.588</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">r=<span class="number">0.838</span>*(sum<span class="number">-4800</span>)+<span class="number">2760</span>*<span class="number">0.538</span>+(<span class="number">4800</span><span class="number">-2760</span>)*<span class="number">0.588</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.1f&quot;</span>,r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="幂级数求近似值">幂级数求近似值</h2><p><strong>题目内容：</strong> 已知函数 的幂级数展开式为。现给定一个实数 和一个整数 ，利用此幂级数展开式的前 n+1 项之和，求的近似值。</p><p><strong>输入格式:</strong> 输入在一行中给出一个实数 x 和一个整数n。</p><p><strong>输出格式：</strong><br />输出展开式的前 n+1 项之和，保留 4 位小数。</p><p><strong>输入样例：</strong><br />1.2 10</p><p><strong>输出样例：</strong> 3.3201 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="title function_">factorial</span><span class="params">(<span class="type">int</span> n)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> x,r=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> i,n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf %d&quot;</span>,&amp;x,&amp;n);</span><br><span class="line"><span class="keyword">if</span>(n!=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n+<span class="number">1</span>;i+=<span class="number">1</span>)&#123;</span><br><span class="line">r+=<span class="built_in">pow</span>(x,i)/factorial(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.4lf&quot;</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="title function_">factorial</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> result = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        result *= i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="素数口袋">素数口袋</h2><p><strong>题目内容：</strong><br />阿福有一个口袋，可以用来装各个素数。他从 2开始，依次判断各个自然数是不是素数，如果是素数就把这个数字装入口袋。口袋的承载量就是包里所有数字之和，但口袋的承载量有限。假设口袋的承载量是L，表示只能装得下总和不超过 L 的素数。现给出一个正整数L，请问口袋里能装下几个素数？将这些素数从小到大输出，再输出最多能装下的素数个数。</p><p><strong>输入格式:</strong><br />输入一个正整数 L（2&lt;=L&lt;=10000），表示最大承载量。</p><p><strong>输出格式：</strong><br />输出包括两行，第一行从小到大输出能装下的所有素数，数与数之间用空格隔开（注意：行末无空格）<br />第二行输出”count = 素数个数”</p><p><strong>输入样例：</strong><br />100</p><p><strong>输出样例：</strong><br />2 3 5 7 11 13 17 19 23<br />count = 9 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (num &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i * i &lt;= num; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num % i == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> L;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;L);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (sum + num &lt;= L) &#123;</span><br><span class="line">        <span class="keyword">if</span> (isPrime(num)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;<span class="comment">//通过循环处理空格</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, num);</span><br><span class="line">            sum += num;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\ncount = %d&quot;</span>, count);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="第五章-数组">第五章 数组</h1><h2 id="支撑数">支撑数</h2><p><strong>题目内容：</strong> 找出一个数列中全部的“支撑数”。“支撑数”有这样的特征：它们不在第一个，也不在最后一个，而且比左边和右边相邻的数都大。</p><p><strong>输入格式:</strong><br />第一行输入一个整数n，表示数列中有n个整数。（3&lt;=n&lt;=100） 第二行输入n个整数。</p><p><strong>输出格式：</strong><br />分行输出所有的支撑数，每行输出一个支撑数（保证至少有一个）。</p><p><strong>输入样例：</strong><br />6 1 3 2 4 1 5</p><p><strong>输出样例：</strong><br />3 4 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> n,i;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="type">int</span> a[n];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i<span class="number">-1</span>]&lt;a[i]&amp;&amp;a[i]&gt;a[i+<span class="number">1</span>])&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="上三角矩阵">上三角矩阵</h2><p><strong>题目内容：</strong>上三角矩阵指主对角线以下的元素都为0的矩阵（不包括主对角线）；主对角线为从矩阵的左上角至右下角的连线。本题要求编写程序，判断一个给定的方阵是否上三角矩阵。</p><p><strong>输入格式:</strong><br />输入第一行给出一个正整数N（2≤N≤10)。随后N行，每行给出N个整数，其间以空格分隔。</p><p><strong>输出格式：</strong><br />如果输入的矩阵是上三角矩阵，输出YES，否则输出NO。</p><p><strong>输入样例：</strong></p><p>5</p><p>1 2 3 4 5</p><p>0 1 2 3 4</p><p>0 0 1 2 3</p><p>0 0 0 1 2</p><p>0 0 0 0 1</p><p><strong>输出样例：</strong></p><p>YES <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> matrix[n][n];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;matrix[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> isUpperTriangular = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (matrix[i][j]!= <span class="number">0</span>) &#123;</span><br><span class="line">                isUpperTriangular = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!isUpperTriangular) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isUpperTriangular) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="按绝对值排序">按绝对值排序</h2><p><strong>题目内容：</strong>输入n(n&lt;=100)个整数，按照绝对值从大到小排序后输出</p><p><strong>输入格式：</strong><br />输入数据的第一个数字为n，接着是n个整数。</p><p><strong>输出格式：</strong><br />按照绝对值从大到小排序后输出n个整数，两数之间空格隔开，最后一个数后面无空格。</p><p><strong>输入样例：</strong><br />3 3 -4 2</p><p><strong>输出样例：</strong><br />-4 3 2 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 冒泡排序函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubbleSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fabs</span>(arr[j]) &lt; <span class="built_in">fabs</span>(arr[j + <span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="type">int</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> arr[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bubbleSort(arr, n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, arr[n - <span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="第六章-函数">第六章 函数</h1><h2 id="判断是否为完数">判断是否为完数</h2><p><strong>题目内容：</strong>编写函数，判断一个正整数a是否为完数，如果是完数，函数返回值为1；否则为0.（完数：一个数的所有因子之和等于该本身，如6、28都是完数；6=1+2+3；28=1+2+4+7+14）</p><p><strong>输入格式:</strong><br />输入一个正整数。</p><p><strong>输出格式：</strong><br />如果是，输出“是完数”，否则输出“不是完数”</p><p><strong>输入样例1：</strong><br />6</p><p><strong>输出样例1：</strong><br />是完数</p><p><strong>输入样例2：</strong><br />25</p><p><strong>输出样例2：</strong><br />不是完数 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ws</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; num; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num % i == <span class="number">0</span>) &#123;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum == num) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">    <span class="keyword">if</span> (ws(num)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;是完数\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;不是完数\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="递归求-fabonacci-数列">递归求 Fabonacci 数列</h2><p><strong>题目内容：</strong><br />本题要求实现求 Fabonacci 数列项的函数。Fabonacci 数列的定义如下：<br />f (n)=f (n−2)+f (n−1) (n≥2)，其中 f (0)=0，f (1)=1。<br />题目保证输入输出在长整型范围内。建议用递归实现.</p><p><strong>输入格式:</strong><br />输入一个正整数 n</p><p><strong>输出格式：</strong><br />输出 f (n) 的值。</p><p><strong>输入样例：</strong><br />6</p><p><strong>输出样例：</strong><br />8 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> f(n - <span class="number">2</span>) + f(n - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, f(n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="输出一个整数的逆序数10分">输出一个整数的逆序数（10分）</h2><p><strong>题目内容：</strong> 实现一个求整数的逆序数的简单函数。</p><p><strong>输入格式:</strong><br />输入一个整数（可正可负）。</p><p><strong>输出格式：</strong><br />输出它的逆序，注意考虑正负。</p><p><strong>输入样例1：</strong><br />1234</p><p><strong>输出样例1：</strong><br />4321</p><p><strong>输入样例2：</strong><br />-12340</p><p><strong>输出样例2：</strong><br />-4321 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">reverse</span><span class="params">( <span class="type">int</span> number )</span>;</span><br><span class="line">    </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, reverse(n));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">reverse</span><span class="params">( <span class="type">int</span> num)</span>&#123;</span><br><span class="line"><span class="type">int</span> r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (num!= <span class="number">0</span>) &#123;</span><br><span class="line">        r=r*<span class="number">10</span>+num%<span class="number">10</span>;</span><br><span class="line">        num/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="第七章-指针">第七章 指针</h1><h2 id="删除数列中的指定数">删除数列中的指定数</h2><p><strong>题目内容：</strong>请使用指针的方法编写程序，程序的功能是先输入10个整数存储到数组a中，再输入一个指定的数x，把数组中的x数据删除掉，并保证数组中剩余的数还是连续存储的。</p><p>比如输入10个整数：3 2 8 6 5 8 7 9 85，存入数组，然后输入一个数8，把数组中的8全部删除。最后数组中剩下的数：32 6 5 7 9 5，在数组a中还是连续存储的。</p><p>要求定义函数实现删除功能：int del_num(int *p, int n, intx)；其中函数的返回值为删除指定数后数组中剩余数据的个数。</p><p><strong>输入格式:</strong><br />输入10个整数，和1个指定数。</p><p><strong>输出格式：</strong><br />输出剩余数，以空格隔开，最后一个数后面没有空格。</p><p><strong>输入样例：</strong><br />3 2 8 6 5 8 7 9 8 5 8</p><p><strong>输出样例：</strong><br />3 2 6 5 7 9 5 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">del_num</span><span class="params">(<span class="type">int</span> *p, <span class="type">int</span> n, <span class="type">int</span> x)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    <span class="type">int</span> newLength = del_num(a, <span class="number">10</span>, x);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; newLength; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; newLength - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">del_num</span><span class="params">(<span class="type">int</span> *p, <span class="type">int</span> n, <span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p[i]!= x) &#123;</span><br><span class="line">            p[j++] = p[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2id="求一组数中的最大值最小值及总和">求一组数中的最大值、最小值及总和</h2><p><strong>题目内容：</strong>求一组数中的最大值、最小值及总和。要求定义函数 int f(int a[],int n,int<em>pmax,int </em>pmin) 函数返回总和，并分别通过指针pmax 和pmin将最大值、最小值赋值给主函数中的对应变量。</p><p><strong>输入格式:</strong><br />第1行为正整数n（n&gt;2）,表示一组数的个数第2行包含n个整数，用空格分隔。</p><p><strong>输出格式：</strong><br />一行包含3个整数，分别为最大值、最小值及总和</p><p><strong>输入样例：</strong><br />10 2 5 4 8 6 9 1 3 7 0</p><p><strong>输出样例：</strong><br />9 0 45 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n, <span class="type">int</span> *pmax, <span class="type">int</span> *pmin)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">int</span> a[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> max, min;</span><br><span class="line">    <span class="type">int</span> sum = f(a, n, &amp;max, &amp;min);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d&quot;</span>, max, min, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n, <span class="type">int</span> *pmax, <span class="type">int</span> *pmin)</span> &#123;</span><br><span class="line">    *pmax = a[<span class="number">0</span>];</span><br><span class="line">    *pmin = a[<span class="number">0</span>];</span><br><span class="line">    <span class="type">int</span> sum = a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt; *pmax) &#123;</span><br><span class="line">            *pmax = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; *pmin) &#123;</span><br><span class="line">            *pmin = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        sum += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="第八章-字符串">第八章 字符串</h1><h2 id="查找字符串">查找字符串</h2><p><strong>题目内容：</strong>给定一个字符串，在字符串中找到第一个连续出现至少k次的字符。</p><p><strong>输入格式:</strong><br />第一行包含一个正整数k，表示至少需要连续出现的次数。1 &lt;= k &lt;= 100。第二行包含需要查找的字符串。字符串长度在1到100之间，且不包含任何空白符。</p><p><strong>输出格式：</strong><br />若存在连续出现至少k次的字符，输出该字符；否则输出NO。</p><p><strong>输入样例1：</strong><br />3 abcccaaab</p><p><strong>输出样例1：</strong><br />c</p><p><strong>输入样例2：</strong><br />3 abccaab</p><p><strong>输出样例2：</strong><br />NO <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">    <span class="type">char</span> s[<span class="number">101</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s);</span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="type">int</span> count = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; len; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[j] == s[i]) &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count &gt;= k) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, s[i]);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="求最大字符串">求最大字符串</h2><p><strong>题目内容：</strong>本题要求编写程序，针对输入的N个字符串，输出其中最大的字符串。</p><p><strong>输入格式：</strong><br />输入第一行给出正整数N；随后N行，每行给出一个长度小于80的非空字符串，其中不会出现换行符，空格，制表符。</p><p><strong>输出格式：</strong><br />输出最大的字符串。</p><p><strong>输入样例：</strong><br />6<br />best cat east a free day</p><p><strong>输出样例：</strong><br />free <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">char</span> maxStr[<span class="number">80</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, maxStr);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="type">char</span> str[<span class="number">80</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(str, maxStr) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(maxStr, str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, maxStr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="第九章-结构体">第九章 结构体</h1><h2 id="最高分的学生">最高分的学生</h2><p><strong>题目内容：</strong>输入学生的人数，然后再输入每位学生的分数和姓名，求获得最高分数的学生的姓名。</p><p><strong>输入格式:</strong><br />第一行输入一个正整数N（N &lt;=100），表示学生人数。接着输入N行，每行格式如下： 分数 姓名分数是一个非负整数，且小于等于100；姓名为一个连续的字符串，中间没有空格，长度不超过20。</p><p><strong>输出格式：</strong><br />输出最高分数的学生姓名。每行包含一个姓名</p><p><strong>输入样例：</strong><br />5 87 lilei 99 hanmeimei 97 lily 99 lucy 77 jim</p><p><strong>输出样例：</strong><br />hanmeimei lucy <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">21</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">students</span>[<span class="title">n</span>];</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %s&quot;</span>, &amp;students[i].score, students[i].name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> maxScore = students[<span class="number">0</span>].score;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (students[i].score &gt; maxScore) &#123;</span><br><span class="line">            maxScore = students[i].score;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (students[i].score == maxScore) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, students[i].name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="计算平均成绩">计算平均成绩</h2><p><strong>题目内容：</strong>给定N个学生的基本信息，包括学号（由5个数字组成的字符串）、姓名（长度小于10的不包含空白字符的非空字符串）和成绩（[0,100]区间内的整数），要求计算他们的平均成绩，并顺序输出平均线以下的学生名单。</p><p><strong>输入格式:</strong><br />输入在一行中给出正整数N（≤10）。随后N行，每行给出一位学生的信息，格式为“学号姓名 成绩”，中间以空格分隔。</p><p><strong>输出格式：</strong><br />首先在一行中输出平均成绩，保留2位小数。然后按照输入顺序，每行输出一位平均线以下的学生的姓名和学号，间隔一个空格。</p><p><strong>输入样例：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">5</span></span><br><span class="line"><span class="attribute">00001</span> zhang <span class="number">70</span></span><br><span class="line"><span class="attribute">00002</span> wang <span class="number">80</span></span><br><span class="line"><span class="attribute">00003</span> qian <span class="number">90</span></span><br><span class="line"><span class="attribute">10001</span> li <span class="number">100</span></span><br><span class="line"><span class="attribute">21987</span> chen <span class="number">60</span></span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong><br /><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">80</span>.<span class="number">00</span></span><br><span class="line"><span class="attribute">zhang</span> <span class="number">00001</span></span><br><span class="line"><span class="attribute">chen</span> <span class="number">21987</span></span><br></pre></td></tr></table></figure> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> id[<span class="number">6</span>];</span><br><span class="line">    <span class="type">char</span> name[<span class="number">10</span>];</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">students</span>[<span class="title">n</span>];</span></span><br><span class="line">    <span class="type">int</span> total_score = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s %s %d&quot;</span>, students[i].id, students[i].name, &amp;students[i].score);</span><br><span class="line">        total_score += students[i].score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> average_score = (<span class="type">double</span>)total_score / n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, average_score);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (students[i].score &lt; average_score) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>, students[i].name, students[i].id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="第十章-文件">第十章 文件</h1><p>无练习</p><h1 id="线上期末考试">线上期末考试</h1><h2 id="计算行李费">计算行李费</h2><p><strong>题目内容：</strong>乘坐飞机时，当乘客行李重量不超过10公斤时，可随身携带行李免费。当行李重量超过10公斤时，必须办理托运。行李费这样计算量大于10公斤且小于等于20公斤时，每公斤2元。如果行李重量大于20公斤时，每公斤3元。请编程计算行李费。</p><p><strong>输入格式:</strong>一个正整数（&lt;100），乘客携带行李重量，单位公斤</p><p><strong>输出格式:</strong> 一个整数，表示行李费用</p><p><strong>输入样例：</strong> 11</p><p><strong>输出样例：</strong> 22</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> weight;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;weight);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> fee;</span><br><span class="line"><span class="keyword">if</span>(weight&lt;=<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">fee=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(weight&gt;<span class="number">10</span>&amp;&amp;weight&lt;=<span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">fee=weight*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(weight&gt;<span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">fee=weight*<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,fee);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="行程长度压缩">行程长度压缩</h2><p><strong>题目内容：</strong>在数据压缩中，一个常用的途径是行程长度压缩。对于一个待压缩的字符串（只包含大写字母）而言，我们可以依次记录每个字符及重复的次数。这种压缩，对于相邻数据重复较多的情况比较有效。例如，如果待压缩串为"AAABBBBCBB"，则压缩的结果是(A,3)(B,4)(C,1)(B,2)。当然，如果相邻字符重复情况较少，则压缩效率就较低。现要求根据输入的字符串，得到压缩结果。</p><p><strong>输入格式:</strong>一个字符串，全部由大写字母组成。长度大于1，小于10000</p><p><strong>输出格式：</strong> 输出为一行，表示压缩结果，形式为：(A,3)(B,4)(C,1)(B,2)即每对括号内部分别为字符及重复出现的次数，不含任何空格。</p><p><strong>输入样例：</strong> AAABBBBCCCAAAAA</p><p><strong>输出样例：</strong> (A,3)(B,4)(C,3)(A,5)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">10000</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(str);</span><br><span class="line">    <span class="type">int</span> count = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] == str[i + <span class="number">1</span>]) &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;(%c,%d)&quot;</span>, str[i], count);</span><br><span class="line">            count = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> c语言 </tag>
            
            <tag> 杭电 </tag>
            
            <tag> Mooc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的markdown学习</title>
      <link href="/2024/08/23/%E6%88%91%E7%9A%84markdown%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/08/23/%E6%88%91%E7%9A%84markdown%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="序言">序言</h1><p>这是笔者的markdown学习笔记 <span id="more"></span></p><hr /><h1 id="文本">文本</h1><p><strong>加粗文本1</strong> <strong>加粗文本2</strong> <em>斜体1</em><em>斜体2</em> <strong><em>加粗+斜体</em></strong> <del>中划线</del>分割线</p><hr /><h1 id="列表">列表</h1><ul><li>无序列表1</li><li>无序列表2</li></ul><ol type="1"><li>有序列表1<ul><li>二级列表<ul><li>三级列表</li></ul></li></ul></li><li>有序列表2（只能按顺序，第一项可自定义)</li></ol><p>退出列表 * [ ] 任务打勾1（未完成） * [x] 任务打勾2（已完成）</p><hr /><h1 id="代码">代码</h1><p>代码块 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123; <span class="built_in">printf</span>(<span class="string">&quot;Hello, World!\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> 代码语句<code>printf()</code></p><hr /><h1 id="引用">引用</h1><blockquote><p>引用<br />引用中换行</p></blockquote><hr /><h1 id="链接">链接</h1><p><a href="https://www.gov.cn/">链接</a>&lt;——点它</p><p><ahref="https://www.bilibili.com/video/BV18E4m1d7b7/?spm_id_from=333.337.search-card.all.click&amp;vd_source=da905aeb41d3bbab09f2abf41b856272">不要点我</a></p><p>展示脚注<a href="#fn1" class="footnote-ref" id="fnref1"role="doc-noteref"><sup>1</sup></a></p><hr /><h1 id="图片">图片</h1><p>图片的插入 网络 <imgsrc="https://patchwiki.biligame.com/images/ys/2/2e/ang2w3cxk8535wicpksvz6pq0xoxbwi.png"alt="图片网络链接" />图片（做了图床用的gitee，但是好像不行。现在是用现成的） <imgsrc="https://pic.imgdb.cn/item/66c86b27d9c307b7e9722e08.jpg"alt="本地图片" /> 用gitee的 <imgsrc="https://gitee.com/Even_lwx/images/raw/master/ymh.jpg"alt="ymh" /></p><hr /><h1 id="表格">表格</h1><table><thead><tr class="header"><th style="text-align: center;">姓名</th><th style="text-align: center;">年龄</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">小明</td><td style="text-align: center;">17</td></tr><tr class="even"><td style="text-align: center;">小豪</td><td style="text-align: center;">18</td></tr></tbody></table><hr /><h1 id="自制html内容">自制HTML内容</h1><p>不会！！！</p><hr /><h1 id="tag插件高亮">Tag插件（高亮）</h1><div class="note warning flat"><p>我是警告色（高亮文本）</p></div><p>方法 <imgsrc="https://pic.imgdb.cn/item/66c88f63d9c307b7e9afbf44.png" /></p><hr /><h1 id="数学公式嵌入需要另外渲染">数学公式嵌入（需要另外渲染）</h1><p><span class="math inline">\(x=1+y\)</span> <spanclass="math display">\[\frac{x+1}{20-x}\]</span> <span class="math display">\[x_2^2\]</span> <span class="math display">\[\sqrt[3]{\{[(4+x)-3]*3\}}\]</span> 符号 <span class="math display">\[\not=         \approx\leq\geq\times\div\pm\sum_0^n\prod\coprod\overline{1+2+3+4}\]</span> 常见表达 <span class="math display">\[\alpha\beta\mu\epsilon180^\circ\sin\pi\cos\cot\tan\in\notin\supset\supseteq\bigcap\bigcup\emptyset\infty\int\iinty\prime\lim\]</span> 排版 <span class="math display">\[\int_0^1x^2dx\]</span> <span class="math display">\[\lim_{n\rightarrow+\infty} \frac{1}{n}\]</span></p><hr /><h1 id="尾声">尾声</h1><p>目前内容的源码稍后上传 持续更新中 ——2024.8.23</p><hr /><section id="footnotes" class="footnotes footnotes-end-of-document"role="doc-endnotes"><hr /><ol><li id="fn1"><p>我是脚注<a href="#fnref1" class="footnote-back"role="doc-backlink">↩︎</a></p></li></ol></section>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客-学习日志</title>
      <link href="/2024/08/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/08/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>大家好 明天再学md语法！今天配置网站顶不住了。 ————2024.8.22</p><p>昨天连不上git库的原因时watt tookit没有关 配置的时候一定要注意！！！今天下午学了markdown语法 ————2024.8.23</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
